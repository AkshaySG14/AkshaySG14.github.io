!function(e){function t(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}var n={};t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="/",t(t.s=145)}([function(e,t,n){"use strict";e.exports=n(153)},function(e,t,n){e.exports=n(163)()},function(e,t,n){"use strict";function r(e,t){e.prototype=o()(t.prototype),e.prototype.constructor=e,e.__proto__=t}t.a=r;var i=n(282),o=n.n(i)},function(e,t,n){"use strict";function r(){return r=o.a||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},r.apply(this,arguments)}t.a=r;var i=n(96),o=n.n(i)},function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,i={},a=s()(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);if(o.a){var l=o()(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}t.a=r;var i=n(287),o=n.n(i),a=n(296),s=n.n(a)},function(e,t,n){var r,i;!function(){"use strict";function n(){for(var e=[],t=0;t<arguments.length;t++){var r=arguments[t];if(r){var i=typeof r;if("string"===i||"number"===i)e.push(r);else if(Array.isArray(r)&&r.length){var a=n.apply(null,r);a&&e.push(a)}else if("object"===i)for(var s in r)o.call(r,s)&&r[s]&&e.push(s)}}return e.join(" ")}var o={}.hasOwnProperty;"undefined"!==typeof e&&e.exports?(n.default=n,e.exports=n):(r=[],void 0!==(i=function(){return n}.apply(t,r))&&(e.exports=i))}()},function(e,t,n){"use strict";function r(e){return function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return"function"===typeof n[n.length-1]?e.apply(void 0,n):function(t){return e.apply(void 0,n.concat([t]))}}}function i(e,t){var n=(e.bsClass||"").trim();return null==n&&h()(!1),n+(t?"-"+t:"")}function o(e){var t,n=(t={},t[i(e)]=!0,t);if(e.bsSize){n[i(e,y.b[e.bsSize]||e.bsSize)]=!0}return e.bsStyle&&(n[i(e,e.bsStyle)]=!0),n}function a(e){return{bsClass:e.bsClass,bsSize:e.bsSize,bsStyle:e.bsStyle,bsRole:e.bsRole}}function s(e){return"bsClass"===e||"bsSize"===e||"bsStyle"===e||"bsRole"===e}function l(e){var t={};return d()(e).forEach(function(e){var n=e[0],r=e[1];s(n)||(t[n]=r)}),[a(e),t]}function c(e,t){var n={};t.forEach(function(e){n[e]=!0});var r={};return d()(e).forEach(function(e){var t=e[0],i=e[1];s(t)||n[t]||(r[t]=i)}),[a(e),r]}t.e=i,n.d(t,"a",function(){return b}),n.d(t,"c",function(){return v}),n.d(t,"b",function(){return w}),t.d=o,t.f=l,t.g=c;var u=n(107),d=n.n(u),p=n(3),f=n(28),h=n.n(f),m=n(1),g=n.n(m),y=n(12),b=r(function(e,t){var n=t.propTypes||(t.propTypes={}),r=t.defaultProps||(t.defaultProps={});return n.bsClass=g.a.string,r.bsClass=e,t}),v=r(function(e,t,n){"string"!==typeof t&&(n=t,t=void 0);var r=n.STYLES||[],i=n.propTypes||{};e.forEach(function(e){-1===r.indexOf(e)&&r.push(e)});var o=g.a.oneOf(r);if(n.STYLES=r,o._values=r,n.propTypes=Object(p.a)({},i,{bsStyle:o}),void 0!==t){(n.defaultProps||(n.defaultProps={})).bsStyle=t}return n}),w=r(function(e,t,n){"string"!==typeof t&&(n=t,t=void 0);var r=n.SIZES||[],i=n.propTypes||{};e.forEach(function(e){-1===r.indexOf(e)&&r.push(e)});var o=[];r.forEach(function(e){var t=y.b[e];t&&t!==e&&o.push(t),o.push(e)});var a=g.a.oneOf(o);return a._values=o,n.SIZES=r,n.propTypes=Object(p.a)({},i,{bsSize:a}),void 0!==t&&(n.defaultProps||(n.defaultProps={}),n.defaultProps.bsSize=t),n})},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var i=n(191);Object.defineProperty(t,"PrismCode",{enumerable:!0,get:function(){return r(i).default}}),Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(i).default}})},function(e,t){},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t,n,r,i){var o=e[t];return a.default.isValidElement(o)?new Error("Invalid "+r+" `"+i+"` of type ReactElement supplied to `"+n+"`,expected an element type (a string , component class, or function component)."):(0,s.isValidElementType)(o)?null:new Error("Invalid "+r+" `"+i+"` of value `"+o+"` supplied to `"+n+"`, expected an element type (a string , component class, or function component).")}Object.defineProperty(t,"__esModule",{value:!0});var o=n(0),a=r(o),s=n(308),l=n(48),c=r(l);t.default=(0,c.default)(i),e.exports=t.default},function(e,t,n){"use strict";function r(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter(function(e){return null!=e}).reduce(function(e,t){if("function"!==typeof t)throw new Error("Invalid Argument Type, must only provide functions, undefined, or null.");return null===e?t:function(){for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];e.apply(this,r),t.apply(this,r)}},null)}t.a=r},function(e,t,n){"use strict";function r(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}t.a=r},function(e,t,n){"use strict";n.d(t,"c",function(){return r}),n.d(t,"b",function(){return i}),n.d(t,"a",function(){return o}),n.d(t,"d",function(){return a}),n.d(t,"e",function(){return s});var r={LARGE:"large",SMALL:"small",XSMALL:"xsmall"},i={large:"lg",medium:"md",small:"sm",xsmall:"xs",lg:"lg",md:"md",sm:"sm",xs:"xs"},o=["lg","md","sm","xs"],a={SUCCESS:"success",WARNING:"warning",DANGER:"danger",INFO:"info"},s={DEFAULT:"default",PRIMARY:"primary",LINK:"link",INVERSE:"inverse"}},function(e,t,n){"use strict";function r(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(r)}catch(e){console.error(e)}}r(),e.exports=n(154)},function(e,t,n){"use strict";function r(e,t,n){var r=0;return p.a.Children.map(e,function(e){return p.a.isValidElement(e)?t.call(n,e,r++):e})}function i(e,t,n){var r=0;p.a.Children.forEach(e,function(e){p.a.isValidElement(e)&&t.call(n,e,r++)})}function o(e){var t=0;return p.a.Children.forEach(e,function(e){p.a.isValidElement(e)&&++t}),t}function a(e,t,n){var r=0,i=[];return p.a.Children.forEach(e,function(e){p.a.isValidElement(e)&&t.call(n,e,r++)&&i.push(e)}),i}function s(e,t,n){var r,i=0;return p.a.Children.forEach(e,function(e){r||p.a.isValidElement(e)&&t.call(n,e,i++)&&(r=e)}),r}function l(e,t,n){var r=0,i=!0;return p.a.Children.forEach(e,function(e){i&&p.a.isValidElement(e)&&(t.call(n,e,r++)||(i=!1))}),i}function c(e,t,n){var r=0,i=!1;return p.a.Children.forEach(e,function(e){i||p.a.isValidElement(e)&&t.call(n,e,r++)&&(i=!0)}),i}function u(e){var t=[];return p.a.Children.forEach(e,function(e){p.a.isValidElement(e)&&t.push(e)}),t}var d=n(0),p=n.n(d);t.a={map:r,forEach:i,count:o,find:s,filter:a,every:l,some:c,toArray:u}},function(e,t,n){"use strict";var r=function(){};e.exports=r},function(e,t){var n=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=n)},function(e,t,n){"use strict";function r(e){return!e||"#"===e.trim()}var i=n(3),o=n(4),a=n(2),s=n(11),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(9),f=n.n(p),h=n(10),m={href:d.a.string,onClick:d.a.func,onKeyDown:d.a.func,disabled:d.a.bool,role:d.a.string,tabIndex:d.a.oneOfType([d.a.number,d.a.string]),componentClass:f.a},g={componentClass:"a"},y=function(e){function t(t,n){var r;return r=e.call(this,t,n)||this,r.handleClick=r.handleClick.bind(Object(s.a)(r)),r.handleKeyDown=r.handleKeyDown.bind(Object(s.a)(r)),r}Object(a.a)(t,e);var n=t.prototype;return n.handleClick=function(e){var t=this.props,n=t.disabled,i=t.href,o=t.onClick;if((n||r(i))&&e.preventDefault(),n)return void e.stopPropagation();o&&o(e)},n.handleKeyDown=function(e){" "===e.key&&(e.preventDefault(),this.handleClick(e))},n.render=function(){var e=this.props,t=e.componentClass,n=e.disabled,a=e.onKeyDown,s=Object(o.a)(e,["componentClass","disabled","onKeyDown"]);return r(s.href)&&(s.role=s.role||"button",s.href=s.href||"#"),n&&(s.tabIndex=-1,s.style=Object(i.a)({pointerEvents:"none"},s.style)),c.a.createElement(t,Object(i.a)({},s,{onClick:this.handleClick,onKeyDown:Object(h.a)(this.handleKeyDown,a)}))},t}(c.a.Component);y.propTypes=m,y.defaultProps=g,t.a=y},function(e,t,n){var r=n(67)("wks"),i=n(46),o=n(24).Symbol,a="function"==typeof o;(e.exports=function(e){return r[e]||(r[e]=a&&o[e]||(a?o:i)("Symbol."+e))}).store=r},function(e,t,n){"use strict";var r=(n(275),n(303),n(306),n(307),n(110),n(43),n(73),n(310),n(311),n(111),n(321),n(322),n(72),n(323),n(324));n.d(t,"a",function(){return r.a});var i=(n(76),n(50),n(342));n.d(t,"b",function(){return i.a});var o=(n(53),n(343),n(344),n(347),n(75),n(119),n(348),n(349));n.d(t,"c",function(){return o.a});var a=(n(350),n(353),n(354),n(355),n(120),n(54),n(362));n.d(t,"d",function(){return a.a});var s=(n(363),n(125),n(126),n(127),n(128),n(129),n(130));n.d(t,"e",function(){return s.a});var l=n(378);n.d(t,"g",function(){return l.a});var c=(n(131),n(382),n(132));n.d(t,"f",function(){return c.a});n(133),n(389),n(390),n(391),n(393),n(394),n(396),n(103),n(402),n(403),n(404),n(405),n(406),n(17),n(407),n(409),n(82),n(83),n(410),n(139),n(411),n(412),n(140),n(413),n(414),n(415),n(416)},function(e,t,n){var r=n(24),i=n(16),o=n(97),a=n(38),s=n(26),l=function(e,t,n){var c,u,d,p=e&l.F,f=e&l.G,h=e&l.S,m=e&l.P,g=e&l.B,y=e&l.W,b=f?i:i[t]||(i[t]={}),v=b.prototype,w=f?r:h?r[t]:(r[t]||{}).prototype;f&&(n=t);for(c in n)(u=!p&&w&&void 0!==w[c])&&s(b,c)||(d=u?w[c]:n[c],b[c]=f&&"function"!=typeof w[c]?n[c]:g&&u?o(d,r):y&&w[c]==d?function(e){var t=function(t,n,r){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,r)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(d):m&&"function"==typeof d?o(Function.call,d):d,m&&((b.virtual||(b.virtual={}))[c]=d,e&l.R&&v&&!v[c]&&a(v,c,d)))};l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,e.exports=l},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=!("undefined"===typeof window||!window.document||!window.document.createElement),e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}function o(e,t,n){for(var r=t.length-1;r>=0;r--){var i=t[r](e);if(i)return i}return function(t,r){throw new Error("Invalid value of type "+typeof e+" for "+n+" argument when connecting component "+r.wrappedComponentName+".")}}function a(e,t){return e===t}function s(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.connectHOC,n=void 0===t?u.default:t,r=e.mapStateToPropsFactories,s=void 0===r?g.default:r,c=e.mapDispatchToPropsFactories,d=void 0===c?h.default:c,f=e.mergePropsFactories,m=void 0===f?b.default:f,y=e.selectorFactory,v=void 0===y?w.default:y;return function(e,t,r){var c=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},u=c.pure,f=void 0===u||u,h=c.areStatesEqual,g=void 0===h?a:h,y=c.areOwnPropsEqual,b=void 0===y?p.default:y,w=c.areStatePropsEqual,x=void 0===w?p.default:w,T=c.areMergedPropsEqual,S=void 0===T?p.default:T,C=i(c,["pure","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","areMergedPropsEqual"]),k=o(e,s,"mapStateToProps"),O=o(t,d,"mapDispatchToProps"),E=o(r,m,"mergeProps");return n(v,l({methodName:"connect",getDisplayName:function(e){return"Connect("+e+")"},shouldHandleStateChanges:Boolean(e),initMapStateToProps:k,initMapDispatchToProps:O,initMergeProps:E,pure:f,areStatesEqual:g,areOwnPropsEqual:b,areStatePropsEqual:x,areMergedPropsEqual:S},C))}}t.__esModule=!0;var l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};t.createConnect=s;var c=n(503),u=r(c),d=n(506),p=r(d),f=n(507),h=r(f),m=n(517),g=r(m),y=n(518),b=r(y),v=n(519),w=r(v);t.default=s()},function(e,t,n){"use strict";function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,"f",function(){return o}),n.d(t,"e",function(){return a}),n.d(t,"g",function(){return s}),n.d(t,"b",function(){return l}),n.d(t,"h",function(){return c}),n.d(t,"j",function(){return u}),n.d(t,"a",function(){return d}),n.d(t,"c",function(){return p}),n.d(t,"d",function(){return f}),n.d(t,"l",function(){return h}),n.d(t,"k",function(){return m}),n.d(t,"i",function(){return g});var i,o="Website",a="Fate's Reprise",s="Map Blue",l="Dark and Light",c="Memori",u="Pixel Knight",d="Color Synthesizer",p="Document Encryptor",f="File Encryptor",h="Traffic Director",m="Space Shooter",g=(i={},r(i,o,0),r(i,a,1),r(i,s,2),r(i,l,3),r(i,c,4),r(i,u,5),r(i,d,6),r(i,p,7),r(i,f,8),r(i,h,9),r(i,m,10),i)},function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t,n){var r=n(39),i=n(98),o=n(62),a=Object.defineProperty;t.f=n(29)?Object.defineProperty:function(e,t,n){if(r(e),t=o(t,!0),r(n),i)try{return a(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function o(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}function a(e,t,n){void 0===n&&(n=[]);var r=e.displayName||e.name||"Component",c=l.isReactComponent(e),u=Object.keys(t),d=u.map(l.defaultKey);!c&&n.length&&invariant(!1);var p=function(n){function r(){for(var e,r=arguments.length,i=new Array(r),o=0;o<r;o++)i[o]=arguments[o];return e=n.call.apply(n,[this].concat(i))||this,e.handlers=Object.create(null),u.forEach(function(n){var r=t[n],i=function(t){if(e.props[r]){var i;e._notifying=!0;for(var o=arguments.length,a=new Array(o>1?o-1:0),s=1;s<o;s++)a[s-1]=arguments[s];(i=e.props)[r].apply(i,[t].concat(a)),e._notifying=!1}e._values[n]=t,e.unmounted||e.forceUpdate()};e.handlers[r]=i}),c&&(e.attachRef=function(t){e.inner=t}),e}o(r,n);var a=r.prototype;return a.shouldComponentUpdate=function(){return!this._notifying},a.componentWillMount=function(){var e=this,t=this.props;this._values=Object.create(null),u.forEach(function(n){e._values[n]=t[l.defaultKey(n)]})},a.componentWillReceiveProps=function(e){var t=this,n=this.props;u.forEach(function(r){!l.isProp(e,r)&&l.isProp(n,r)&&(t._values[r]=e[l.defaultKey(r)])})},a.componentWillUnmount=function(){this.unmounted=!0},a.getControlledInstance=function(){return this.inner},a.render=function(){var t=this,n=i({},this.props);d.forEach(function(e){delete n[e]});var r={};return u.forEach(function(e){var n=t.props[e];r[e]=void 0!==n?n:t._values[e]}),s.default.createElement(e,i({},n,r,this.handlers,{ref:this.attachRef}))},r}(s.default.Component);return p.displayName="Uncontrolled("+r+")",p.propTypes=l.uncontrolledPropTypes(t,r),n.forEach(function(e){p.prototype[e]=function(){var t;return(t=this.inner)[e].apply(t,arguments)}}),p.ControlledComponent=e,p.deferControlTo=function(e,n,r){return void 0===n&&(n={}),a(e,i({},t,n),r)},p}t.__esModule=!0,t.default=a;var s=r(n(0)),l=(r(n(28)),function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}return t.default=e,t}(n(300)));e.exports=t.default},function(e,t,n){"use strict";var r=function(e,t,n,r,i,o,a,s){if(!e){var l;if(void 0===t)l=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,i,o,a,s],u=0;l=new Error(t.replace(/%s/g,function(){return c[u++]})),l.name="Invariant Violation"}throw l.framesToPop=1,l}};e.exports=r},function(e,t,n){e.exports=!n(30)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){var r=n(100),i=n(68);e.exports=Object.keys||function(e){return r(e,i)}},function(e,t,n){var r=n(101),i=n(64);e.exports=function(e){return r(i(e))}},function(e,t,n){e.exports=n(304)},function(e,t,n){"use strict";function r(e){return e&&e.ownerDocument||document}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r,e.exports=t.default},function(e,t,n){"use strict";function r(e,t){if(t)do{if(t===e)return!0}while(t=t.parentNode);return!1}Object.defineProperty(t,"__esModule",{value:!0});var i=n(21),o=function(e){return e&&e.__esModule?e:{default:e}}(i);t.default=function(){return o.default?function(e,t){return e.contains?e.contains(t):e.compareDocumentPosition?e===t||!!(16&e.compareDocumentPosition(t)):r(e,t)}:r}(),e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0,t.default=function(e){return(0,s.default)(o.default.findDOMNode(e))};var i=n(13),o=r(i),a=n(34),s=r(a);e.exports=t.default},function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"===typeof window&&(n=window)}e.exports=n},function(e,t,n){var r=n(25),i=n(41);e.exports=n(29)?function(e,t,n){return r.f(e,t,i(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var r=n(40);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},function(e,t){e.exports=function(e){return"object"===typeof e?null!==e:"function"===typeof e}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t,n){"use strict";var r=n(33),i=n.n(r),o=n(4),a=n(3),s=n(2),l=n(5),c=n.n(l),u=n(0),d=n.n(u),p=n(1),f=n.n(p),h=n(9),m=n.n(h),g=n(6),y=n(12),b=n(17),v={active:f.a.bool,disabled:f.a.bool,block:f.a.bool,onClick:f.a.func,componentClass:m.a,href:f.a.string,type:f.a.oneOf(["button","reset","submit"])},w={active:!1,block:!1,disabled:!1},x=function(e){function t(){return e.apply(this,arguments)||this}Object(s.a)(t,e);var n=t.prototype;return n.renderAnchor=function(e,t){return d.a.createElement(b.a,Object(a.a)({},e,{className:c()(t,e.disabled&&"disabled")}))},n.renderButton=function(e,t){var n=e.componentClass,r=Object(o.a)(e,["componentClass"]),i=n||"button";return d.a.createElement(i,Object(a.a)({},r,{type:r.type||"button",className:t}))},n.render=function(){var e,t=this.props,n=t.active,r=t.block,i=t.className,s=Object(o.a)(t,["active","block","className"]),l=Object(g.f)(s),u=l[0],d=l[1],p=Object(a.a)({},Object(g.d)(u),(e={active:n},e[Object(g.e)(u,"block")]=r,e)),f=c()(i,p);return d.href?this.renderAnchor(d,f):this.renderButton(d,f)},t}(d.a.Component);x.propTypes=v,x.defaultProps=w,t.a=Object(g.a)("btn",Object(g.b)([y.c.LARGE,y.c.SMALL,y.c.XSMALL],Object(g.c)(i()(y.d).concat([y.e.DEFAULT,y.e.PRIMARY,y.e.LINK]),y.e.DEFAULT,x)))},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t,n){var r="",i="",o=t;if("string"===typeof t){if(void 0===n)return e.style[(0,a.default)(t)]||(0,u.default)(e).getPropertyValue((0,l.default)(t));(o={})[t]=n}Object.keys(o).forEach(function(t){var n=o[t];n||0===n?(0,m.default)(t)?i+=t+"("+n+") ":r+=(0,l.default)(t)+": "+n+";":(0,p.default)(e,(0,l.default)(t))}),i&&(r+=f.transform+": "+i+";"),e.style.cssText+=";"+r}Object.defineProperty(t,"__esModule",{value:!0}),t.default=i;var o=n(112),a=r(o),s=n(316),l=r(s),c=n(318),u=r(c),d=n(319),p=r(d),f=n(74),h=n(320),m=r(h);e.exports=t.default},function(e,t){e.exports=!0},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},function(e,t,n){var r=n(64);e.exports=function(e){return Object(r(e))}},function(e,t,n){"use strict";function r(e){function t(t,n,r,i,o,a){var s=i||"<<anonymous>>",l=a||r;if(null==n[r])return t?new Error("Required "+o+" `"+l+"` was not specified in `"+s+"`."):null;for(var c=arguments.length,u=Array(c>6?c-6:0),d=6;d<c;d++)u[d-6]=arguments[d];return e.apply(void 0,[n,r,s,o,l].concat(u))}var n=t.bind(null,!1);return n.isRequired=t.bind(null,!0),n}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r,e.exports=t.default},function(e,t,n){"use strict";function r(){function e(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];var i=null;return n.forEach(function(e){if(null==i){var n=e.apply(void 0,t);null!=n&&(i=n)}}),i}for(var t=arguments.length,n=Array(t),r=0;r<t;r++)n[r]=arguments[r];return(0,o.default)(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r;var i=n(48),o=function(e){return e&&e.__esModule?e:{default:e}}(i);e.exports=t.default},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(11),s=n(5),l=n.n(s),c=n(115),u=n.n(c),d=n(35),p=n.n(d),f=n(77),h=n.n(f),m=n(0),g=n.n(m),y=n(1),b=n.n(y),v=n(13),w=n.n(v),x=n(49),T=n.n(x),S=n(9),C=n.n(S),k=n(51),O=n.n(k),E=n(27),P=n.n(E),j=n(15),I=(n.n(j),n(73)),_=n(327),R=n(118),A=n(6),N=n(10),B=n(109),M=n(14),L=R.a.defaultProps.bsRole,D=_.a.defaultProps.bsRole,G={dropup:b.a.bool,id:O()(b.a.oneOfType([b.a.string,b.a.number])),componentClass:C.a,children:T()(Object(B.c)(L,D),Object(B.a)(D)),disabled:b.a.bool,pullRight:b.a.bool,open:b.a.bool,defaultOpen:b.a.bool,onToggle:b.a.func,onSelect:b.a.func,role:b.a.string,rootCloseEvent:b.a.oneOf(["click","mousedown"]),onMouseEnter:b.a.func,onMouseLeave:b.a.func},F={componentClass:I.a},H=function(e){function t(t,n){var r;return r=e.call(this,t,n)||this,r.handleClick=r.handleClick.bind(Object(a.a)(r)),r.handleKeyDown=r.handleKeyDown.bind(Object(a.a)(r)),r.handleClose=r.handleClose.bind(Object(a.a)(r)),r._focusInDropdown=!1,r.lastOpenEventType=null,r}Object(o.a)(t,e);var n=t.prototype;return n.componentDidMount=function(){this.focusNextOnOpen()},n.componentWillUpdate=function(e){!e.open&&this.props.open&&(this._focusInDropdown=p()(w.a.findDOMNode(this.menu),u()(document)))},n.componentDidUpdate=function(e){var t=this.props.open,n=e.open;t&&!n&&this.focusNextOnOpen(),!t&&n&&this._focusInDropdown&&(this._focusInDropdown=!1,this.focus())},n.focus=function(){var e=w.a.findDOMNode(this.toggle);e&&e.focus&&e.focus()},n.focusNextOnOpen=function(){var e=this.menu;e&&e.focusNext&&("keydown"!==this.lastOpenEventType&&"menuitem"!==this.props.role||e.focusNext())},n.handleClick=function(e){this.props.disabled||this.toggleOpen(e,{source:"click"})},n.handleClose=function(e,t){this.props.open&&this.toggleOpen(e,t)},n.handleKeyDown=function(e){if(!this.props.disabled)switch(e.keyCode){case h.a.codes.down:this.props.open?this.menu.focusNext&&this.menu.focusNext():this.toggleOpen(e,{source:"keydown"}),e.preventDefault();break;case h.a.codes.esc:case h.a.codes.tab:this.handleClose(e,{source:"keydown"})}},n.toggleOpen=function(e,t){var n=!this.props.open;n&&(this.lastOpenEventType=t.source),this.props.onToggle&&this.props.onToggle(n,e,t)},n.renderMenu=function(e,t){var n=this,o=t.id,a=t.onSelect,s=t.rootCloseEvent,l=Object(i.a)(t,["id","onSelect","rootCloseEvent"]),c=function(e){n.menu=e};return"string"===typeof e.ref||(c=Object(N.a)(e.ref,c)),Object(m.cloneElement)(e,Object(r.a)({},l,{ref:c,labelledBy:o,bsClass:Object(A.e)(l,"menu"),onClose:Object(N.a)(e.props.onClose,this.handleClose),onSelect:Object(N.a)(e.props.onSelect,a,function(e,t){return n.handleClose(t,{source:"select"})}),rootCloseEvent:s}))},n.renderToggle=function(e,t){var n=this,i=function(e){n.toggle=e};return"string"===typeof e.ref||(i=Object(N.a)(e.ref,i)),Object(m.cloneElement)(e,Object(r.a)({},t,{ref:i,bsClass:Object(A.e)(t,"toggle"),onClick:Object(N.a)(e.props.onClick,this.handleClick),onKeyDown:Object(N.a)(e.props.onKeyDown,this.handleKeyDown)}))},n.render=function(){var e,t=this,n=this.props,o=n.componentClass,a=n.id,s=n.dropup,c=n.disabled,u=n.pullRight,d=n.open,p=n.onSelect,f=n.role,h=n.bsClass,m=n.className,y=n.rootCloseEvent,b=n.children,v=Object(i.a)(n,["componentClass","id","dropup","disabled","pullRight","open","onSelect","role","bsClass","className","rootCloseEvent","children"]);delete v.onToggle;var w=(e={},e[h]=!0,e.open=d,e.disabled=c,e);return s&&(w[h]=!1,w.dropup=!0),g.a.createElement(o,Object(r.a)({},v,{className:l()(m,w)}),M.a.map(b,function(e){switch(e.props.bsRole){case L:return t.renderToggle(e,{id:a,disabled:c,open:d,role:f,bsClass:h});case D:return t.renderMenu(e,{id:a,open:d,pullRight:u,bsClass:h,onSelect:p,rootCloseEvent:y});default:return e}}))},t}(g.a.Component);H.propTypes=G,H.defaultProps=F,Object(A.a)("dropdown",H);var V=P()(H,{open:"onToggle"});V.Toggle=R.a,V.Menu=_.a,t.a=V},function(e,t,n){"use strict";function r(e){return function(t,n,r,i,o){var a=r||"<<anonymous>>",s=o||n;if(null==t[n])return new Error("The "+i+" `"+s+"` is required to make `"+a+"` accessible for users of assistive technologies such as screen readers.");for(var l=arguments.length,c=Array(l>5?l-5:0),u=5;u<l;u++)c[u-5]=arguments[u];return e.apply(void 0,[t,n,r,i,o].concat(c))}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r,e.exports=t.default},function(e,t,n){"use strict";function r(e,t){var n=t.propTypes,r={},i={};return o()(e).forEach(function(e){var t=e[0],o=e[1];n[t]?r[t]=o:i[t]=o}),[r,i]}t.a=r;var i=n(107),o=n.n(i)},function(e,t,n){"use strict";var r,i=n(3),o=n(4),a=n(2),s=n(5),l=n.n(s),c=n(0),u=n.n(c),d=n(1),p=n.n(d),f=n(114),h=n.n(f),m={in:p.a.bool,mountOnEnter:p.a.bool,unmountOnExit:p.a.bool,appear:p.a.bool,timeout:p.a.number,onEnter:p.a.func,onEntering:p.a.func,onEntered:p.a.func,onExit:p.a.func,onExiting:p.a.func,onExited:p.a.func},g={in:!1,timeout:300,mountOnEnter:!1,unmountOnExit:!1,appear:!1},y=(r={},r[f.ENTERING]="in",r[f.ENTERED]="in",r),b=function(e){function t(){return e.apply(this,arguments)||this}return Object(a.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.className,n=e.children,r=Object(o.a)(e,["className","children"]);return u.a.createElement(h.a,r,function(e,r){return u.a.cloneElement(n,Object(i.a)({},r,{className:l()("fade",t,n.props.className,y[e])}))})},t}(u.a.Component);b.propTypes=m,b.defaultProps=g,t.a=b},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(9),d=n.n(u),p=n(356),f=n(357),h=n(358),m=n(359),g=n(360),y=n(361),b=n(6),v={componentClass:d.a},w={componentClass:"div"},x=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.componentClass,n=e.className,o=Object(i.a)(e,["componentClass","className"]),a=Object(b.f)(o),l=a[0],u=a[1],d=Object(b.d)(l);return c.a.createElement(t,Object(r.a)({},u,{className:s()(n,d)}))},t}(c.a.Component);x.propTypes=v,x.defaultProps=w,x.Heading=f.a,x.Body=p.a,x.Left=h.a,x.Right=y.a,x.List=m.a,x.ListItem=g.a,t.a=Object(b.a)("media",x)},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t,n,r,i){var a=e[t],l="undefined"===typeof a?"undefined":o(a);return s.default.isValidElement(a)?new Error("Invalid "+r+" `"+i+"` of type ReactElement supplied to `"+n+"`, expected a ReactComponent or a DOMElement. You can usually obtain a ReactComponent or DOMElement from a ReactElement by attaching a ref to it."):"object"===l&&"function"===typeof a.render||1===a.nodeType?null:new Error("Invalid "+r+" `"+i+"` of value `"+a+"` supplied to `"+n+"`, expected a ReactComponent or a DOMElement.")}Object.defineProperty(t,"__esModule",{value:!0});var o="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=n(0),s=r(a),l=n(48),c=r(l);t.default=(0,c.default)(i),e.exports=t.default},function(e,t,n){"use strict";function r(e){return e===e.window?e:9===e.nodeType&&(e.defaultView||e.parentWindow)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r,e.exports=t.default},function(e,t,n){"use strict";function r(e,t){return e="function"===typeof e?e():e,o.default.findDOMNode(e)||t}t.__esModule=!0,t.default=r;var i=n(13),o=function(e){return e&&e.__esModule?e:{default:e}}(i);e.exports=t.default},function(e,t,n){"use strict";n.d(t,"a",function(){return i}),n.d(t,"b",function(){return o}),n.d(t,"c",function(){return a});var r=n(95),i=function(e){return{type:r.a,payload:{newPage:e}}},o=function(e){return{type:r.b,payload:{newComponent:e}}},a=function(e){return{type:r.c,payload:{sourceCodeNumber:e}}}},function(e,t,n){"use strict";function r(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}var i=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,s,l=r(e),c=1;c<arguments.length;c++){n=Object(arguments[c]);for(var u in n)o.call(n,u)&&(l[u]=n[u]);if(i){s=i(n);for(var d=0;d<s.length;d++)a.call(n,s[d])&&(l[s[d]]=n[s[d]])}}return l}},function(e,t,n){"use strict";function r(e){"undefined"!==typeof console&&"function"===typeof console.error&&console.error(e);try{throw new Error(e)}catch(e){}}t.a=r},function(e,t,n){"use strict";function r(e){if("object"!==("undefined"===typeof e?"undefined":h(e))||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function i(e,t,n){function o(){b===y&&(b=y.slice())}function a(){if(v)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return g}function s(e){if("function"!==typeof e)throw new Error("Expected the listener to be a function.");if(v)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");var t=!0;return o(),b.push(e),function(){if(t){if(v)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");t=!1,o();var n=b.indexOf(e);b.splice(n,1)}}}function l(e){if(!r(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if("undefined"===typeof e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(v)throw new Error("Reducers may not dispatch actions.");try{v=!0,g=m(g,e)}finally{v=!1}for(var t=y=b,n=0;n<t.length;n++){(0,t[n])()}return e}function c(e){if("function"!==typeof e)throw new Error("Expected the nextReducer to be a function.");m=e,l({type:f.REPLACE})}function u(){var e,t=s;return e={subscribe:function(e){function n(){e.next&&e.next(a())}if("object"!==("undefined"===typeof e?"undefined":h(e))||null===e)throw new TypeError("Expected the observer to be an object.");return n(),{unsubscribe:t(n)}}},e[p.a]=function(){return this},e}var d;if("function"===typeof t&&"undefined"===typeof n&&(n=t,t=void 0),"undefined"!==typeof n){if("function"!==typeof n)throw new Error("Expected the enhancer to be a function.");return n(i)(e,t)}if("function"!==typeof e)throw new Error("Expected the reducer to be a function.");var m=e,g=t,y=[],b=y,v=!1;return l({type:f.INIT}),d={dispatch:l,subscribe:s,getState:a,replaceReducer:c},d[p.a]=u,d}function o(e,t){var n=t&&t.type;return"Given "+(n&&'action "'+String(n)+'"'||"an action")+', reducer "'+e+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function a(e){Object.keys(e).forEach(function(t){var n=e[t];if("undefined"===typeof n(void 0,{type:f.INIT}))throw new Error('Reducer "'+t+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if("undefined"===typeof n(void 0,{type:"@@redux/PROBE_UNKNOWN_ACTION_"+Math.random().toString(36).substring(7).split("").join(".")}))throw new Error('Reducer "'+t+"\" returned undefined when probed with a random type. Don't try to handle "+f.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')})}function s(e){for(var t=Object.keys(e),n={},r=0;r<t.length;r++){var i=t[r];"function"===typeof e[i]&&(n[i]=e[i])}var s=Object.keys(n),l=void 0;try{a(n)}catch(e){l=e}return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments[1];if(l)throw l;for(var r=!1,i={},a=0;a<s.length;a++){var c=s[a],u=n[c],d=e[c],p=u(d,t);if("undefined"===typeof p){var f=o(c,t);throw new Error(f)}i[c]=p,r=r||p!==d}return r?i:e}}function l(e,t){return function(){return t(e.apply(this,arguments))}}function c(e,t){if("function"===typeof e)return l(e,t);if("object"!==("undefined"===typeof e?"undefined":h(e))||null===e)throw new Error("bindActionCreators expected an object or a function, instead received "+(null===e?"null":"undefined"===typeof e?"undefined":h(e))+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');for(var n=Object.keys(e),r={},i=0;i<n.length;i++){var o=n[i],a=e[o];"function"===typeof a&&(r[o]=l(a,t))}return r}function u(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce(function(e,t){return function(){return e(t.apply(void 0,arguments))}})}function d(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return function(){for(var n=arguments.length,r=Array(n),i=0;i<n;i++)r[i]=arguments[i];var o=e.apply(void 0,r),a=function(){throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")},s={getState:o.getState,dispatch:function(){return a.apply(void 0,arguments)}},l=t.map(function(e){return e(s)});return a=u.apply(void 0,l)(o.dispatch),m({},o,{dispatch:a})}}}Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"createStore",function(){return i}),n.d(t,"combineReducers",function(){return s}),n.d(t,"bindActionCreators",function(){return c}),n.d(t,"applyMiddleware",function(){return d}),n.d(t,"compose",function(){return u}),n.d(t,"__DO_NOT_USE__ActionTypes",function(){return f});var p=n(169),f={INIT:"@@redux/INIT"+Math.random().toString(36).substring(7).split("").join("."),REPLACE:"@@redux/REPLACE"+Math.random().toString(36).substring(7).split("").join(".")},h="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}},function(e,t,n){var r=n(40);e.exports=function(e,t){if(!r(e))return e;var n,i;if(t&&"function"==typeof(n=e.toString)&&!r(i=n.call(e)))return i;if("function"==typeof(n=e.valueOf)&&!r(i=n.call(e)))return i;if(!t&&"function"==typeof(n=e.toString)&&!r(i=n.call(e)))return i;throw TypeError("Can't convert object to primitive value")}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t,n){var r=n(67)("keys"),i=n(46);e.exports=function(e){return r[e]||(r[e]=i(e))}},function(e,t,n){var r=n(16),i=n(24),o=i["__core-js_shared__"]||(i["__core-js_shared__"]={});(e.exports=function(e,t){return o[e]||(o[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n(45)?"pure":"global",copyright:"\xa9 2018 Denis Pushkarev (zloirock.ru)"})},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var r=n(39),i=n(285),o=n(68),a=n(66)("IE_PROTO"),s=function(){},l=function(){var e,t=n(99)("iframe"),r=o.length;for(t.style.display="none",n(286).appendChild(t),t.src="javascript:",e=t.contentWindow.document,e.open(),e.write("<script>document.F=Object<\/script>"),e.close(),l=e.F;r--;)delete l.prototype[o[r]];return l()};e.exports=Object.create||function(e,t){var n;return null!==e?(s.prototype=r(e),n=new s,s.prototype=null,n[a]=e):n=l(),void 0===t?n:i(n,t)}},function(e,t,n){var r=n(25).f,i=n(26),o=n(18)("toStringTag");e.exports=function(e,t,n){e&&!i(e=n?e:e.prototype,o)&&r(e,o,{configurable:!0,value:t})}},function(e,t,n){"use strict";var r=n(2),i=n(1),o=n.n(i),a=n(0),s=n.n(a),l={label:o.a.string.isRequired,onClick:o.a.func},c={label:"Close"},u=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.label,n=e.onClick;return s.a.createElement("button",{type:"button",className:"close",onClick:n},s.a.createElement("span",{"aria-hidden":"true"},"\xd7"),s.a.createElement("span",{className:"sr-only"},t))},t}(s.a.Component);u.propTypes=l,u.defaultProps=c,t.a=u},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(49),f=n.n(p),h=n(43),m=n(6),g={vertical:d.a.bool,justified:d.a.bool,block:f()(d.a.bool,function(e){var t=e.block,n=e.vertical;return t&&!n?new Error("`block` requires `vertical` to be set to have any effect"):null})},y={block:!1,justified:!1,vertical:!1},b=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e,t=this.props,n=t.block,o=t.justified,a=t.vertical,l=t.className,u=Object(i.a)(t,["block","justified","vertical","className"]),d=Object(m.f)(u),p=d[0],f=d[1],g=Object(r.a)({},Object(m.d)(p),(e={},e[Object(m.e)(p)]=!a,e[Object(m.e)(p,"vertical")]=a,e[Object(m.e)(p,"justified")]=o,e[Object(m.e)(h.a.defaultProps,"block")]=n,e));return c.a.createElement("div",Object(r.a)({},f,{className:s()(l,g)}))},t}(c.a.Component);b.propTypes=g,b.defaultProps=y,t.a=Object(m.a)("btn-group",b)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.animationEnd=t.animationDelay=t.animationTiming=t.animationDuration=t.animationName=t.transitionEnd=t.transitionDuration=t.transitionDelay=t.transitionTiming=t.transitionProperty=t.transform=void 0;var r=n(21),i=function(e){return e&&e.__esModule?e:{default:e}}(r),o="transform",a=void 0,s=void 0,l=void 0,c=void 0,u=void 0,d=void 0,p=void 0,f=void 0,h=void 0,m=void 0,g=void 0;if(i.default){var y=function(){for(var e=document.createElement("div").style,t={O:function(e){return"o"+e.toLowerCase()},Moz:function(e){return e.toLowerCase()},Webkit:function(e){return"webkit"+e},ms:function(e){return"MS"+e}},n=Object.keys(t),r=void 0,i=void 0,o="",a=0;a<n.length;a++){var s=n[a];if(s+"TransitionProperty"in e){o="-"+s.toLowerCase(),r=t[s]("TransitionEnd"),i=t[s]("AnimationEnd");break}}return!r&&"transitionProperty"in e&&(r="transitionend"),!i&&"animationName"in e&&(i="animationend"),e=null,{animationEnd:i,transitionEnd:r,prefix:o}}();a=y.prefix,t.transitionEnd=s=y.transitionEnd,t.animationEnd=l=y.animationEnd,t.transform=o=a+"-"+o,t.transitionProperty=c=a+"-transition-property",t.transitionDuration=u=a+"-transition-duration",t.transitionDelay=p=a+"-transition-delay",t.transitionTiming=d=a+"-transition-timing-function",t.animationName=f=a+"-animation-name",t.animationDuration=h=a+"-animation-duration",t.animationTiming=m=a+"-animation-delay",t.animationDelay=g=a+"-animation-timing-function"}t.transform=o,t.transitionProperty=c,t.transitionTiming=d,t.transitionDelay=p,t.transitionDuration=u,t.transitionEnd=s,t.animationName=f,t.animationDuration=h,t.animationTiming=m,t.animationDelay=g,t.animationEnd=l,t.default={transform:o,end:s,property:c,timing:d,delay:p,duration:u}},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(6),f={glyph:d.a.string.isRequired},h=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e,t=this.props,n=t.glyph,o=t.className,a=Object(i.a)(t,["glyph","className"]),l=Object(p.f)(a),u=l[0],d=l[1],f=Object(r.a)({},Object(p.d)(u),(e={},e[Object(p.e)(u,n)]=!0,e));return c.a.createElement("span",Object(r.a)({},d,{className:s()(o,f)}))},t}(c.a.Component);h.propTypes=f,t.a=Object(p.a)("glyphicon",h)},function(e,t,n){"use strict";function r(e){e.offsetHeight}function i(e,t){var n=t["offset"+Object(w.a)(e)],r=T[e];return n+parseInt(f()(t,r[0]),10)+parseInt(f()(t,r[1]),10)}var o,a=n(3),s=n(4),l=n(11),c=n(2),u=n(5),d=n.n(u),p=n(44),f=n.n(p),h=n(0),m=n.n(h),g=n(1),y=n.n(g),b=n(114),v=n.n(b),w=n(113),x=n(10),T={height:["marginTop","marginBottom"],width:["marginLeft","marginRight"]},S=(o={},o[b.EXITED]="collapse",o[b.EXITING]="collapsing",o[b.ENTERING]="collapsing",o[b.ENTERED]="collapse in",o),C={in:y.a.bool,mountOnEnter:y.a.bool,unmountOnExit:y.a.bool,appear:y.a.bool,timeout:y.a.number,onEnter:y.a.func,onEntering:y.a.func,onEntered:y.a.func,onExit:y.a.func,onExiting:y.a.func,onExited:y.a.func,dimension:y.a.oneOfType([y.a.oneOf(["height","width"]),y.a.func]),getDimensionValue:y.a.func,role:y.a.string},k={in:!1,timeout:300,mountOnEnter:!1,unmountOnExit:!1,appear:!1,dimension:"height",getDimensionValue:i},O=function(e){function t(){for(var t,n,i=arguments.length,o=new Array(i),a=0;a<i;a++)o[a]=arguments[a];return t=n=e.call.apply(e,[this].concat(o))||this,n.handleEnter=function(e){e.style[n.getDimension()]="0"},n.handleEntering=function(e){var t=n.getDimension();e.style[t]=n._getScrollDimensionValue(e,t)},n.handleEntered=function(e){e.style[n.getDimension()]=null},n.handleExit=function(e){var t=n.getDimension();e.style[t]=n.props.getDimensionValue(t,e)+"px",r(e)},n.handleExiting=function(e){e.style[n.getDimension()]="0"},t||Object(l.a)(n)}Object(c.a)(t,e);var n=t.prototype;return n.getDimension=function(){return"function"===typeof this.props.dimension?this.props.dimension():this.props.dimension},n._getScrollDimensionValue=function(e,t){return e["scroll"+Object(w.a)(t)]+"px"},n.render=function(){var e=this,t=this.props,n=t.onEnter,r=t.onEntering,i=t.onEntered,o=t.onExit,l=t.onExiting,c=t.className,u=t.children,p=Object(s.a)(t,["onEnter","onEntering","onEntered","onExit","onExiting","className","children"]);delete p.dimension,delete p.getDimensionValue;var f=Object(x.a)(this.handleEnter,n),h=Object(x.a)(this.handleEntering,r),g=Object(x.a)(this.handleEntered,i),y=Object(x.a)(this.handleExit,o),b=Object(x.a)(this.handleExiting,l);return m.a.createElement(v.a,Object(a.a)({},p,{"aria-expanded":p.role?p.in:null,onEnter:f,onEntering:h,onEntered:g,onExit:y,onExiting:b}),function(t,n){return m.a.cloneElement(u,Object(a.a)({},n,{className:d()(c,u.props.className,S[t],"width"===e.getDimension()&&"width")}))})},t}(m.a.Component);O.propTypes=C,O.defaultProps=k,t.a=O},function(e,t){function n(e){if(e&&"object"===typeof e){var t=e.which||e.keyCode||e.charCode;t&&(e=t)}if("number"===typeof e)return a[e];var n=String(e),o=r[n.toLowerCase()];if(o)return o;var o=i[n.toLowerCase()];return o||(1===n.length?n.charCodeAt(0):void 0)}n.isEventKey=function(e,t){if(e&&"object"===typeof e){var n=e.which||e.keyCode||e.charCode;if(null===n||void 0===n)return!1;if("string"===typeof t){var o=r[t.toLowerCase()];if(o)return o===n;var o=i[t.toLowerCase()];if(o)return o===n}else if("number"===typeof t)return t===n;return!1}},t=e.exports=n;var r=t.code=t.codes={backspace:8,tab:9,enter:13,shift:16,ctrl:17,alt:18,"pause/break":19,"caps lock":20,esc:27,space:32,"page up":33,"page down":34,end:35,home:36,left:37,up:38,right:39,down:40,insert:45,delete:46,command:91,"left command":91,"right command":93,"numpad *":106,"numpad +":107,"numpad -":109,"numpad .":110,"numpad /":111,"num lock":144,"scroll lock":145,"my computer":182,"my calculator":183,";":186,"=":187,",":188,"-":189,".":190,"/":191,"`":192,"[":219,"\\":220,"]":221,"'":222},i=t.aliases={windows:91,"\u21e7":16,"\u2325":18,"\u2303":17,"\u2318":91,ctl:17,control:17,option:18,pause:19,break:19,caps:20,return:13,escape:27,spc:32,spacebar:32,pgup:33,pgdn:34,ins:45,del:46,cmd:91};for(o=97;o<123;o++)r[String.fromCharCode(o)]=o-32;for(var o=48;o<58;o++)r[o-48]=o;for(o=1;o<13;o++)r["f"+o]=o+111;for(o=0;o<10;o++)r["numpad "+o]=o+96;var a=t.names=t.title={};for(o in r)a[r[o]]=o;for(var s in i)r[s]=i[s]},function(e,t){e.exports={}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(21),i=function(e){return e&&e.__esModule?e:{default:e}}(r),o=function(){};i.default&&(o=function(){return document.addEventListener?function(e,t,n,r){return e.addEventListener(t,n,r||!1)}:document.attachEvent?function(e,t,n){return e.attachEvent("on"+t,function(t){t=t||window.event,t.target=t.target||t.srcElement,t.currentTarget=e,n.call(e,t)})}:void 0}()),t.default=o,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(21),i=function(e){return e&&e.__esModule?e:{default:e}}(r),o=function(){};i.default&&(o=function(){return document.addEventListener?function(e,t,n,r){return e.removeEventListener(t,n,r||!1)}:document.attachEvent?function(e,t,n){return e.detachEvent("on"+t,n)}:void 0}()),t.default=o,e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t,n,r,i){var a=e[t],l="undefined"===typeof a?"undefined":o(a);return s.default.isValidElement(a)?new Error("Invalid "+r+" `"+i+"` of type ReactElement supplied to `"+n+"`, expected an element type (a string or a ReactClass)."):"function"!==l&&"string"!==l?new Error("Invalid "+r+" `"+i+"` of value `"+a+"` supplied to `"+n+"`, expected an element type (a string or a ReactClass)."):null}t.__esModule=!0;var o="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},a=n(0),s=r(a),l=n(399),c=r(l);t.default=(0,c.default)(i)},function(e,t,n){"use strict";var r=n(4),i=n(2),o=n(0),a=n.n(o),s=n(1),l=n.n(s),c=n(27),u=n.n(c),d=l.a.oneOfType([l.a.string,l.a.number]),p={id:function(e){var t=null;if(!e.generateChildId){for(var n=arguments.length,r=new Array(n>1?n-1:0),i=1;i<n;i++)r[i-1]=arguments[i];t=d.apply(void 0,[e].concat(r)),t||e.id||(t=new Error("In order to properly initialize Tabs in a way that is accessible to assistive technologies (such as screen readers) an `id` or a `generateChildId` prop to TabContainer is required"))}return t},generateChildId:l.a.func,onSelect:l.a.func,activeKey:l.a.any},f={$bs_tabContainer:l.a.shape({activeKey:l.a.any,onSelect:l.a.func.isRequired,getTabId:l.a.func.isRequired,getPaneId:l.a.func.isRequired})},h=function(e){function t(){return e.apply(this,arguments)||this}Object(i.a)(t,e);var n=t.prototype;return n.getChildContext=function(){var e=this.props,t=e.activeKey,n=e.onSelect,r=e.generateChildId,i=e.id,o=r||function(e,t){return i?i+"-"+t+"-"+e:null};return{$bs_tabContainer:{activeKey:t,onSelect:n,getTabId:function(e){return o(e,"tab")},getPaneId:function(e){return o(e,"pane")}}}},n.render=function(){var e=this.props,t=e.children,n=Object(r.a)(e,["children"]);return delete n.generateChildId,delete n.onSelect,delete n.activeKey,a.a.cloneElement(a.a.Children.only(t),n)},t}(a.a.Component);h.propTypes=p,h.childContextTypes=f,t.a=u()(h,{activeKey:"onSelect"})},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(11),s=n(5),l=n.n(s),c=n(0),u=n.n(c),d=n(1),p=n.n(d),f=n(9),h=n.n(f),m=n(6),g={componentClass:h.a,animation:p.a.oneOfType([p.a.bool,h.a]),mountOnEnter:p.a.bool,unmountOnExit:p.a.bool},y={componentClass:"div",animation:!0,mountOnEnter:!1,unmountOnExit:!1},b={$bs_tabContainer:p.a.shape({activeKey:p.a.any})},v={$bs_tabContent:p.a.shape({bsClass:p.a.string,animation:p.a.oneOfType([p.a.bool,h.a]),activeKey:p.a.any,mountOnEnter:p.a.bool,unmountOnExit:p.a.bool,onPaneEnter:p.a.func.isRequired,onPaneExited:p.a.func.isRequired,exiting:p.a.bool.isRequired})},w=function(e){function t(t,n){var r;return r=e.call(this,t,n)||this,r.handlePaneEnter=r.handlePaneEnter.bind(Object(a.a)(r)),r.handlePaneExited=r.handlePaneExited.bind(Object(a.a)(r)),r.state={activeKey:null,activeChild:null},r}Object(o.a)(t,e);var n=t.prototype;return n.getChildContext=function(){var e=this.props,t=e.bsClass,n=e.animation,r=e.mountOnEnter,i=e.unmountOnExit,o=this.state.activeKey,a=this.getContainerActiveKey(),s=null!=o?o:a,l=null!=o&&o!==a;return{$bs_tabContent:{bsClass:t,animation:n,activeKey:s,mountOnEnter:r,unmountOnExit:i,onPaneEnter:this.handlePaneEnter,onPaneExited:this.handlePaneExited,exiting:l}}},n.componentWillReceiveProps=function(e){!e.animation&&this.state.activeChild&&this.setState({activeKey:null,activeChild:null})},n.componentWillUnmount=function(){this.isUnmounted=!0},n.getContainerActiveKey=function(){var e=this.context.$bs_tabContainer;return e&&e.activeKey},n.handlePaneEnter=function(e,t){return!!this.props.animation&&(t===this.getContainerActiveKey()&&(this.setState({activeKey:t,activeChild:e}),!0))},n.handlePaneExited=function(e){this.isUnmounted||this.setState(function(t){return t.activeChild!==e?null:{activeKey:null,activeChild:null}})},n.render=function(){var e=this.props,t=e.componentClass,n=e.className,o=Object(i.a)(e,["componentClass","className"]),a=Object(m.g)(o,["animation","mountOnEnter","unmountOnExit"]),s=a[0],c=a[1];return u.a.createElement(t,Object(r.a)({},c,{className:l()(n,Object(m.e)(s,"content"))}))},t}(u.a.Component);w.propTypes=g,w.defaultProps=y,w.contextTypes=b,w.childContextTypes=v,t.a=Object(m.a)("tab",w)},function(e,t,n){"use strict";function r(){}function i(e){try{return e.then}catch(e){return y=e,b}}function o(e,t){try{return e(t)}catch(e){return y=e,b}}function a(e,t,n){try{e(t,n)}catch(e){return y=e,b}}function s(e){if("object"!==typeof this)throw new TypeError("Promises must be constructed via new");if("function"!==typeof e)throw new TypeError("Promise constructor's argument is not a function");this._75=0,this._83=0,this._18=null,this._38=null,e!==r&&m(e,this)}function l(e,t,n){return new e.constructor(function(i,o){var a=new s(r);a.then(i,o),c(e,new h(t,n,a))})}function c(e,t){for(;3===e._83;)e=e._18;if(s._47&&s._47(e),0===e._83)return 0===e._75?(e._75=1,void(e._38=t)):1===e._75?(e._75=2,void(e._38=[e._38,t])):void e._38.push(t);u(e,t)}function u(e,t){g(function(){var n=1===e._83?t.onFulfilled:t.onRejected;if(null===n)return void(1===e._83?d(t.promise,e._18):p(t.promise,e._18));var r=o(n,e._18);r===b?p(t.promise,y):d(t.promise,r)})}function d(e,t){if(t===e)return p(e,new TypeError("A promise cannot be resolved with itself."));if(t&&("object"===typeof t||"function"===typeof t)){var n=i(t);if(n===b)return p(e,y);if(n===e.then&&t instanceof s)return e._83=3,e._18=t,void f(e);if("function"===typeof n)return void m(n.bind(t),e)}e._83=1,e._18=t,f(e)}function p(e,t){e._83=2,e._18=t,s._71&&s._71(e,t),f(e)}function f(e){if(1===e._75&&(c(e,e._38),e._38=null),2===e._75){for(var t=0;t<e._38.length;t++)c(e,e._38[t]);e._38=null}}function h(e,t,n){this.onFulfilled="function"===typeof e?e:null,this.onRejected="function"===typeof t?t:null,this.promise=n}function m(e,t){var n=!1,r=a(e,function(e){n||(n=!0,d(t,e))},function(e){n||(n=!0,p(t,e))});n||r!==b||(n=!0,p(t,y))}var g=n(148),y=null,b={};e.exports=s,s._47=null,s._71=null,s._44=r,s.prototype.then=function(e,t){if(this.constructor!==s)return l(this,e,t);var n=new s(r);return c(this,new h(e,t,n)),n}},function(e,t,n){"use strict";function r(e,t,n,r,o,a,s,l){if(i(t),!e){var c;if(void 0===t)c=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,a,s,l],d=0;c=new Error(t.replace(/%s/g,function(){return u[d++]})),c.name="Invariant Violation"}throw c.framesToPop=1,c}}var i=function(e){};e.exports=r},function(e,t,n){"use strict";var r={};e.exports=r},function(e,t,n){"use strict";function r(e){return function(){return e}}var i=function(){};i.thatReturns=r,i.thatReturnsFalse=r(!1),i.thatReturnsTrue=r(!0),i.thatReturnsNull=r(null),i.thatReturnsThis=function(){return this},i.thatReturnsArgument=function(e){return e},e.exports=i},function(e,t,n){"use strict";n.d(t,"b",function(){return o}),n.d(t,"a",function(){return a});var r=n(1),i=n.n(r),o=i.a.shape({trySubscribe:i.a.func.isRequired,tryUnsubscribe:i.a.func.isRequired,notifyNestedSubs:i.a.func.isRequired,isSubscribed:i.a.func.isRequired}),a=i.a.shape({subscribe:i.a.func.isRequired,dispatch:i.a.func.isRequired,getState:i.a.func.isRequired})},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function a(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}function s(){}function l(e,t){var n={run:function(r){try{var i=e(t.getState(),r);(i!==n.props||n.error)&&(n.shouldComponentUpdate=!0,n.props=i,n.error=null)}catch(e){n.shouldComponentUpdate=!0,n.error=e}}};return n}function c(e){var t,n,c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},u=c.getDisplayName,p=void 0===u?function(e){return"ConnectAdvanced("+e+")"}:u,w=c.methodName,x=void 0===w?"connectAdvanced":w,T=c.renderCountProp,S=void 0===T?void 0:T,C=c.shouldHandleStateChanges,k=void 0===C||C,O=c.storeKey,E=void 0===O?"store":O,P=c.withRef,j=void 0!==P&&P,I=a(c,["getDisplayName","methodName","renderCountProp","shouldHandleStateChanges","storeKey","withRef"]),_=E+"Subscription",R=b++,A=(t={},t[E]=g.a,t[_]=g.b,t),N=(n={},n[_]=g.b,n);return function(t){f()("function"==typeof t,"You must pass a component to the function returned by "+x+". Instead received "+JSON.stringify(t));var n=t.displayName||t.name||"Component",a=p(n),c=y({},I,{getDisplayName:p,methodName:x,renderCountProp:S,shouldHandleStateChanges:k,storeKey:E,withRef:j,displayName:a,wrappedComponentName:n,WrappedComponent:t}),u=function(n){function u(e,t){r(this,u);var o=i(this,n.call(this,e,t));return o.version=R,o.state={},o.renderCount=0,o.store=e[E]||t[E],o.propsMode=Boolean(e[E]),o.setWrappedInstance=o.setWrappedInstance.bind(o),f()(o.store,'Could not find "'+E+'" in either the context or props of "'+a+'". Either wrap the root component in a <Provider>, or explicitly pass "'+E+'" as a prop to "'+a+'".'),o.initSelector(),o.initSubscription(),o}return o(u,n),u.prototype.getChildContext=function(){var e,t=this.propsMode?null:this.subscription;return e={},e[_]=t||this.context[_],e},u.prototype.componentDidMount=function(){k&&(this.subscription.trySubscribe(),this.selector.run(this.props),this.selector.shouldComponentUpdate&&this.forceUpdate())},u.prototype.componentWillReceiveProps=function(e){this.selector.run(e)},u.prototype.shouldComponentUpdate=function(){return this.selector.shouldComponentUpdate},u.prototype.componentWillUnmount=function(){this.subscription&&this.subscription.tryUnsubscribe(),this.subscription=null,this.notifyNestedSubs=s,this.store=null,this.selector.run=s,this.selector.shouldComponentUpdate=!1},u.prototype.getWrappedInstance=function(){return f()(j,"To access the wrapped instance, you need to specify { withRef: true } in the options argument of the "+x+"() call."),this.wrappedInstance},u.prototype.setWrappedInstance=function(e){this.wrappedInstance=e},u.prototype.initSelector=function(){var t=e(this.store.dispatch,c);this.selector=l(t,this.store),this.selector.run(this.props)},u.prototype.initSubscription=function(){if(k){var e=(this.propsMode?this.props:this.context)[_];this.subscription=new m.a(this.store,e,this.onStateChange.bind(this)),this.notifyNestedSubs=this.subscription.notifyNestedSubs.bind(this.subscription)}},u.prototype.onStateChange=function(){this.selector.run(this.props),this.selector.shouldComponentUpdate?(this.componentDidUpdate=this.notifyNestedSubsOnComponentDidUpdate,this.setState(v)):this.notifyNestedSubs()},u.prototype.notifyNestedSubsOnComponentDidUpdate=function(){this.componentDidUpdate=void 0,this.notifyNestedSubs()},u.prototype.isSubscribed=function(){return Boolean(this.subscription)&&this.subscription.isSubscribed()},u.prototype.addExtraProps=function(e){if(!j&&!S&&(!this.propsMode||!this.subscription))return e;var t=y({},e);return j&&(t.ref=this.setWrappedInstance),S&&(t[S]=this.renderCount++),this.propsMode&&this.subscription&&(t[_]=this.subscription),t},u.prototype.render=function(){var e=this.selector;if(e.shouldComponentUpdate=!1,e.error)throw e.error;return Object(h.createElement)(t,this.addExtraProps(e.props))},u}(h.Component);return u.WrappedComponent=t,u.displayName=a,u.childContextTypes=N,u.contextTypes=A,u.propTypes=A,d()(u,t)}}t.a=c;var u=n(90),d=n.n(u),p=n(28),f=n.n(p),h=n(0),m=(n.n(h),n(165)),g=n(88),y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},b=0,v={}},function(e,t,n){"use strict";function r(e,t,n){if("string"!==typeof t){if(d){var p=u(t);p&&p!==d&&r(e,p,n)}var f=s(t);l&&(f=f.concat(l(t)));for(var h=0;h<f.length;++h){var m=f[h];if(!i[m]&&!o[m]&&(!n||!n[m])){var g=c(t,m);try{a(e,m,g)}catch(e){}}}return e}return e}var i={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a=Object.defineProperty,s=Object.getOwnPropertyNames,l=Object.getOwnPropertySymbols,c=Object.getOwnPropertyDescriptor,u=Object.getPrototypeOf,d=u&&u(Object);e.exports=r},function(e,t,n){"use strict";function r(e){return function(t,n){function r(){return i}var i=e(t,n);return r.dependsOnOwnProps=!1,r}}function i(e){return null!==e.dependsOnOwnProps&&void 0!==e.dependsOnOwnProps?Boolean(e.dependsOnOwnProps):1!==e.length}function o(e,t){return function(t,n){var r=(n.displayName,function(e,t){return r.dependsOnOwnProps?r.mapToProps(e,t):r.mapToProps(e)});return r.dependsOnOwnProps=!0,r.mapToProps=function(t,n){r.mapToProps=e,r.dependsOnOwnProps=i(e);var o=r(t,n);return"function"===typeof o&&(r.mapToProps=o,r.dependsOnOwnProps=i(o),o=r(t,n)),o},r}}t.a=r,t.b=o;n(92)},function(e,t,n){"use strict";n(172),n(60)},function(e,t,n){"use strict";var r=n(174),i=r.a.Symbol;t.a=i},function(e,t,n){"use strict";function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,"d",function(){return s}),n.d(t,"h",function(){return l}),n.d(t,"e",function(){return c}),n.d(t,"j",function(){return u}),n.d(t,"b",function(){return d}),n.d(t,"c",function(){return p}),n.d(t,"g",function(){return g}),n.d(t,"a",function(){return y}),n.d(t,"k",function(){return b}),n.d(t,"i",function(){return v}),n.d(t,"f",function(){return w});var i,o,a=n(23),s=[{name:"Home",id:a.f},{name:"Fate's Reprise",id:a.e},{name:"Map Blue",id:a.g},{name:"Dark And Light",id:a.b},{name:"Memori",id:a.h},{name:"Pixel Knight",id:a.j},{name:"Color Synthesizer",id:a.a},{name:"Document Encryptor",id:a.c},{name:"File Encryptor",id:a.d},{name:"Traffic Director",id:a.l},{name:"Space Shooter",id:a.k}],l="summary",c="screenshots",u="video",d="code",p="links",f=[{name:"Summary",id:l},{name:"Code",id:d},{name:"Links",id:p}],h=[{name:"Summary",id:l},{name:"Screenshots",id:c},{name:"Code",id:d},{name:"Links",id:p}],m=[{name:"Summary",id:l},{name:"Screenshots",id:c},{name:"Video",id:u},{name:"Code",id:d},{name:"Links",id:p}],g=(i={},r(i,a.f,f),r(i,a.e,m),r(i,a.g,m),r(i,a.b,h),r(i,a.h,m),r(i,a.j,m),r(i,a.a,h),r(i,a.c,h),r(i,a.d,h),r(i,a.l,h),r(i,a.k,h),i),y="basic_sidebar",b="video_sidebar",v="screenshot_sidebar",w=(o={},r(o,a.f,y),r(o,a.e,b),r(o,a.g,b),r(o,a.b,v),r(o,a.h,b),r(o,a.j,b),r(o,a.a,v),r(o,a.c,v),r(o,a.d,v),r(o,a.l,v),r(o,a.k,v),o)},function(e,t,n){"use strict";n.d(t,"a",function(){return r}),n.d(t,"b",function(){return i}),n.d(t,"c",function(){return o});var r="change_page",i="change_sidebar_active",o="change_source_code_component"},function(e,t,n){e.exports=n(276)},function(e,t,n){var r=n(278);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,i){return e.call(t,n,r,i)}}return function(){return e.apply(t,arguments)}}},function(e,t,n){e.exports=!n(29)&&!n(30)(function(){return 7!=Object.defineProperty(n(99)("div"),"a",{get:function(){return 7}}).a})},function(e,t,n){var r=n(40),i=n(24).document,o=r(i)&&r(i.createElement);e.exports=function(e){return o?i.createElement(e):{}}},function(e,t,n){var r=n(26),i=n(32),o=n(280)(!1),a=n(66)("IE_PROTO");e.exports=function(e,t){var n,s=i(e),l=0,c=[];for(n in s)n!=a&&r(s,n)&&c.push(n);for(;t.length>l;)r(s,n=t[l++])&&(~o(c,n)||c.push(n));return c}},function(e,t,n){var r=n(63);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},function(e,t,n){var r=n(65),i=Math.min;e.exports=function(e){return e>0?i(r(e),9007199254740991):0}},function(e,t,n){"use strict";var r=n(4),i=n(3),o=n(11),a=n(2),s=n(5),l=n.n(s),c=n(1),u=n.n(c),d=n(0),p=n.n(d),f=n(27),h=n.n(f),m=n(6),g=n(14),y=n(109),b={accordion:u.a.bool,activeKey:u.a.any,onSelect:u.a.func,role:u.a.string,generateChildId:u.a.func,id:Object(y.b)("PanelGroup")},v={accordion:!1},w={$bs_panelGroup:u.a.shape({getId:u.a.func,headerRole:u.a.string,panelRole:u.a.string,activeKey:u.a.any,onToggle:u.a.func})},x=function(e){function t(){for(var t,n,r=arguments.length,i=new Array(r),a=0;a<r;a++)i[a]=arguments[a];return t=n=e.call.apply(e,[this].concat(i))||this,n.handleSelect=function(e,t,r){t?n.props.onSelect(e,r):n.props.activeKey===e&&n.props.onSelect(null,r)},t||Object(o.a)(n)}Object(a.a)(t,e);var n=t.prototype;return n.getChildContext=function(){var e=this.props,t=e.activeKey,n=e.accordion,r=e.generateChildId,o=e.id,a=null;return n&&(a=r||function(e,t){return o?o+"-"+t+"-"+e:null}),{$bs_panelGroup:Object(i.a)({getId:a,headerRole:"tab",panelRole:"tabpanel"},n&&{activeKey:t,onToggle:this.handleSelect})}},n.render=function(){var e=this.props,t=e.accordion,n=e.className,o=e.children,a=Object(r.a)(e,["accordion","className","children"]),s=Object(m.g)(a,["onSelect","activeKey"]),c=s[0],u=s[1];t&&(u.role=u.role||"tablist");var f=Object(m.d)(c);return p.a.createElement("div",Object(i.a)({},u,{className:l()(n,f)}),g.a.map(o,function(e){return Object(d.cloneElement)(e,{bsStyle:e.props.bsStyle||c.bsStyle})}))},t}(p.a.Component);x.propTypes=b,x.defaultProps=v,x.childContextTypes=w,t.a=h()(Object(m.a)("panel-group",x),{activeKey:"onSelect"})},function(e,t,n){e.exports=n(38)},function(e,t,n){t.f=n(18)},function(e,t,n){var r=n(100),i=n(68).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,i)}},function(e,t,n){e.exports=n(301)},function(e,t,n){var r=n(31),i=n(32),o=n(42).f;e.exports=function(e){return function(t){for(var n,a=i(t),s=r(a),l=s.length,c=0,u=[];l>c;)o.call(a,n=s[c++])&&u.push(e?[n,a[n]]:a[n]);return u}}},function(e,t,n){"use strict";function r(e){return function(t){var n=null;if(!t.generateChildId){for(var r=arguments.length,i=new Array(r>1?r-1:0),o=1;o<r;o++)i[o-1]=arguments[o];n=d.apply(void 0,[t].concat(i)),n||t.id||(n=new Error("In order to properly initialize the "+e+" in a way that is accessible to assistive technologies (such as screen readers) an `id` or a `generateChildId` prop to "+e+" is required"))}return n}}function i(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return c()(function(e,n,r){var i;return t.every(function(t){return!!u.a.some(e.children,function(e){return e.props.bsRole===t})||(i=t,!1)}),i?new Error("(children) "+r+" - Missing a required child with bsRole: "+i+". "+r+" must have at least one child of each of the following bsRoles: "+t.join(", ")):null})}function o(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return c()(function(e,n,r){var i;return t.every(function(t){return!(u.a.filter(e.children,function(e){return e.props.bsRole===t}).length>1)||(i=t,!1)}),i?new Error("(children) "+r+" - Duplicate children detected of bsRole: "+i+". Only one child each allowed with the following bsRoles: "+t.join(", ")):null})}t.b=r,t.c=i,t.a=o;var a=n(1),s=n.n(a),l=n(48),c=n.n(l),u=n(14),d=s.a.oneOfType([s.a.string,s.a.number])},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(17),f={active:d.a.bool,href:d.a.string,title:d.a.node,target:d.a.string},h={active:!1},m=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.active,n=e.href,o=e.title,a=e.target,l=e.className,u=Object(i.a)(e,["active","href","title","target","className"]),d={href:n,title:o,target:a};return c.a.createElement("li",{className:s()(l,{active:t})},t?c.a.createElement("span",u):c.a.createElement(p.a,Object(r.a)({},u,d)))},t}(c.a.Component);m.propTypes=f,m.defaultProps=h,t.a=m},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(11),s=n(5),l=n.n(s),c=n(0),u=n.n(c),d=n(1),p=n.n(d),f=n(13),h=n.n(f),m=n(313),g=n.n(m),y={direction:p.a.oneOf(["prev","next"]),onAnimateOutEnd:p.a.func,active:p.a.bool,animateIn:p.a.bool,animateOut:p.a.bool,index:p.a.number},b={active:!1,animateIn:!1,animateOut:!1},v=function(e){function t(t,n){var r;return r=e.call(this,t,n)||this,r.handleAnimateOutEnd=r.handleAnimateOutEnd.bind(Object(a.a)(r)),r.state={direction:null},r.isUnmounted=!1,r}Object(o.a)(t,e);var n=t.prototype;return n.componentWillReceiveProps=function(e){this.props.active!==e.active&&this.setState({direction:null})},n.componentDidUpdate=function(e){var t=this,n=this.props.active,r=e.active;!n&&r&&g.a.end(h.a.findDOMNode(this),this.handleAnimateOutEnd),n!==r&&setTimeout(function(){return t.startAnimation()},20)},n.componentWillUnmount=function(){this.isUnmounted=!0},n.handleAnimateOutEnd=function(){this.isUnmounted||this.props.onAnimateOutEnd&&this.props.onAnimateOutEnd(this.props.index)},n.startAnimation=function(){this.isUnmounted||this.setState({direction:"prev"===this.props.direction?"right":"left"})},n.render=function(){var e=this.props,t=e.direction,n=e.active,o=e.animateIn,a=e.animateOut,s=e.className,c=Object(i.a)(e,["direction","active","animateIn","animateOut","className"]);delete c.onAnimateOutEnd,delete c.index;var d={item:!0,active:n&&!o||a};return t&&n&&o&&(d[t]=!0),this.state.direction&&(o||a)&&(d[this.state.direction]=!0),u.a.createElement("div",Object(r.a)({},c,{className:l()(s,d)}))},t}(u.a.Component);v.propTypes=y,v.defaultProps=b,t.a=v},function(e,t,n){"use strict";function r(e){return(0,o.default)(e.replace(a,"ms-"))}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r;var i=n(315),o=function(e){return e&&e.__esModule?e:{default:e}}(i),a=/^-ms-/;e.exports=t.default},function(e,t,n){"use strict";function r(e){return""+e.charAt(0).toUpperCase()+e.slice(1)}t.a=r},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function s(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function l(){}t.__esModule=!0,t.EXITING=t.ENTERED=t.ENTERING=t.EXITED=t.UNMOUNTED=void 0;var c=n(1),u=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(c),d=n(0),p=r(d),f=n(13),h=r(f),m=n(325),g=(n(326),t.UNMOUNTED="unmounted"),y=t.EXITED="exited",b=t.ENTERING="entering",v=t.ENTERED="entered",w=t.EXITING="exiting",x=function(e){function t(n,r){o(this,t);var i=a(this,e.call(this,n,r)),s=r.transitionGroup,l=s&&!s.isMounting?n.enter:n.appear,c=void 0;return i.appearStatus=null,n.in?l?(c=y,i.appearStatus=b):c=v:c=n.unmountOnExit||n.mountOnEnter?g:y,i.state={status:c},i.nextCallback=null,i}return s(t,e),t.prototype.getChildContext=function(){return{transitionGroup:null}},t.getDerivedStateFromProps=function(e,t){return e.in&&t.status===g?{status:y}:null},t.prototype.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},t.prototype.componentDidUpdate=function(e){var t=null;if(e!==this.props){var n=this.state.status;this.props.in?n!==b&&n!==v&&(t=b):n!==b&&n!==v||(t=w)}this.updateStatus(!1,t)},t.prototype.componentWillUnmount=function(){this.cancelNextCallback()},t.prototype.getTimeouts=function(){var e=this.props.timeout,t=void 0,n=void 0,r=void 0;return t=n=r=e,null!=e&&"number"!==typeof e&&(t=e.exit,n=e.enter,r=e.appear),{exit:t,enter:n,appear:r}},t.prototype.updateStatus=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments[1];if(null!==t){this.cancelNextCallback();var n=h.default.findDOMNode(this);t===b?this.performEnter(n,e):this.performExit(n)}else this.props.unmountOnExit&&this.state.status===y&&this.setState({status:g})},t.prototype.performEnter=function(e,t){var n=this,r=this.props.enter,i=this.context.transitionGroup?this.context.transitionGroup.isMounting:t,o=this.getTimeouts();if(!t&&!r)return void this.safeSetState({status:v},function(){n.props.onEntered(e)});this.props.onEnter(e,i),this.safeSetState({status:b},function(){n.props.onEntering(e,i),n.onTransitionEnd(e,o.enter,function(){n.safeSetState({status:v},function(){n.props.onEntered(e,i)})})})},t.prototype.performExit=function(e){var t=this,n=this.props.exit,r=this.getTimeouts();if(!n)return void this.safeSetState({status:y},function(){t.props.onExited(e)});this.props.onExit(e),this.safeSetState({status:w},function(){t.props.onExiting(e),t.onTransitionEnd(e,r.exit,function(){t.safeSetState({status:y},function(){t.props.onExited(e)})})})},t.prototype.cancelNextCallback=function(){null!==this.nextCallback&&(this.nextCallback.cancel(),this.nextCallback=null)},t.prototype.safeSetState=function(e,t){t=this.setNextCallback(t),this.setState(e,t)},t.prototype.setNextCallback=function(e){var t=this,n=!0;return this.nextCallback=function(r){n&&(n=!1,t.nextCallback=null,e(r))},this.nextCallback.cancel=function(){n=!1},this.nextCallback},t.prototype.onTransitionEnd=function(e,t,n){this.setNextCallback(n),e?(this.props.addEndListener&&this.props.addEndListener(e,this.nextCallback),null!=t&&setTimeout(this.nextCallback,t)):setTimeout(this.nextCallback,0)},t.prototype.render=function(){var e=this.state.status;if(e===g)return null;var t=this.props,n=t.children,r=i(t,["children"]);if(delete r.in,delete r.mountOnEnter,delete r.unmountOnExit,delete r.appear,delete r.enter,delete r.exit,delete r.timeout,delete r.addEndListener,delete r.onEnter,delete r.onEntering,delete r.onEntered,delete r.onExit,delete r.onExiting,delete r.onExited,"function"===typeof n)return n(e,r);var o=p.default.Children.only(n);return p.default.cloneElement(o,r)},t}(p.default.Component);x.contextTypes={transitionGroup:u.object},x.childContextTypes={transitionGroup:function(){}},x.propTypes={},x.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:l,onEntering:l,onEntered:l,onExit:l,onExiting:l,onExited:l},x.UNMOUNTED=0,x.EXITED=1,x.ENTERING=2,x.ENTERED=3,x.EXITING=4,t.default=(0,m.polyfill)(x)},function(e,t,n){"use strict";function r(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,o.default)();try{return e.activeElement}catch(e){}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r;var i=n(34),o=function(e){return e&&e.__esModule?e:{default:e}}(i);e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function a(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function s(e){return 0===e.button}function l(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}t.__esModule=!0;var c=n(35),u=r(c),d=n(1),p=r(d),f=n(0),h=r(f),m=n(13),g=r(m),y=n(117),b=r(y),v=n(36),w=r(v),x=27,T=function(e){function t(n,r){i(this,t);var a=o(this,e.call(this,n,r));return a.addEventListeners=function(){var e=a.props.event,t=(0,w.default)(a);a.documentMouseCaptureListener=(0,b.default)(t,e,a.handleMouseCapture,!0),a.documentMouseListener=(0,b.default)(t,e,a.handleMouse),a.documentKeyupListener=(0,b.default)(t,"keyup",a.handleKeyUp)},a.removeEventListeners=function(){a.documentMouseCaptureListener&&a.documentMouseCaptureListener.remove(),a.documentMouseListener&&a.documentMouseListener.remove(),a.documentKeyupListener&&a.documentKeyupListener.remove()},a.handleMouseCapture=function(e){a.preventMouseRootClose=l(e)||!s(e)||(0,u.default)(g.default.findDOMNode(a),e.target)},a.handleMouse=function(e){!a.preventMouseRootClose&&a.props.onRootClose&&a.props.onRootClose(e)},a.handleKeyUp=function(e){e.keyCode===x&&a.props.onRootClose&&a.props.onRootClose(e)},a.preventMouseRootClose=!1,a}return a(t,e),t.prototype.componentDidMount=function(){this.props.disabled||this.addEventListeners()},t.prototype.componentDidUpdate=function(e){!this.props.disabled&&e.disabled?this.addEventListeners():this.props.disabled&&!e.disabled&&this.removeEventListeners()},t.prototype.componentWillUnmount=function(){this.props.disabled||this.removeEventListeners()},t.prototype.render=function(){return this.props.children},t}(h.default.Component);T.displayName="RootCloseWrapper",T.propTypes={onRootClose:p.default.func,children:p.default.element,disabled:p.default.bool,event:p.default.oneOf(["click","mousedown"])},T.defaultProps={event:"click"},t.default=T,e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0,t.default=function(e,t,n,r){return(0,o.default)(e,t,n,r),{remove:function(){(0,s.default)(e,t,n,r)}}};var i=n(79),o=r(i),a=n(80),s=r(a);e.exports=t.default},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(0),s=n.n(a),l=n(1),c=n.n(l),u=n(5),d=n.n(u),p=n(43),f=n(17),h=n(6),m={noCaret:c.a.bool,open:c.a.bool,title:c.a.string,useAnchor:c.a.bool},g={open:!1,useAnchor:!1,bsRole:"toggle"},y=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.noCaret,n=e.open,o=e.useAnchor,a=e.bsClass,l=e.className,c=e.children,u=Object(i.a)(e,["noCaret","open","useAnchor","bsClass","className","children"]);delete u.bsRole;var h=o?f.a:p.a,m=!t;return s.a.createElement(h,Object(r.a)({},u,{role:"button",className:d()(l,a),"aria-haspopup":!0,"aria-expanded":n}),c||u.title,m&&" ",m&&s.a.createElement("span",{className:"caret"}))},t}(s.a.Component);y.propTypes=m,y.defaultProps=g,t.a=Object(h.a)("dropdown-toggle",y)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(9),f=n.n(p),h=n(6),m={fluid:d.a.bool,componentClass:f.a},g={componentClass:"div",fluid:!1},y=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.fluid,n=e.componentClass,o=e.className,a=Object(i.a)(e,["fluid","componentClass","className"]),l=Object(h.f)(a),u=l[0],d=l[1],p=Object(h.e)(u,t&&"fluid");return c.a.createElement(n,Object(r.a)({},d,{className:s()(o,p)}))},t}(c.a.Component);y.propTypes=m,y.defaultProps=g,t.a=Object(h.a)("container",y)},function(e,t,n){"use strict";var r=n(33),i=n.n(r),o=n(3),a=n(4),s=n(2),l=n(5),c=n.n(l),u=n(0),d=n.n(u),p=n(1),f=n.n(p),h=n(6),m=n(12),g={active:f.a.any,disabled:f.a.any,header:f.a.node,listItem:f.a.bool,onClick:f.a.func,href:f.a.string,type:f.a.string},y={listItem:!1},b=function(e){function t(){return e.apply(this,arguments)||this}Object(s.a)(t,e);var n=t.prototype;return n.renderHeader=function(e,t){return d.a.isValidElement(e)?Object(u.cloneElement)(e,{className:c()(e.props.className,t)}):d.a.createElement("h4",{className:t},e)},n.render=function(){var e,t=this.props,n=t.active,r=t.disabled,i=t.className,s=t.header,l=t.listItem,u=t.children,p=Object(a.a)(t,["active","disabled","className","header","listItem","children"]),f=Object(h.f)(p),m=f[0],g=f[1],y=Object(o.a)({},Object(h.d)(m),{active:n,disabled:r});return g.href?e="a":g.onClick?(e="button",g.type=g.type||"button"):e=l?"li":"span",g.className=c()(i,y),s?d.a.createElement(e,g,this.renderHeader(s,Object(h.e)(m,"heading")),d.a.createElement("p",{className:Object(h.e)(m,"text")},u)):d.a.createElement(e,g,u)},t}(d.a.Component);b.propTypes=g,b.defaultProps=y,t.a=Object(h.a)("list-group-item",Object(h.c)(i()(m.d),b))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){if((!o&&0!==o||e)&&i.default){var t=document.createElement("div");t.style.position="absolute",t.style.top="-9999px",t.style.width="50px",t.style.height="50px",t.style.overflow="scroll",document.body.appendChild(t),o=t.offsetWidth-t.clientWidth,document.body.removeChild(t)}return o};var r=n(21),i=function(e){return e&&e.__esModule?e:{default:e}}(r),o=void 0;e.exports=t.default},function(e,t,n){"use strict";function r(e,t){return e.classList?!!t&&e.classList.contains(t):-1!==(" "+(e.className.baseVal||e.className)+" ").indexOf(" "+t+" ")}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r,e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e){return e&&"body"===e.tagName.toLowerCase()}function o(e){var t=(0,u.default)(e),n=(0,l.default)(t),r=n.innerWidth;if(!r){var i=t.documentElement.getBoundingClientRect();r=i.right-Math.abs(i.left)}return t.body.clientWidth<r}function a(e){return(0,l.default)(e)||i(e)?o(e):e.scrollHeight>e.clientHeight}t.__esModule=!0,t.default=a;var s=n(56),l=r(s),c=n(34),u=r(c);e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function a(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var s=n(1),l=r(s),c=n(55),u=r(c),d=n(0),p=r(d),f=n(13),h=r(f),m=n(57),g=r(m),y=n(36),b=r(y),v=n(375),w=r(v),x=function(e){function t(){var n,r,a;i(this,t);for(var s=arguments.length,l=Array(s),c=0;c<s;c++)l[c]=arguments[c];return n=r=o(this,e.call.apply(e,[this].concat(l))),r.setContainer=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:r.props;r._portalContainerNode=(0,g.default)(e.container,(0,b.default)(r).body)},r.getMountNode=function(){return r._portalContainerNode},a=n,o(r,a)}return a(t,e),t.prototype.componentDidMount=function(){this.setContainer(),this.forceUpdate(this.props.onRendered)},t.prototype.componentWillReceiveProps=function(e){e.container!==this.props.container&&this.setContainer(e)},t.prototype.componentWillUnmount=function(){this._portalContainerNode=null},t.prototype.render=function(){return this.props.children&&this._portalContainerNode?h.default.createPortal(this.props.children,this._portalContainerNode):null},t}(p.default.Component);x.displayName="Portal",x.propTypes={container:l.default.oneOfType([u.default,l.default.func]),onRendered:l.default.func},t.default=h.default.createPortal?x:w.default,e.exports=t.default},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(9),d=n.n(u),p=n(6),f={componentClass:d.a},h={componentClass:"div"},m=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.componentClass,n=e.className,o=Object(i.a)(e,["componentClass","className"]),a=Object(p.f)(o),l=a[0],u=a[1],d=Object(p.d)(l);return c.a.createElement(t,Object(r.a)({},u,{className:s()(n,d)}))},t}(c.a.Component);m.propTypes=f,m.defaultProps=h,t.a=Object(p.a)("modal-body",m)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(6),f=n(12),h={dialogClassName:d.a.string},m=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e,t=this.props,n=t.dialogClassName,o=t.className,a=t.style,l=t.children,u=Object(i.a)(t,["dialogClassName","className","style","children"]),d=Object(p.f)(u),f=d[0],h=d[1],m=Object(p.e)(f),g=Object(r.a)({display:"block"},a),y=Object(r.a)({},Object(p.d)(f),(e={},e[m]=!1,e[Object(p.e)(f,"dialog")]=!0,e));return c.a.createElement("div",Object(r.a)({},h,{tabIndex:"-1",role:"dialog",style:g,className:s()(o,m)}),c.a.createElement("div",{className:s()(n,y)},c.a.createElement("div",{className:Object(p.e)(f,"content"),role:"document"},l)))},t}(c.a.Component);m.propTypes=h,t.a=Object(p.a)("modal",Object(p.b)([f.c.LARGE,f.c.SMALL],m))},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(9),d=n.n(u),p=n(6),f={componentClass:d.a},h={componentClass:"div"},m=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.componentClass,n=e.className,o=Object(i.a)(e,["componentClass","className"]),a=Object(p.f)(o),l=a[0],u=a[1],d=Object(p.d)(l);return c.a.createElement(t,Object(r.a)({},u,{className:s()(n,d)}))},t}(c.a.Component);m.propTypes=f,m.defaultProps=h,t.a=Object(p.a)("modal-footer",m)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(1),c=n.n(l),u=n(0),d=n.n(u),p=n(6),f=n(10),h=n(72),m={closeLabel:c.a.string,closeButton:c.a.bool,onHide:c.a.func},g={closeLabel:"Close",closeButton:!1},y={$bs_modal:c.a.shape({onHide:c.a.func})},b=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.closeLabel,n=e.closeButton,o=e.onHide,a=e.className,l=e.children,c=Object(i.a)(e,["closeLabel","closeButton","onHide","className","children"]),u=this.context.$bs_modal,m=Object(p.f)(c),g=m[0],y=m[1],b=Object(p.d)(g);return d.a.createElement("div",Object(r.a)({},y,{className:s()(a,b)}),n&&d.a.createElement(h.a,{label:t,onClick:Object(f.a)(u&&u.onHide,o)}),l)},t}(d.a.Component);b.propTypes=m,b.defaultProps=g,b.contextTypes=y,t.a=Object(p.a)("modal-header",b)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(9),d=n.n(u),p=n(6),f={componentClass:d.a},h={componentClass:"h4"},m=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.componentClass,n=e.className,o=Object(i.a)(e,["componentClass","className"]),a=Object(p.f)(o),l=a[0],u=a[1],d=Object(p.d)(l);return c.a.createElement(t,Object(r.a)({},u,{className:s()(n,d)}))},t}(c.a.Component);m.propTypes=f,m.defaultProps=h,t.a=Object(p.a)("modal-title",m)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(77),c=n.n(l),u=n(0),d=n.n(u),p=n(1),f=n.n(p),h=n(13),m=n.n(h),g=n(49),y=n.n(g),b=n(15),v=(n.n(b),n(6)),w=n(10),x=n(14),T={activeKey:f.a.any,activeHref:f.a.string,stacked:f.a.bool,justified:y()(f.a.bool,function(e){var t=e.justified,n=e.navbar;return t&&n?Error("justified navbar `Nav`s are not supported"):null}),onSelect:f.a.func,role:f.a.string,navbar:f.a.bool,pullRight:f.a.bool,pullLeft:f.a.bool},S={justified:!1,pullRight:!1,pullLeft:!1,stacked:!1},C={$bs_navbar:f.a.shape({bsClass:f.a.string,onSelect:f.a.func}),$bs_tabContainer:f.a.shape({activeKey:f.a.any,onSelect:f.a.func.isRequired,getTabId:f.a.func.isRequired,getPaneId:f.a.func.isRequired})},k=function(e){function t(){return e.apply(this,arguments)||this}Object(o.a)(t,e);var n=t.prototype;return n.componentDidUpdate=function(){var e=this;if(this._needsRefocus){this._needsRefocus=!1;var t=this.props.children,n=this.getActiveProps(),r=n.activeKey,i=n.activeHref,o=x.a.find(t,function(t){return e.isActive(t,r,i)}),a=x.a.toArray(t),s=a.indexOf(o),l=m.a.findDOMNode(this).children,c=l&&l[s];c&&c.firstChild&&c.firstChild.focus()}},n.getActiveProps=function(){var e=this.context.$bs_tabContainer;return e||this.props},n.getNextActiveChild=function(e){var t=this,n=this.props.children,r=n.filter(function(e){return null!=e.props.eventKey&&!e.props.disabled}),i=this.getActiveProps(),o=i.activeKey,a=i.activeHref,s=x.a.find(n,function(e){return t.isActive(e,o,a)}),l=r.indexOf(s);if(-1===l)return r[0];var c=l+e,u=r.length;return c>=u?c=0:c<0&&(c=u-1),r[c]},n.getTabProps=function(e,t,n,r,i){var o=this;if(!t&&"tablist"!==n)return null;var a=e.props,s=a.id,l=a["aria-controls"],c=a.eventKey,u=a.role,d=a.onKeyDown,p=a.tabIndex;return t&&(s=t.getTabId(c),l=t.getPaneId(c)),"tablist"===n&&(u=u||"tab",d=Object(w.a)(function(e){return o.handleTabKeyDown(i,e)},d),p=r?p:-1),{id:s,role:u,onKeyDown:d,"aria-controls":l,tabIndex:p}},n.handleTabKeyDown=function(e,t){var n;switch(t.keyCode){case c.a.codes.left:case c.a.codes.up:n=this.getNextActiveChild(-1);break;case c.a.codes.right:case c.a.codes.down:n=this.getNextActiveChild(1);break;default:return}t.preventDefault(),e&&n&&null!=n.props.eventKey&&e(n.props.eventKey),this._needsRefocus=!0},n.isActive=function(e,t,n){var r=e.props;return!!(r.active||null!=t&&r.eventKey===t||n&&r.href===n)||r.active},n.render=function(){var e,t=this,n=this.props,o=n.stacked,a=n.justified,l=n.onSelect,c=n.role,p=n.navbar,f=n.pullRight,h=n.pullLeft,m=n.className,g=n.children,y=Object(i.a)(n,["stacked","justified","onSelect","role","navbar","pullRight","pullLeft","className","children"]),b=this.context.$bs_tabContainer,T=c||(b?"tablist":null),S=this.getActiveProps(),C=S.activeKey,k=S.activeHref;delete y.activeKey,delete y.activeHref;var O,E,P=Object(v.f)(y),j=P[0],I=P[1],_=Object(r.a)({},Object(v.d)(j),(e={},e[Object(v.e)(j,"stacked")]=o,e[Object(v.e)(j,"justified")]=a,e)),R=null!=p?p:this.context.$bs_navbar;if(R){var A=this.context.$bs_navbar||{bsClass:"navbar"};_[Object(v.e)(A,"nav")]=!0,E=Object(v.e)(A,"right"),O=Object(v.e)(A,"left")}else E="pull-right",O="pull-left";return _[E]=f,_[O]=h,d.a.createElement("ul",Object(r.a)({},I,{role:T,className:s()(m,_)}),x.a.map(g,function(e){var n=t.isActive(e,C,k),i=Object(w.a)(e.props.onSelect,l,R&&R.onSelect,b&&b.onSelect);return Object(u.cloneElement)(e,Object(r.a)({},t.getTabProps(e,b,T,n,i),{active:n,activeKey:C,activeHref:k,onSelect:i}))}))},t}(d.a.Component);k.propTypes=T,k.defaultProps=S,k.contextTypes=C,t.a=Object(v.a)("nav",Object(v.c)(["tabs","pills"],k))},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(6),f={$bs_navbar:d.a.shape({bsClass:d.a.string})},h=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.className,n=e.children,o=Object(i.a)(e,["className","children"]),a=this.context.$bs_navbar||{bsClass:"navbar"},l=Object(p.e)(a,"brand");return c.a.isValidElement(n)?c.a.cloneElement(n,{className:s()(n.props.className,t,l)}):c.a.createElement("span",Object(r.a)({},o,{className:s()(t,l)}),n)},t}(c.a.Component);h.contextTypes=f,t.a=h},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(11),s=n(5),l=n.n(s),c=n(0),u=n.n(c),d=n(1),p=n.n(d),f=n(17),h=n(10),m={active:p.a.bool,disabled:p.a.bool,role:p.a.string,href:p.a.string,onClick:p.a.func,onSelect:p.a.func,eventKey:p.a.any},g={active:!1,disabled:!1},y=function(e){function t(t,n){var r;return r=e.call(this,t,n)||this,r.handleClick=r.handleClick.bind(Object(a.a)(r)),r}Object(o.a)(t,e);var n=t.prototype;return n.handleClick=function(e){if(this.props.disabled)return void e.preventDefault();this.props.onSelect&&this.props.onSelect(this.props.eventKey,e)},n.render=function(){var e=this.props,t=e.active,n=e.disabled,o=e.onClick,a=e.className,s=e.style,c=Object(i.a)(e,["active","disabled","onClick","className","style"]);return delete c.onSelect,delete c.eventKey,delete c.activeKey,delete c.activeHref,c.role?"tab"===c.role&&(c["aria-selected"]=t):"#"===c.href&&(c.role="button"),u.a.createElement("li",{role:"presentation",className:l()(a,{active:t,disabled:n}),style:s},u.a.createElement(f.a,Object(r.a)({},c,{disabled:n,onClick:Object(h.a)(o,this.handleClick)})))},t}(u.a.Component);y.propTypes=m,y.defaultProps=g,t.a=y},function(e,t,n){"use strict";var r=n(4),i=n(2),o=n(3),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(383),f=n.n(p),h=n(9),m=n.n(h),g=n(53),y=Object(o.a)({},f.a.propTypes,{show:d.a.bool,rootClose:d.a.bool,onHide:d.a.func,animation:d.a.oneOfType([d.a.bool,m.a]),onEnter:d.a.func,onEntering:d.a.func,onEntered:d.a.func,onExit:d.a.func,onExiting:d.a.func,onExited:d.a.func,placement:d.a.oneOf(["top","right","bottom","left"])}),b={animation:g.a,rootClose:!1,show:!1,placement:"right"},v=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){var e,t=this.props,n=t.animation,i=t.children,a=Object(r.a)(t,["animation","children"]),u=!0===n?g.a:n||null;return e=u?i:Object(l.cloneElement)(i,{className:s()(i.props.className,"in")}),c.a.createElement(f.a,Object(o.a)({},a,{transition:u}),e)},t}(c.a.Component);v.propTypes=y,v.defaultProps=b,t.a=v},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e){var t=(0,u.default)(e),n=(0,l.default)(t),r=t&&t.documentElement,i={top:0,left:0,height:0,width:0};if(t)return(0,a.default)(r,e)?(void 0!==e.getBoundingClientRect&&(i=e.getBoundingClientRect()),i={top:i.top+(n.pageYOffset||r.scrollTop)-(r.clientTop||0),left:i.left+(n.pageXOffset||r.scrollLeft)-(r.clientLeft||0),width:(null==i.width?e.offsetWidth:i.width)||0,height:(null==i.height?e.offsetHeight:i.height)||0}):i}Object.defineProperty(t,"__esModule",{value:!0}),t.default=i;var o=n(35),a=r(o),s=n(56),l=r(s),c=n(34),u=r(c);e.exports=t.default},function(e,t,n){"use strict";function r(e,t){var n=(0,o.default)(e);if(void 0===t)return n?"pageYOffset"in n?n.pageYOffset:n.document.documentElement.scrollTop:e.scrollTop;n?n.scrollTo("pageXOffset"in n?n.pageXOffset:n.document.documentElement.scrollLeft,t):e.scrollTop=t}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r;var i=n(56),o=function(e){return e&&e.__esModule?e:{default:e}}(i);e.exports=t.default},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(11),s=n(5),l=n.n(s),c=n(0),u=n.n(c),d=n(1),p=n.n(d),f=n(17),h=n(10),m={disabled:p.a.bool,previous:p.a.bool,next:p.a.bool,onClick:p.a.func,onSelect:p.a.func,eventKey:p.a.any},g={disabled:!1,previous:!1,next:!1},y=function(e){function t(t,n){var r;return r=e.call(this,t,n)||this,r.handleSelect=r.handleSelect.bind(Object(a.a)(r)),r}Object(o.a)(t,e);var n=t.prototype;return n.handleSelect=function(e){var t=this.props,n=t.disabled,r=t.onSelect,i=t.eventKey;if(n)return void e.preventDefault();r&&r(i,e)},n.render=function(){var e=this.props,t=e.disabled,n=e.previous,o=e.next,a=e.onClick,s=e.className,c=e.style,d=Object(i.a)(e,["disabled","previous","next","onClick","className","style"]);return delete d.onSelect,delete d.eventKey,u.a.createElement("li",{className:l()(s,{disabled:t,previous:n,next:o}),style:c},u.a.createElement(f.a,Object(r.a)({},d,{disabled:t,onClick:Object(h.a)(a,this.handleSelect)})))},t}(u.a.Component);y.propTypes=m,y.defaultProps=g,t.a=y},function(e,t,n){"use strict";var r=n(3),i=n(2),o=n(1),a=n.n(o),s=n(0),l=n.n(s),c=n(6),u=n(76),d={onEnter:a.a.func,onEntering:a.a.func,onEntered:a.a.func,onExit:a.a.func,onExiting:a.a.func,onExited:a.a.func},p={$bs_panel:a.a.shape({headingId:a.a.string,bodyId:a.a.string,bsClass:a.a.string,expanded:a.a.bool})},f=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){var e=this.props.children,t=this.context.$bs_panel||{},n=t.headingId,i=t.bodyId,o=t.bsClass,a=t.expanded,s=Object(c.f)(this.props),d=s[0],p=s[1];return d.bsClass=o||d.bsClass,n&&i&&(p.id=i,p.role=p.role||"tabpanel",p["aria-labelledby"]=n),l.a.createElement(u.a,Object(r.a)({in:a},p),l.a.createElement("div",{className:Object(c.e)(d,"collapse")},e))},t}(l.a.Component);f.propTypes=d,f.contextTypes=p,t.a=Object(c.a)("panel",f)},function(e,t,n){"use strict";var r=n(4),i=n(2),o=n(11),a=n(1),s=n.n(a),l=n(0),c=n.n(l),u=n(5),d=n.n(u),p=n(81),f=n.n(p),h=n(17),m=n(10),g={onClick:s.a.func,componentClass:f.a},y={componentClass:h.a},b={$bs_panel:s.a.shape({bodyId:s.a.string,onToggle:s.a.func,expanded:s.a.bool})},v=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return t=e.call.apply(e,[this].concat(r))||this,t.handleToggle=t.handleToggle.bind(Object(o.a)(t)),t}Object(i.a)(t,e);var n=t.prototype;return n.handleToggle=function(e){var t=this.context.$bs_panel||{},n=t.onToggle;n&&n(e)},n.render=function(){var e=this.props,t=e.onClick,n=e.className,i=e.componentClass,o=Object(r.a)(e,["onClick","className","componentClass"]),a=this.context.$bs_panel||{},s=a.expanded,l=a.bodyId,u=i;return o.onClick=Object(m.a)(t,this.handleToggle),o["aria-expanded"]=s,o.className=d()(n,!s&&"collapsed"),l&&(o["aria-controls"]=l),c.a.createElement(u,o)},t}(c.a.Component);v.propTypes=g,v.defaultProps=y,v.contextTypes=b,t.a=v},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(11),s=n(5),l=n.n(s),c=n(0),u=n.n(c),d=n(1),p=n.n(d),f=n(9),h=n.n(f),m=n(15),g=(n.n(m),n(6)),y=n(10),b=n(53),v={eventKey:p.a.any,animation:p.a.oneOfType([p.a.bool,h.a]),id:p.a.string,"aria-labelledby":p.a.string,bsClass:p.a.string,onEnter:p.a.func,onEntering:p.a.func,onEntered:p.a.func,onExit:p.a.func,onExiting:p.a.func,onExited:p.a.func,mountOnEnter:p.a.bool,unmountOnExit:p.a.bool},w={$bs_tabContainer:p.a.shape({getTabId:p.a.func,getPaneId:p.a.func}),$bs_tabContent:p.a.shape({bsClass:p.a.string,animation:p.a.oneOfType([p.a.bool,h.a]),activeKey:p.a.any,mountOnEnter:p.a.bool,unmountOnExit:p.a.bool,onPaneEnter:p.a.func.isRequired,onPaneExited:p.a.func.isRequired,exiting:p.a.bool.isRequired})},x={$bs_tabContainer:p.a.oneOf([null])},T=function(e){function t(t,n){var r;return r=e.call(this,t,n)||this,r.handleEnter=r.handleEnter.bind(Object(a.a)(r)),r.handleExited=r.handleExited.bind(Object(a.a)(r)),r.in=!1,r}Object(o.a)(t,e);var n=t.prototype;return n.getChildContext=function(){return{$bs_tabContainer:null}},n.componentDidMount=function(){this.shouldBeIn()&&this.handleEnter()},n.componentDidUpdate=function(){this.in?this.shouldBeIn()||this.handleExited():this.shouldBeIn()&&this.handleEnter()},n.componentWillUnmount=function(){this.in&&this.handleExited()},n.getAnimation=function(){if(null!=this.props.animation)return this.props.animation;var e=this.context.$bs_tabContent;return e&&e.animation},n.handleEnter=function(){var e=this.context.$bs_tabContent;e&&(this.in=e.onPaneEnter(this,this.props.eventKey))},n.handleExited=function(){var e=this.context.$bs_tabContent;e&&(e.onPaneExited(this),this.in=!1)},n.isActive=function(){var e=this.context.$bs_tabContent,t=e&&e.activeKey;return this.props.eventKey===t},n.shouldBeIn=function(){return this.getAnimation()&&this.isActive()},n.render=function(){var e=this.props,t=e.eventKey,n=e.className,o=e.onEnter,a=e.onEntering,s=e.onEntered,c=e.onExit,d=e.onExiting,p=e.onExited,f=e.mountOnEnter,h=e.unmountOnExit,m=Object(i.a)(e,["eventKey","className","onEnter","onEntering","onEntered","onExit","onExiting","onExited","mountOnEnter","unmountOnExit"]),v=this.context,w=v.$bs_tabContent,x=v.$bs_tabContainer,T=Object(g.g)(m,["animation"]),S=T[0],C=T[1],k=this.isActive(),O=this.getAnimation(),E=null!=f?f:w&&w.mountOnEnter,P=null!=h?h:w&&w.unmountOnExit;if(!k&&!O&&P)return null;var j=!0===O?b.a:O||null;w&&(S.bsClass=Object(g.e)(w,"pane"));var I=Object(r.a)({},Object(g.d)(S),{active:k});x&&(C.id=x.getPaneId(t),C["aria-labelledby"]=x.getTabId(t));var _=u.a.createElement("div",Object(r.a)({},C,{role:"tabpanel","aria-hidden":!k,className:l()(n,I)}));if(j){var R=w&&w.exiting;return u.a.createElement(j,{in:k&&!R,onEnter:Object(y.a)(this.handleEnter,o),onEntering:a,onEntered:s,onExit:c,onExiting:d,onExited:Object(y.a)(this.handleExited,p),mountOnEnter:E,unmountOnExit:P},_)}return _},t}(u.a.Component);T.propTypes=v,T.contextTypes=w,T.childContextTypes=x,t.a=Object(g.a)("tab-pane",T)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(1),s=n.n(a),l=n(0),c=n.n(l),u=n(43),d={type:s.a.oneOf(["checkbox","radio"]),name:s.a.string,checked:s.a.bool,disabled:s.a.bool,onChange:s.a.func,value:s.a.any.isRequired},p=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.children,n=e.name,o=e.checked,a=e.type,s=e.onChange,l=e.value,d=Object(i.a)(e,["children","name","checked","type","onChange","value"]),p=d.disabled;return c.a.createElement(u.a,Object(r.a)({},d,{active:!!o,componentClass:"label"}),c.a.createElement("input",{name:n,type:a,autoComplete:"off",value:l,checked:!!o,disabled:!!p,onChange:s}),t)},t}(c.a.Component);p.propTypes=d,t.a=p},function(e,t,n){"use strict";function r(e){return function(t,n){function r(){return i}var i=e(t,n);return r.dependsOnOwnProps=!1,r}}function i(e){return null!==e.dependsOnOwnProps&&void 0!==e.dependsOnOwnProps?Boolean(e.dependsOnOwnProps):1!==e.length}function o(e,t){return function(t,n){var r=(n.displayName,function(e,t){return r.dependsOnOwnProps?r.mapToProps(e,t):r.mapToProps(e)});return r.dependsOnOwnProps=!0,r.mapToProps=function(t,n){r.mapToProps=e,r.dependsOnOwnProps=i(e);var o=r(t,n);return"function"===typeof o&&(r.mapToProps=o,r.dependsOnOwnProps=i(o),o=r(t,n)),o},r}}t.__esModule=!0,t.wrapMapToPropsConstant=r,t.getDependsOnOwnProps=i,t.wrapMapToPropsFunc=o;var a=n(142);!function(e){e&&e.__esModule}(a)},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t,n){(0,a.default)(e)||(0,l.default)(n+"() in "+t+" must return a plain object. Instead received "+e+".")}t.__esModule=!0,t.default=i;var o=n(508),a=r(o),s=n(144),l=r(s)},function(e,t,n){var r=n(510),i=r.Symbol;e.exports=i},function(e,t,n){"use strict";function r(e){"undefined"!==typeof console&&"function"===typeof console.error&&console.error(e);try{throw new Error(e)}catch(e){}}t.__esModule=!0,t.default=r},function(e,t,n){n(146),e.exports=n(151)},function(e,t,n){"use strict";"undefined"===typeof Promise&&(n(147).enable(),window.Promise=n(149)),n(150),Object.assign=n(59)},function(e,t,n){"use strict";function r(){c=!1,s._47=null,s._71=null}function i(e){function t(t){(e.allRejections||a(d[t].error,e.whitelist||l))&&(d[t].displayId=u++,e.onUnhandled?(d[t].logged=!0,e.onUnhandled(d[t].displayId,d[t].error)):(d[t].logged=!0,o(d[t].displayId,d[t].error)))}function n(t){d[t].logged&&(e.onHandled?e.onHandled(d[t].displayId,d[t].error):d[t].onUnhandled||(console.warn("Promise Rejection Handled (id: "+d[t].displayId+"):"),console.warn('  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id '+d[t].displayId+".")))}e=e||{},c&&r(),c=!0;var i=0,u=0,d={};s._47=function(e){2===e._83&&d[e._56]&&(d[e._56].logged?n(e._56):clearTimeout(d[e._56].timeout),delete d[e._56])},s._71=function(e,n){0===e._75&&(e._56=i++,d[e._56]={displayId:null,error:n,timeout:setTimeout(t.bind(null,e._56),a(n,l)?100:2e3),logged:!1})}}function o(e,t){console.warn("Possible Unhandled Promise Rejection (id: "+e+"):"),((t&&(t.stack||t))+"").split("\n").forEach(function(e){console.warn("  "+e)})}function a(e,t){return t.some(function(t){return e instanceof t})}var s=n(84),l=[ReferenceError,TypeError,RangeError],c=!1;t.disable=r,t.enable=i},function(e,t,n){"use strict";(function(t){function n(e){a.length||(o(),s=!0),a[a.length]=e}function r(){for(;l<a.length;){var e=l;if(l+=1,a[e].call(),l>c){for(var t=0,n=a.length-l;t<n;t++)a[t]=a[t+l];a.length-=l,l=0}}a.length=0,l=0,s=!1}function i(e){return function(){function t(){clearTimeout(n),clearInterval(r),e()}var n=setTimeout(t,0),r=setInterval(t,50)}}e.exports=n;var o,a=[],s=!1,l=0,c=1024,u="undefined"!==typeof t?t:self,d=u.MutationObserver||u.WebKitMutationObserver;o="function"===typeof d?function(e){var t=1,n=new d(e),r=document.createTextNode("");return n.observe(r,{characterData:!0}),function(){t=-t,r.data=t}}(r):i(r),n.requestFlush=o,n.makeRequestCallFromTimer=i}).call(t,n(37))},function(e,t,n){"use strict";function r(e){var t=new i(i._44);return t._83=1,t._18=e,t}var i=n(84);e.exports=i;var o=r(!0),a=r(!1),s=r(null),l=r(void 0),c=r(0),u=r("");i.resolve=function(e){if(e instanceof i)return e;if(null===e)return s;if(void 0===e)return l;if(!0===e)return o;if(!1===e)return a;if(0===e)return c;if(""===e)return u;if("object"===typeof e||"function"===typeof e)try{var t=e.then;if("function"===typeof t)return new i(t.bind(e))}catch(e){return new i(function(t,n){n(e)})}return r(e)},i.all=function(e){var t=Array.prototype.slice.call(e);return new i(function(e,n){function r(a,s){if(s&&("object"===typeof s||"function"===typeof s)){if(s instanceof i&&s.then===i.prototype.then){for(;3===s._83;)s=s._18;return 1===s._83?r(a,s._18):(2===s._83&&n(s._18),void s.then(function(e){r(a,e)},n))}var l=s.then;if("function"===typeof l){return void new i(l.bind(s)).then(function(e){r(a,e)},n)}}t[a]=s,0===--o&&e(t)}if(0===t.length)return e([]);for(var o=t.length,a=0;a<t.length;a++)r(a,t[a])})},i.reject=function(e){return new i(function(t,n){n(e)})},i.race=function(e){return new i(function(t,n){e.forEach(function(e){i.resolve(e).then(t,n)})})},i.prototype.catch=function(e){return this.then(null,e)}},function(e,t){!function(e){"use strict";function t(e){if("string"!==typeof e&&(e=String(e)),/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e))throw new TypeError("Invalid character in header field name");return e.toLowerCase()}function n(e){return"string"!==typeof e&&(e=String(e)),e}function r(e){var t={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return y.iterable&&(t[Symbol.iterator]=function(){return t}),t}function i(e){this.map={},e instanceof i?e.forEach(function(e,t){this.append(t,e)},this):Array.isArray(e)?e.forEach(function(e){this.append(e[0],e[1])},this):e&&Object.getOwnPropertyNames(e).forEach(function(t){this.append(t,e[t])},this)}function o(e){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"));e.bodyUsed=!0}function a(e){return new Promise(function(t,n){e.onload=function(){t(e.result)},e.onerror=function(){n(e.error)}})}function s(e){var t=new FileReader,n=a(t);return t.readAsArrayBuffer(e),n}function l(e){var t=new FileReader,n=a(t);return t.readAsText(e),n}function c(e){for(var t=new Uint8Array(e),n=new Array(t.length),r=0;r<t.length;r++)n[r]=String.fromCharCode(t[r]);return n.join("")}function u(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function d(){return this.bodyUsed=!1,this._initBody=function(e){if(this._bodyInit=e,e)if("string"===typeof e)this._bodyText=e;else if(y.blob&&Blob.prototype.isPrototypeOf(e))this._bodyBlob=e;else if(y.formData&&FormData.prototype.isPrototypeOf(e))this._bodyFormData=e;else if(y.searchParams&&URLSearchParams.prototype.isPrototypeOf(e))this._bodyText=e.toString();else if(y.arrayBuffer&&y.blob&&v(e))this._bodyArrayBuffer=u(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer]);else{if(!y.arrayBuffer||!ArrayBuffer.prototype.isPrototypeOf(e)&&!w(e))throw new Error("unsupported BodyInit type");this._bodyArrayBuffer=u(e)}else this._bodyText="";this.headers.get("content-type")||("string"===typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):y.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},y.blob&&(this.blob=function(){var e=o(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?o(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(s)}),this.text=function(){var e=o(this);if(e)return e;if(this._bodyBlob)return l(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(c(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},y.formData&&(this.formData=function(){return this.text().then(h)}),this.json=function(){return this.text().then(JSON.parse)},this}function p(e){var t=e.toUpperCase();return x.indexOf(t)>-1?t:e}function f(e,t){t=t||{};var n=t.body;if(e instanceof f){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new i(e.headers)),this.method=e.method,this.mode=e.mode,n||null==e._bodyInit||(n=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"omit",!t.headers&&this.headers||(this.headers=new i(t.headers)),this.method=p(t.method||this.method||"GET"),this.mode=t.mode||this.mode||null,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&n)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(n)}function h(e){var t=new FormData;return e.trim().split("&").forEach(function(e){if(e){var n=e.split("="),r=n.shift().replace(/\+/g," "),i=n.join("=").replace(/\+/g," ");t.append(decodeURIComponent(r),decodeURIComponent(i))}}),t}function m(e){var t=new i;return e.split(/\r?\n/).forEach(function(e){var n=e.split(":"),r=n.shift().trim();if(r){var i=n.join(":").trim();t.append(r,i)}}),t}function g(e,t){t||(t={}),this.type="default",this.status="status"in t?t.status:200,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in t?t.statusText:"OK",this.headers=new i(t.headers),this.url=t.url||"",this._initBody(e)}if(!e.fetch){var y={searchParams:"URLSearchParams"in e,iterable:"Symbol"in e&&"iterator"in Symbol,blob:"FileReader"in e&&"Blob"in e&&function(){try{return new Blob,!0}catch(e){return!1}}(),formData:"FormData"in e,arrayBuffer:"ArrayBuffer"in e};if(y.arrayBuffer)var b=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],v=function(e){return e&&DataView.prototype.isPrototypeOf(e)},w=ArrayBuffer.isView||function(e){return e&&b.indexOf(Object.prototype.toString.call(e))>-1};i.prototype.append=function(e,r){e=t(e),r=n(r);var i=this.map[e];this.map[e]=i?i+","+r:r},i.prototype.delete=function(e){delete this.map[t(e)]},i.prototype.get=function(e){return e=t(e),this.has(e)?this.map[e]:null},i.prototype.has=function(e){return this.map.hasOwnProperty(t(e))},i.prototype.set=function(e,r){this.map[t(e)]=n(r)},i.prototype.forEach=function(e,t){for(var n in this.map)this.map.hasOwnProperty(n)&&e.call(t,this.map[n],n,this)},i.prototype.keys=function(){var e=[];return this.forEach(function(t,n){e.push(n)}),r(e)},i.prototype.values=function(){var e=[];return this.forEach(function(t){e.push(t)}),r(e)},i.prototype.entries=function(){var e=[];return this.forEach(function(t,n){e.push([n,t])}),r(e)},y.iterable&&(i.prototype[Symbol.iterator]=i.prototype.entries);var x=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];f.prototype.clone=function(){return new f(this,{body:this._bodyInit})},d.call(f.prototype),d.call(g.prototype),g.prototype.clone=function(){return new g(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new i(this.headers),url:this.url})},g.error=function(){var e=new g(null,{status:0,statusText:""});return e.type="error",e};var T=[301,302,303,307,308];g.redirect=function(e,t){if(-1===T.indexOf(t))throw new RangeError("Invalid status code");return new g(null,{status:t,headers:{location:e}})},e.Headers=i,e.Request=f,e.Response=g,e.fetch=function(e,t){return new Promise(function(n,r){var i=new f(e,t),o=new XMLHttpRequest;o.onload=function(){var e={status:o.status,statusText:o.statusText,headers:m(o.getAllResponseHeaders()||"")};e.url="responseURL"in o?o.responseURL:e.headers.get("X-Request-URL");var t="response"in o?o.response:o.responseText;n(new g(t,e))},o.onerror=function(){r(new TypeError("Network request failed"))},o.ontimeout=function(){r(new TypeError("Network request failed"))},o.open(i.method,i.url,!0),"include"===i.credentials&&(o.withCredentials=!0),"responseType"in o&&y.blob&&(o.responseType="blob"),i.headers.forEach(function(e,t){o.setRequestHeader(t,e)}),o.send("undefined"===typeof i._bodyInit?null:i._bodyInit)})},e.fetch.polyfill=!0}}("undefined"!==typeof self?self:this)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});n(152)},function(e,t,n){"use strict";var r=n(0),i=n.n(r),o=n(13),a=(n.n(o),n(161)),s=n(185),l=(n.n(s),n(186)),c=(n.n(l),n(187)),u=n(501);Object(o.render)(i.a.createElement(a.a,{store:c.a},i.a.createElement(u.a,null)),document.getElementById("root"))},function(e,t,n){"use strict";function r(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);b(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}function i(e,t,n){this.props=e,this.context=t,this.refs=v,this.updater=n||R}function o(){}function a(e,t,n){this.props=e,this.context=t,this.refs=v,this.updater=n||R}function s(e,t,n){var r=void 0,i={},o=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(o=""+t.key),t)B.call(t,r)&&!M.hasOwnProperty(r)&&(i[r]=t[r]);var s=arguments.length-2;if(1===s)i.children=n;else if(1<s){for(var l=Array(s),c=0;c<s;c++)l[c]=arguments[c+2];i.children=l}if(e&&e.defaultProps)for(r in s=e.defaultProps)void 0===i[r]&&(i[r]=s[r]);return{$$typeof:T,type:e,key:o,ref:a,props:i,_owner:N.current}}function l(e){return"object"===typeof e&&null!==e&&e.$$typeof===T}function c(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}function u(e,t,n,r){if(D.length){var i=D.pop();return i.result=e,i.keyPrefix=t,i.func=n,i.context=r,i.count=0,i}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function d(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>D.length&&D.push(e)}function p(e,t,n,i){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var a=!1;if(null===e)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case T:case S:a=!0}}if(a)return n(i,e,""===t?"."+f(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var s=0;s<e.length;s++){o=e[s];var l=t+f(o,s);a+=p(o,l,n,i)}else if(null===e||"undefined"===typeof e?l=null:(l=_&&e[_]||e["@@iterator"],l="function"===typeof l?l:null),"function"===typeof l)for(e=l.call(e),s=0;!(o=e.next()).done;)o=o.value,l=t+f(o,s++),a+=p(o,l,n,i);else"object"===o&&(n=""+e,r("31","[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return a}function f(e,t){return"object"===typeof e&&null!==e&&null!=e.key?c(e.key):t.toString(36)}function h(e,t){e.func.call(e.context,t,e.count++)}function m(e,t,n){var r=e.result,i=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?g(e,r,n,w.thatReturnsArgument):null!=e&&(l(e)&&(t=i+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(L,"$&/")+"/")+n,e={$$typeof:T,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}),r.push(e))}function g(e,t,n,r,i){var o="";null!=n&&(o=(""+n).replace(L,"$&/")+"/"),t=u(t,o,r,i),null==e||p(e,"",m,t),d(t)}var y=n(59),b=n(85),v=n(86),w=n(87),x="function"===typeof Symbol&&Symbol.for,T=x?Symbol.for("react.element"):60103,S=x?Symbol.for("react.portal"):60106,C=x?Symbol.for("react.fragment"):60107,k=x?Symbol.for("react.strict_mode"):60108,O=x?Symbol.for("react.profiler"):60114,E=x?Symbol.for("react.provider"):60109,P=x?Symbol.for("react.context"):60110,j=x?Symbol.for("react.async_mode"):60111,I=x?Symbol.for("react.forward_ref"):60112;x&&Symbol.for("react.timeout");var _="function"===typeof Symbol&&Symbol.iterator,R={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};i.prototype.isReactComponent={},i.prototype.setState=function(e,t){"object"!==typeof e&&"function"!==typeof e&&null!=e&&r("85"),this.updater.enqueueSetState(this,e,t,"setState")},i.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},o.prototype=i.prototype;var A=a.prototype=new o;A.constructor=a,y(A,i.prototype),A.isPureReactComponent=!0;var N={current:null},B=Object.prototype.hasOwnProperty,M={key:!0,ref:!0,__self:!0,__source:!0},L=/\/+/g,D=[],G={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return g(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;t=u(null,null,t,n),null==e||p(e,"",h,t),d(t)},count:function(e){return null==e?0:p(e,"",w.thatReturnsNull,null)},toArray:function(e){var t=[];return g(e,t,null,w.thatReturnsArgument),t},only:function(e){return l(e)||r("143"),e}},createRef:function(){return{current:null}},Component:i,PureComponent:a,createContext:function(e,t){return void 0===t&&(t=null),e={$$typeof:P,_calculateChangedBits:t,_defaultValue:e,_currentValue:e,_currentValue2:e,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null},e.Provider={$$typeof:E,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:I,render:e}},Fragment:C,StrictMode:k,unstable_AsyncMode:j,unstable_Profiler:O,createElement:s,cloneElement:function(e,t,n){(null===e||void 0===e)&&r("267",e);var i=void 0,o=y({},e.props),a=e.key,s=e.ref,l=e._owner;if(null!=t){void 0!==t.ref&&(s=t.ref,l=N.current),void 0!==t.key&&(a=""+t.key);var c=void 0;e.type&&e.type.defaultProps&&(c=e.type.defaultProps);for(i in t)B.call(t,i)&&!M.hasOwnProperty(i)&&(o[i]=void 0===t[i]&&void 0!==c?c[i]:t[i])}if(1===(i=arguments.length-2))o.children=n;else if(1<i){c=Array(i);for(var u=0;u<i;u++)c[u]=arguments[u+2];o.children=c}return{$$typeof:T,type:e.type,key:a,ref:s,props:o,_owner:l}},createFactory:function(e){var t=s.bind(null,e);return t.type=e,t},isValidElement:l,version:"16.4.2",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:N,assign:y}},F={default:G},H=F&&G||F;e.exports=H.default?H.default:H},function(e,t,n){"use strict";function r(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);Nr(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}function i(e,t,n,r,i,o,a,s,l){this._hasCaughtError=!1,this._caughtError=null;var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this._caughtError=e,this._hasCaughtError=!0}}function o(){if(Ur._hasRethrowError){var e=Ur._rethrowError;throw Ur._rethrowError=null,Ur._hasRethrowError=!1,e}}function a(){if(Xr)for(var e in Wr){var t=Wr[e],n=Xr.indexOf(e);if(-1<n||r("96",e),!Yr[n]){t.extractEvents||r("97",e),Yr[n]=t,n=t.eventTypes;for(var i in n){var o=void 0,a=n[i],l=t,c=i;zr.hasOwnProperty(c)&&r("99",c),zr[c]=a;var u=a.phasedRegistrationNames;if(u){for(o in u)u.hasOwnProperty(o)&&s(u[o],l,c);o=!0}else a.registrationName?(s(a.registrationName,l,c),o=!0):o=!1;o||r("98",i,e)}}}}function s(e,t,n){Kr[e]&&r("100",e),Kr[e]=t,qr[e]=t.eventTypes[n].dependencies}function l(e){Xr&&r("101"),Xr=Array.prototype.slice.call(e),a()}function c(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var i=e[t];Wr.hasOwnProperty(t)&&Wr[t]===i||(Wr[t]&&r("102",t),Wr[t]=i,n=!0)}n&&a()}function u(e,t,n,r){t=e.type||"unknown-event",e.currentTarget=Zr(r),Ur.invokeGuardedCallbackAndCatchFirstError(t,n,void 0,e),e.currentTarget=null}function d(e,t){return null==t&&r("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function p(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}function f(e,t){if(e){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var i=0;i<n.length&&!e.isPropagationStopped();i++)u(e,t,n[i],r[i]);else n&&u(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function h(e){return f(e,!0)}function m(e){return f(e,!1)}function g(e,t){var n=e.stateNode;if(!n)return null;var i=Jr(n);if(!i)return null;n=i[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(i=!i.disabled)||(e=e.type,i=!("button"===e||"input"===e||"select"===e||"textarea"===e)),e=!i;break e;default:e=!1}return e?null:(n&&"function"!==typeof n&&r("231",t,typeof n),n)}function y(e,t){null!==e&&(ei=d(ei,e)),e=ei,ei=null,e&&(t?p(e,h):p(e,m),ei&&r("95"),Ur.rethrowCaughtError())}function b(e,t,n,r){for(var i=null,o=0;o<Yr.length;o++){var a=Yr[o];a&&(a=a.extractEvents(e,t,n,r))&&(i=d(i,a))}y(i,!1)}function v(e){if(e[ii])return e[ii];for(;!e[ii];){if(!e.parentNode)return null;e=e.parentNode}return e=e[ii],5===e.tag||6===e.tag?e:null}function w(e){if(5===e.tag||6===e.tag)return e.stateNode;r("33")}function x(e){return e[oi]||null}function T(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function S(e,t,n){for(var r=[];e;)r.push(e),e=T(e);for(e=r.length;0<e--;)t(r[e],"captured",n);for(e=0;e<r.length;e++)t(r[e],"bubbled",n)}function C(e,t,n){(t=g(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=d(n._dispatchListeners,t),n._dispatchInstances=d(n._dispatchInstances,e))}function k(e){e&&e.dispatchConfig.phasedRegistrationNames&&S(e._targetInst,C,e)}function O(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst;t=t?T(t):null,S(t,C,e)}}function E(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=g(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=d(n._dispatchListeners,t),n._dispatchInstances=d(n._dispatchInstances,e))}function P(e){e&&e.dispatchConfig.registrationName&&E(e._targetInst,null,e)}function j(e){p(e,k)}function I(e,t,n,r){if(n&&r)e:{for(var i=n,o=r,a=0,s=i;s;s=T(s))a++;s=0;for(var l=o;l;l=T(l))s++;for(;0<a-s;)i=T(i),a--;for(;0<s-a;)o=T(o),s--;for(;a--;){if(i===o||i===o.alternate)break e;i=T(i),o=T(o)}i=null}else i=null;for(o=i,i=[];n&&n!==o&&(null===(a=n.alternate)||a!==o);)i.push(n),n=T(n);for(n=[];r&&r!==o&&(null===(a=r.alternate)||a!==o);)n.push(r),r=T(r);for(r=0;r<i.length;r++)E(i[r],"bubbled",e);for(e=n.length;0<e--;)E(n[e],"captured",t)}function _(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}function R(e){if(ci[e])return ci[e];if(!li[e])return e;var t,n=li[e];for(t in n)if(n.hasOwnProperty(t)&&t in ui)return ci[e]=n[t];return e}function A(){return!gi&&Mr.canUseDOM&&(gi="textContent"in document.documentElement?"textContent":"innerText"),gi}function N(){if(yi._fallbackText)return yi._fallbackText;var e,t,n=yi._startText,r=n.length,i=B(),o=i.length;for(e=0;e<r&&n[e]===i[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===i[o-t];t++);return yi._fallbackText=i.slice(e,1<t?1-t:void 0),yi._fallbackText}function B(){return"value"in yi._root?yi._root.value:yi._root[A()]}function M(e,t,n,r){this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface;for(var i in e)e.hasOwnProperty(i)&&((t=e[i])?this[i]=t(n):"target"===i?this.target=r:this[i]=n[i]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Dr.thatReturnsTrue:Dr.thatReturnsFalse,this.isPropagationStopped=Dr.thatReturnsFalse,this}function L(e,t,n,r){if(this.eventPool.length){var i=this.eventPool.pop();return this.call(i,e,t,n,r),i}return new this(e,t,n,r)}function D(e){e instanceof this||r("223"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function G(e){e.eventPool=[],e.getPooled=L,e.release=D}function F(e,t){switch(e){case"keyup":return-1!==Ti.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function H(e){return e=e.detail,"object"===typeof e&&"data"in e?e.data:null}function V(e,t){switch(e){case"compositionend":return H(t);case"keypress":return 32!==t.which?null:(ji=!0,Ei);case"textInput":return e=t.data,e===Ei&&ji?null:e;default:return null}}function U(e,t){if(Ii)return"compositionend"===e||!Si&&F(e,t)?(e=N(),yi._root=null,yi._startText=null,yi._fallbackText=null,Ii=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Oi?null:t.data;default:return null}}function X(e){if(e=Qr(e)){Ri&&"function"===typeof Ri.restoreControlledState||r("194");var t=Jr(e.stateNode);Ri.restoreControlledState(e.stateNode,e.type,t)}}function W(e){Ni?Bi?Bi.push(e):Bi=[e]:Ni=e}function Y(){return null!==Ni||null!==Bi}function z(){if(Ni){var e=Ni,t=Bi;if(Bi=Ni=null,X(e),t)for(e=0;e<t.length;e++)X(t[e])}}function K(e,t){return e(t)}function q(e,t,n){return e(t,n)}function $(){}function J(e,t){if(Li)return e(t);Li=!0;try{return K(e,t)}finally{Li=!1,Y()&&($(),z())}}function Q(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Di[e.type]:"textarea"===t}function Z(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ee(e,t){return!(!Mr.canUseDOM||t&&!("addEventListener"in document))&&(e="on"+e,t=e in document,t||(t=document.createElement("div"),t.setAttribute(e,"return;"),t="function"===typeof t[e]),t)}function te(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function ne(e){var t=te(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var i=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return i.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}function re(e){e._valueTracker||(e._valueTracker=ne(e))}function ie(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=te(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function oe(e){return null===e||"undefined"===typeof e?null:(e=Ji&&e[Ji]||e["@@iterator"],"function"===typeof e?e:null)}function ae(e){var t=e.type;if("function"===typeof t)return t.displayName||t.name;if("string"===typeof t)return t;switch(t){case Ki:return"AsyncMode";case zi:return"Context.Consumer";case Ui:return"ReactFragment";case Vi:return"ReactPortal";case Wi:return"Profiler("+e.pendingProps.id+")";case Yi:return"Context.Provider";case Xi:return"StrictMode";case $i:return"Timeout"}if("object"===typeof t&&null!==t)switch(t.$$typeof){case qi:return e=t.render.displayName||t.render.name||"",""!==e?"ForwardRef("+e+")":"ForwardRef"}return null}function se(e){var t="";do{e:switch(e.tag){case 0:case 1:case 2:case 5:var n=e._debugOwner,r=e._debugSource,i=ae(e),o=null;n&&(o=ae(n)),n=r,i="\n    in "+(i||"Unknown")+(n?" (at "+n.fileName.replace(/^.*[\\\/]/,"")+":"+n.lineNumber+")":o?" (created by "+o+")":"");break e;default:i=""}t+=i,e=e.return}while(e);return t}function le(e){return!!Zi.call(to,e)||!Zi.call(eo,e)&&(Qi.test(e)?to[e]=!0:(eo[e]=!0,!1))}function ce(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}function ue(e,t,n,r){if(null===t||"undefined"===typeof t||ce(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function de(e,t,n,r,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=n,this.propertyName=e,this.type=t}function pe(e){return e[1].toUpperCase()}function fe(e,t,n,r){var i=no.hasOwnProperty(t)?no[t]:null;(null!==i?0===i.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(ue(t,n,i,r)&&(n=null),r||null===i?le(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):i.mustUseProperty?e[i.propertyName]=null===n?3!==i.type&&"":n:(t=i.attributeName,r=i.attributeNamespace,null===n?e.removeAttribute(t):(i=i.type,n=3===i||4===i&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function he(e,t){var n=t.checked;return Lr({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function me(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=we(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function ge(e,t){null!=(t=t.checked)&&fe(e,"checked",t,!1)}function ye(e,t){ge(e,t);var n=we(t.value);null!=n&&("number"===t.type?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n)),t.hasOwnProperty("value")?ve(e,t.type,n):t.hasOwnProperty("defaultValue")&&ve(e,t.type,we(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function be(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){t=""+e._wrapperState.initialValue;var r=e.value;n||t===r||(e.value=t),e.defaultValue=t}n=e.name,""!==n&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!e.defaultChecked,""!==n&&(e.name=n)}function ve(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function we(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function xe(e,t,n){return e=M.getPooled(io.change,e,t,n),e.type="change",W(n),j(e),e}function Te(e){y(e,!1)}function Se(e){if(ie(w(e)))return e}function Ce(e,t){if("change"===e)return t}function ke(){oo&&(oo.detachEvent("onpropertychange",Oe),ao=oo=null)}function Oe(e){"value"===e.propertyName&&Se(ao)&&(e=xe(ao,e,Z(e)),J(Te,e))}function Ee(e,t,n){"focus"===e?(ke(),oo=t,ao=n,oo.attachEvent("onpropertychange",Oe)):"blur"===e&&ke()}function Pe(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Se(ao)}function je(e,t){if("click"===e)return Se(t)}function Ie(e,t){if("input"===e||"change"===e)return Se(t)}function _e(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=uo[e])&&!!t[e]}function Re(){return _e}function Ae(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!==(2&t.effectTag))return 1;for(;t.return;)if(t=t.return,0!==(2&t.effectTag))return 1}return 3===t.tag?2:3}function Ne(e){2!==Ae(e)&&r("188")}function Be(e){var t=e.alternate;if(!t)return t=Ae(e),3===t&&r("188"),1===t?null:e;for(var n=e,i=t;;){var o=n.return,a=o?o.alternate:null;if(!o||!a)break;if(o.child===a.child){for(var s=o.child;s;){if(s===n)return Ne(o),e;if(s===i)return Ne(o),t;s=s.sibling}r("188")}if(n.return!==i.return)n=o,i=a;else{s=!1;for(var l=o.child;l;){if(l===n){s=!0,n=o,i=a;break}if(l===i){s=!0,i=o,n=a;break}l=l.sibling}if(!s){for(l=a.child;l;){if(l===n){s=!0,n=a,i=o;break}if(l===i){s=!0,i=a,n=o;break}l=l.sibling}s||r("189")}}n.alternate!==i&&r("190")}return 3!==n.tag&&r("188"),n.stateNode.current===n?e:t}function Me(e){if(!(e=Be(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Le(e){if(!(e=Be(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child&&4!==t.tag)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function De(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function Ge(e,t){var n=e[0];e=e[1];var r="on"+(e[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},Eo[e]=t,Po[n]=t}function Fe(e){var t=e.targetInst;do{if(!t){e.ancestors.push(t);break}var n;for(n=t;n.return;)n=n.return;if(!(n=3!==n.tag?null:n.stateNode.containerInfo))break;e.ancestors.push(t),t=v(n)}while(t);for(n=0;n<e.ancestors.length;n++)t=e.ancestors[n],b(e.topLevelType,t,e.nativeEvent,Z(e.nativeEvent))}function He(e){Ro=!!e}function Ve(e,t){if(!t)return null;var n=(Io(e)?Xe:We).bind(null,e);t.addEventListener(e,n,!1)}function Ue(e,t){if(!t)return null;var n=(Io(e)?Xe:We).bind(null,e);t.addEventListener(e,n,!0)}function Xe(e,t){q(We,e,t)}function We(e,t){if(Ro){var n=Z(t);if(n=v(n),null===n||"number"!==typeof n.tag||2===Ae(n)||(n=null),_o.length){var r=_o.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{J(Fe,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>_o.length&&_o.push(e)}}}function Ye(e){return Object.prototype.hasOwnProperty.call(e,Mo)||(e[Mo]=Bo++,No[e[Mo]]={}),No[e[Mo]]}function ze(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Ke(e,t){var n=ze(e);e=0;for(var r;n;){if(3===n.nodeType){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=ze(n)}}function qe(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function $e(e,t){if(Vo||null==Go||Go!==Gr())return null;var n=Go;return"selectionStart"in n&&qe(n)?n={start:n.selectionStart,end:n.selectionEnd}:window.getSelection?(n=window.getSelection(),n={anchorNode:n.anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}):n=void 0,Ho&&Fr(Ho,n)?null:(Ho=n,e=M.getPooled(Do.select,Fo,e,t),e.type="select",e.target=Go,j(e),e)}function Je(e){var t="";return Br.Children.forEach(e,function(e){null==e||"string"!==typeof e&&"number"!==typeof e||(t+=e)}),t}function Qe(e,t){return e=Lr({children:void 0},t),(t=Je(t.children))&&(e.children=t),e}function Ze(e,t,n,r){if(e=e.options,t){t={};for(var i=0;i<n.length;i++)t["$"+n[i]]=!0;for(n=0;n<e.length;n++)i=t.hasOwnProperty("$"+e[n].value),e[n].selected!==i&&(e[n].selected=i),i&&r&&(e[n].defaultSelected=!0)}else{for(n=""+n,t=null,i=0;i<e.length;i++){if(e[i].value===n)return e[i].selected=!0,void(r&&(e[i].defaultSelected=!0));null!==t||e[i].disabled||(t=e[i])}null!==t&&(t.selected=!0)}}function et(e,t){var n=t.value;e._wrapperState={initialValue:null!=n?n:t.defaultValue,wasMultiple:!!t.multiple}}function tt(e,t){return null!=t.dangerouslySetInnerHTML&&r("91"),Lr({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function nt(e,t){var n=t.value;null==n&&(n=t.defaultValue,t=t.children,null!=t&&(null!=n&&r("92"),Array.isArray(t)&&(1>=t.length||r("93"),t=t[0]),n=""+t),null==n&&(n="")),e._wrapperState={initialValue:""+n}}function rt(e,t){var n=t.value;null!=n&&(n=""+n,n!==e.value&&(e.value=n),null==t.defaultValue&&(e.defaultValue=n)),null!=t.defaultValue&&(e.defaultValue=t.defaultValue)}function it(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}function ot(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function at(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ot(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}function st(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function lt(e,t){e=e.style;for(var n in t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),i=n,o=t[n];i=null==o||"boolean"===typeof o||""===o?"":r||"number"!==typeof o||0===o||ma.hasOwnProperty(i)&&ma[i]?(""+o).trim():o+"px","float"===n&&(n="cssFloat"),r?e.setProperty(n,i):e[n]=i}}function ct(e,t,n){t&&(ya[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&r("137",e,n()),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&r("60"),"object"===typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||r("61")),null!=t.style&&"object"!==typeof t.style&&r("62",n()))}function ut(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function dt(e,t){e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument;var n=Ye(e);t=qr[t];for(var r=0;r<t.length;r++){var i=t[r];if(!n.hasOwnProperty(i)||!n[i]){switch(i){case"scroll":Ue("scroll",e);break;case"focus":case"blur":Ue("focus",e),Ue("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":ee(i,!0)&&Ue(i,e);break;case"invalid":case"submit":case"reset":break;default:-1===mi.indexOf(i)&&Ve(i,e)}n[i]=!0}}}function pt(e,t,n,r){return n=9===n.nodeType?n:n.ownerDocument,r===pa.html&&(r=ot(e)),r===pa.html?"script"===e?(e=n.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):e="string"===typeof t.is?n.createElement(e,{is:t.is}):n.createElement(e):e=n.createElementNS(r,e),e}function ft(e,t){return(9===t.nodeType?t:t.ownerDocument).createTextNode(e)}function ht(e,t,n,r){var i=ut(t,n);switch(t){case"iframe":case"object":Ve("load",e);var o=n;break;case"video":case"audio":for(o=0;o<mi.length;o++)Ve(mi[o],e);o=n;break;case"source":Ve("error",e),o=n;break;case"img":case"image":case"link":Ve("error",e),Ve("load",e),o=n;break;case"form":Ve("reset",e),Ve("submit",e),o=n;break;case"details":Ve("toggle",e),o=n;break;case"input":me(e,n),o=he(e,n),Ve("invalid",e),dt(r,"onChange");break;case"option":o=Qe(e,n);break;case"select":et(e,n),o=Lr({},n,{value:void 0}),Ve("invalid",e),dt(r,"onChange");break;case"textarea":nt(e,n),o=tt(e,n),Ve("invalid",e),dt(r,"onChange");break;default:o=n}ct(t,o,ba);var a,s=o;for(a in s)if(s.hasOwnProperty(a)){var l=s[a];"style"===a?lt(e,l,ba):"dangerouslySetInnerHTML"===a?null!=(l=l?l.__html:void 0)&&ha(e,l):"children"===a?"string"===typeof l?("textarea"!==t||""!==l)&&st(e,l):"number"===typeof l&&st(e,""+l):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(Kr.hasOwnProperty(a)?null!=l&&dt(r,a):null!=l&&fe(e,a,l,i))}switch(t){case"input":re(e),be(e,n,!1);break;case"textarea":re(e),it(e,n);break;case"option":null!=n.value&&e.setAttribute("value",n.value);break;case"select":e.multiple=!!n.multiple,t=n.value,null!=t?Ze(e,!!n.multiple,t,!1):null!=n.defaultValue&&Ze(e,!!n.multiple,n.defaultValue,!0);break;default:"function"===typeof o.onClick&&(e.onclick=Dr)}}function mt(e,t,n,r,i){var o=null;switch(t){case"input":n=he(e,n),r=he(e,r),o=[];break;case"option":n=Qe(e,n),r=Qe(e,r),o=[];break;case"select":n=Lr({},n,{value:void 0}),r=Lr({},r,{value:void 0}),o=[];break;case"textarea":n=tt(e,n),r=tt(e,r),o=[];break;default:"function"!==typeof n.onClick&&"function"===typeof r.onClick&&(e.onclick=Dr)}ct(t,r,ba),t=e=void 0;var a=null;for(e in n)if(!r.hasOwnProperty(e)&&n.hasOwnProperty(e)&&null!=n[e])if("style"===e){var s=n[e];for(t in s)s.hasOwnProperty(t)&&(a||(a={}),a[t]="")}else"dangerouslySetInnerHTML"!==e&&"children"!==e&&"suppressContentEditableWarning"!==e&&"suppressHydrationWarning"!==e&&"autoFocus"!==e&&(Kr.hasOwnProperty(e)?o||(o=[]):(o=o||[]).push(e,null));for(e in r){var l=r[e];if(s=null!=n?n[e]:void 0,r.hasOwnProperty(e)&&l!==s&&(null!=l||null!=s))if("style"===e)if(s){for(t in s)!s.hasOwnProperty(t)||l&&l.hasOwnProperty(t)||(a||(a={}),a[t]="");for(t in l)l.hasOwnProperty(t)&&s[t]!==l[t]&&(a||(a={}),a[t]=l[t])}else a||(o||(o=[]),o.push(e,a)),a=l;else"dangerouslySetInnerHTML"===e?(l=l?l.__html:void 0,s=s?s.__html:void 0,null!=l&&s!==l&&(o=o||[]).push(e,""+l)):"children"===e?s===l||"string"!==typeof l&&"number"!==typeof l||(o=o||[]).push(e,""+l):"suppressContentEditableWarning"!==e&&"suppressHydrationWarning"!==e&&(Kr.hasOwnProperty(e)?(null!=l&&dt(i,e),o||s===l||(o=[])):(o=o||[]).push(e,l))}return a&&(o=o||[]).push("style",a),o}function gt(e,t,n,r,i){"input"===n&&"radio"===i.type&&null!=i.name&&ge(e,i),ut(n,r),r=ut(n,i);for(var o=0;o<t.length;o+=2){var a=t[o],s=t[o+1];"style"===a?lt(e,s,ba):"dangerouslySetInnerHTML"===a?ha(e,s):"children"===a?st(e,s):fe(e,a,s,r)}switch(n){case"input":ye(e,i);break;case"textarea":rt(e,i);break;case"select":e._wrapperState.initialValue=void 0,t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!i.multiple,n=i.value,null!=n?Ze(e,!!i.multiple,n,!1):t!==!!i.multiple&&(null!=i.defaultValue?Ze(e,!!i.multiple,i.defaultValue,!0):Ze(e,!!i.multiple,i.multiple?[]:"",!1))}}function yt(e,t,n,r,i){switch(t){case"iframe":case"object":Ve("load",e);break;case"video":case"audio":for(r=0;r<mi.length;r++)Ve(mi[r],e);break;case"source":Ve("error",e);break;case"img":case"image":case"link":Ve("error",e),Ve("load",e);break;case"form":Ve("reset",e),Ve("submit",e);break;case"details":Ve("toggle",e);break;case"input":me(e,n),Ve("invalid",e),dt(i,"onChange");break;case"select":et(e,n),Ve("invalid",e),dt(i,"onChange");break;case"textarea":nt(e,n),Ve("invalid",e),dt(i,"onChange")}ct(t,n,ba),r=null;for(var o in n)if(n.hasOwnProperty(o)){var a=n[o];"children"===o?"string"===typeof a?e.textContent!==a&&(r=["children",a]):"number"===typeof a&&e.textContent!==""+a&&(r=["children",""+a]):Kr.hasOwnProperty(o)&&null!=a&&dt(i,o)}switch(t){case"input":re(e),be(e,n,!0);break;case"textarea":re(e),it(e,n);break;case"select":case"option":break;default:"function"===typeof n.onClick&&(e.onclick=Dr)}return r}function bt(e,t){return e.nodeValue!==t}function vt(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function wt(e,t){return"textarea"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&"string"===typeof t.dangerouslySetInnerHTML.__html}function xt(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function Tt(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function St(e){return{current:e}}function Ct(e){0>Oa||(e.current=ka[Oa],ka[Oa]=null,Oa--)}function kt(e,t){Oa++,ka[Oa]=e.current,e.current=t}function Ot(e){return Pt(e)?ja:Ea.current}function Et(e,t){var n=e.type.contextTypes;if(!n)return Vr;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var i,o={};for(i in n)o[i]=t[i];return r&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function Pt(e){return 2===e.tag&&null!=e.type.childContextTypes}function jt(e){Pt(e)&&(Ct(Pa,e),Ct(Ea,e))}function It(e){Ct(Pa,e),Ct(Ea,e)}function _t(e,t,n){Ea.current!==Vr&&r("168"),kt(Ea,t,e),kt(Pa,n,e)}function Rt(e,t){var n=e.stateNode,i=e.type.childContextTypes;if("function"!==typeof n.getChildContext)return t;n=n.getChildContext();for(var o in n)o in i||r("108",ae(e)||"Unknown",o);return Lr({},t,n)}function At(e){if(!Pt(e))return!1;var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Vr,ja=Ea.current,kt(Ea,t,e),kt(Pa,Pa.current,e),!0}function Nt(e,t){var n=e.stateNode;if(n||r("169"),t){var i=Rt(e,ja);n.__reactInternalMemoizedMergedChildContext=i,Ct(Pa,e),Ct(Ea,e),kt(Ea,i,e)}else Ct(Pa,e);kt(Pa,t,e)}function Bt(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=null,this.index=0,this.ref=null,this.pendingProps=t,this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.expirationTime=0,this.alternate=null}function Mt(e,t,n){var r=e.alternate;return null===r?(r=new Bt(e.tag,t,e.key,e.mode),r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.effectTag=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.expirationTime=n,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function Lt(e,t,n){var i=e.type,o=e.key;if(e=e.props,"function"===typeof i)var a=i.prototype&&i.prototype.isReactComponent?2:0;else if("string"===typeof i)a=5;else switch(i){case Ui:return Dt(e.children,t,n,o);case Ki:a=11,t|=3;break;case Xi:a=11,t|=2;break;case Wi:return i=new Bt(15,e,o,4|t),i.type=Wi,i.expirationTime=n,i;case $i:a=16,t|=2;break;default:e:{switch("object"===typeof i&&null!==i?i.$$typeof:null){case Yi:a=13;break e;case zi:a=12;break e;case qi:a=14;break e;default:r("130",null==i?i:typeof i,"")}a=void 0}}return t=new Bt(a,e,o,t),t.type=i,t.expirationTime=n,t}function Dt(e,t,n,r){return e=new Bt(10,e,r,t),e.expirationTime=n,e}function Gt(e,t,n){return e=new Bt(6,e,null,t),e.expirationTime=n,e}function Ft(e,t,n){return t=new Bt(4,null!==e.children?e.children:[],e.key,t),t.expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Ht(e,t,n){return t=new Bt(3,null,null,t?3:0),e={current:t,containerInfo:e,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:n,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null},t.stateNode=e}function Vt(e){return function(t){try{return e(t)}catch(e){}}}function Ut(e){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Ia=Vt(function(e){return t.onCommitFiberRoot(n,e)}),_a=Vt(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}return!0}function Xt(e){"function"===typeof Ia&&Ia(e)}function Wt(e){"function"===typeof _a&&_a(e)}function Yt(e){return{expirationTime:0,baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function zt(e){return{expirationTime:e.expirationTime,baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Kt(e){return{expirationTime:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function qt(e,t,n){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t),(0===e.expirationTime||e.expirationTime>n)&&(e.expirationTime=n)}function $t(e,t,n){var r=e.alternate;if(null===r){var i=e.updateQueue,o=null;null===i&&(i=e.updateQueue=Yt(e.memoizedState))}else i=e.updateQueue,o=r.updateQueue,null===i?null===o?(i=e.updateQueue=Yt(e.memoizedState),o=r.updateQueue=Yt(r.memoizedState)):i=e.updateQueue=zt(o):null===o&&(o=r.updateQueue=zt(i));null===o||i===o?qt(i,t,n):null===i.lastUpdate||null===o.lastUpdate?(qt(i,t,n),qt(o,t,n)):(qt(i,t,n),o.lastUpdate=t)}function Jt(e,t,n){var r=e.updateQueue;r=null===r?e.updateQueue=Yt(e.memoizedState):Qt(e,r),null===r.lastCapturedUpdate?r.firstCapturedUpdate=r.lastCapturedUpdate=t:(r.lastCapturedUpdate.next=t,r.lastCapturedUpdate=t),(0===r.expirationTime||r.expirationTime>n)&&(r.expirationTime=n)}function Qt(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=zt(t)),t}function Zt(e,t,n,r,i,o){switch(n.tag){case 1:return e=n.payload,"function"===typeof e?e.call(o,r,i):e;case 3:e.effectTag=-1025&e.effectTag|64;case 0:if(e=n.payload,null===(i="function"===typeof e?e.call(o,r,i):e)||void 0===i)break;return Lr({},r,i);case 2:Ra=!0}return r}function en(e,t,n,r,i){if(Ra=!1,!(0===t.expirationTime||t.expirationTime>i)){t=Qt(e,t);for(var o=t.baseState,a=null,s=0,l=t.firstUpdate,c=o;null!==l;){var u=l.expirationTime;u>i?(null===a&&(a=l,o=c),(0===s||s>u)&&(s=u)):(c=Zt(e,t,l,c,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=l:(t.lastEffect.nextEffect=l,t.lastEffect=l))),l=l.next}for(u=null,l=t.firstCapturedUpdate;null!==l;){var d=l.expirationTime;d>i?(null===u&&(u=l,null===a&&(o=c)),(0===s||s>d)&&(s=d)):(c=Zt(e,t,l,c,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=l:(t.lastCapturedEffect.nextEffect=l,t.lastCapturedEffect=l))),l=l.next}null===a&&(t.lastUpdate=null),null===u?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===u&&(o=c),t.baseState=o,t.firstUpdate=a,t.firstCapturedUpdate=u,t.expirationTime=s,e.memoizedState=c}}function tn(e,t){"function"!==typeof e&&r("191",e),e.call(t)}function nn(e,t,n){for(null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),e=t.firstEffect,t.firstEffect=t.lastEffect=null;null!==e;){var r=e.callback;null!==r&&(e.callback=null,tn(r,n)),e=e.nextEffect}for(e=t.firstCapturedEffect,t.firstCapturedEffect=t.lastCapturedEffect=null;null!==e;)t=e.callback,null!==t&&(e.callback=null,tn(t,n)),e=e.nextEffect}function rn(e,t){return{value:e,source:t,stack:se(t)}}function on(e){var t=e.type._context;kt(Ba,t._changedBits,e),kt(Na,t._currentValue,e),kt(Aa,e,e),t._currentValue=e.pendingProps.value,t._changedBits=e.stateNode}function an(e){var t=Ba.current,n=Na.current;Ct(Aa,e),Ct(Na,e),Ct(Ba,e),e=e.type._context,e._currentValue=n,e._changedBits=t}function sn(e){return e===Ma&&r("174"),e}function ln(e,t){kt(Ga,t,e),kt(Da,e,e),kt(La,Ma,e);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:at(null,"");break;default:n=8===n?t.parentNode:t,t=n.namespaceURI||null,n=n.tagName,t=at(t,n)}Ct(La,e),kt(La,t,e)}function cn(e){Ct(La,e),Ct(Da,e),Ct(Ga,e)}function un(e){Da.current===e&&(Ct(La,e),Ct(Da,e))}function dn(e,t,n){var r=e.memoizedState;t=t(n,r),r=null===t||void 0===t?r:Lr({},r,t),e.memoizedState=r,null!==(e=e.updateQueue)&&0===e.expirationTime&&(e.baseState=r)}function pn(e,t,n,r,i,o){var a=e.stateNode;return e=e.type,"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(n,i,o):!e.prototype||!e.prototype.isPureReactComponent||(!Fr(t,n)||!Fr(r,i))}function fn(e,t,n,r){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Fa.enqueueReplaceState(t,t.state,null)}function hn(e,t){var n=e.type,r=e.stateNode,i=e.pendingProps,o=Ot(e);r.props=i,r.state=e.memoizedState,r.refs=Vr,r.context=Et(e,o),o=e.updateQueue,null!==o&&(en(e,o,i,r,t),r.state=e.memoizedState),o=e.type.getDerivedStateFromProps,"function"===typeof o&&(dn(e,o,i),r.state=e.memoizedState),"function"===typeof n.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(n=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),n!==r.state&&Fa.enqueueReplaceState(r,r.state,null),null!==(o=e.updateQueue)&&(en(e,o,i,r,t),r.state=e.memoizedState)),"function"===typeof r.componentDidMount&&(e.effectTag|=4)}function mn(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){n=n._owner;var i=void 0;n&&(2!==n.tag&&r("110"),i=n.stateNode),i||r("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=i.refs===Vr?i.refs={}:i.refs;null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}"string"!==typeof e&&r("148"),n._owner||r("254",e)}return e}function gn(e,t){"textarea"!==e.type&&r("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function yn(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function i(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return e=Mt(e,t,n),e.index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index,r<n?(t.effectTag=2,n):r):(t.effectTag=2,n):n}function s(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?(t=Gt(n,e.mode,r),t.return=e,t):(t=o(t,n,r),t.return=e,t)}function c(e,t,n,r){return null!==t&&t.type===n.type?(r=o(t,n.props,r),r.ref=mn(e,t,n),r.return=e,r):(r=Lt(n,e.mode,r),r.ref=mn(e,t,n),r.return=e,r)}function u(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?(t=Ft(n,e.mode,r),t.return=e,t):(t=o(t,n.children||[],r),t.return=e,t)}function d(e,t,n,r,i){return null===t||10!==t.tag?(t=Dt(n,e.mode,r,i),t.return=e,t):(t=o(t,n,r),t.return=e,t)}function p(e,t,n){if("string"===typeof t||"number"===typeof t)return t=Gt(""+t,e.mode,n),t.return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case Hi:return n=Lt(t,e.mode,n),n.ref=mn(e,null,t),n.return=e,n;case Vi:return t=Ft(t,e.mode,n),t.return=e,t}if(Ha(t)||oe(t))return t=Dt(t,e.mode,n,null),t.return=e,t;gn(e,t)}return null}function f(e,t,n,r){var i=null!==t?t.key:null;if("string"===typeof n||"number"===typeof n)return null!==i?null:l(e,t,""+n,r);if("object"===typeof n&&null!==n){switch(n.$$typeof){case Hi:return n.key===i?n.type===Ui?d(e,t,n.props.children,r,i):c(e,t,n,r):null;case Vi:return n.key===i?u(e,t,n,r):null}if(Ha(n)||oe(n))return null!==i?null:d(e,t,n,r,null);gn(e,n)}return null}function h(e,t,n,r,i){if("string"===typeof r||"number"===typeof r)return e=e.get(n)||null,l(t,e,""+r,i);if("object"===typeof r&&null!==r){switch(r.$$typeof){case Hi:return e=e.get(null===r.key?n:r.key)||null,r.type===Ui?d(t,e,r.props.children,i,r.key):c(t,e,r,i);case Vi:return e=e.get(null===r.key?n:r.key)||null,u(t,e,r,i)}if(Ha(r)||oe(r))return e=e.get(n)||null,d(t,e,r,i,null);gn(t,r)}return null}function m(r,o,s,l){for(var c=null,u=null,d=o,m=o=0,g=null;null!==d&&m<s.length;m++){d.index>m?(g=d,d=null):g=d.sibling;var y=f(r,d,s[m],l);if(null===y){null===d&&(d=g);break}e&&d&&null===y.alternate&&t(r,d),o=a(y,o,m),null===u?c=y:u.sibling=y,u=y,d=g}if(m===s.length)return n(r,d),c;if(null===d){for(;m<s.length;m++)(d=p(r,s[m],l))&&(o=a(d,o,m),null===u?c=d:u.sibling=d,u=d);return c}for(d=i(r,d);m<s.length;m++)(g=h(d,r,m,s[m],l))&&(e&&null!==g.alternate&&d.delete(null===g.key?m:g.key),o=a(g,o,m),null===u?c=g:u.sibling=g,u=g);return e&&d.forEach(function(e){return t(r,e)}),c}function g(o,s,l,c){var u=oe(l);"function"!==typeof u&&r("150"),null==(l=u.call(l))&&r("151");for(var d=u=null,m=s,g=s=0,y=null,b=l.next();null!==m&&!b.done;g++,b=l.next()){m.index>g?(y=m,m=null):y=m.sibling;var v=f(o,m,b.value,c);if(null===v){m||(m=y);break}e&&m&&null===v.alternate&&t(o,m),s=a(v,s,g),null===d?u=v:d.sibling=v,d=v,m=y}if(b.done)return n(o,m),u;if(null===m){for(;!b.done;g++,b=l.next())null!==(b=p(o,b.value,c))&&(s=a(b,s,g),null===d?u=b:d.sibling=b,d=b);return u}for(m=i(o,m);!b.done;g++,b=l.next())null!==(b=h(m,o,g,b.value,c))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),s=a(b,s,g),null===d?u=b:d.sibling=b,d=b);return e&&m.forEach(function(e){return t(o,e)}),u}return function(e,i,a,l){var c="object"===typeof a&&null!==a&&a.type===Ui&&null===a.key;c&&(a=a.props.children);var u="object"===typeof a&&null!==a;if(u)switch(a.$$typeof){case Hi:e:{for(u=a.key,c=i;null!==c;){if(c.key===u){if(10===c.tag?a.type===Ui:c.type===a.type){n(e,c.sibling),i=o(c,a.type===Ui?a.props.children:a.props,l),i.ref=mn(e,c,a),i.return=e,e=i;break e}n(e,c);break}t(e,c),c=c.sibling}a.type===Ui?(i=Dt(a.props.children,e.mode,l,a.key),i.return=e,e=i):(l=Lt(a,e.mode,l),l.ref=mn(e,i,a),l.return=e,e=l)}return s(e);case Vi:e:{for(c=a.key;null!==i;){if(i.key===c){if(4===i.tag&&i.stateNode.containerInfo===a.containerInfo&&i.stateNode.implementation===a.implementation){n(e,i.sibling),i=o(i,a.children||[],l),i.return=e,e=i;break e}n(e,i);break}t(e,i),i=i.sibling}i=Ft(a,e.mode,l),i.return=e,e=i}return s(e)}if("string"===typeof a||"number"===typeof a)return a=""+a,null!==i&&6===i.tag?(n(e,i.sibling),i=o(i,a,l),i.return=e,e=i):(n(e,i),i=Gt(a,e.mode,l),i.return=e,e=i),s(e);if(Ha(a))return m(e,i,a,l);if(oe(a))return g(e,i,a,l);if(u&&gn(e,a),"undefined"===typeof a&&!c)switch(e.tag){case 2:case 1:l=e.type,r("152",l.displayName||l.name||"Component")}return n(e,i)}}function bn(e,t){var n=new Bt(5,null,null,0);n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function vn(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function wn(e){if(Ya){var t=Wa;if(t){var n=t;if(!vn(e,t)){if(!(t=xt(n))||!vn(e,t))return e.effectTag|=2,Ya=!1,void(Xa=e);bn(Xa,n)}Xa=e,Wa=Tt(t)}else e.effectTag|=2,Ya=!1,Xa=e}}function xn(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;Xa=e}function Tn(e){if(e!==Xa)return!1;if(!Ya)return xn(e),Ya=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!wt(t,e.memoizedProps))for(t=Wa;t;)bn(e,t),t=xt(t);return xn(e),Wa=Xa?xt(e.stateNode):null,!0}function Sn(){Wa=Xa=null,Ya=!1}function Cn(e,t,n){kn(e,t,n,t.expirationTime)}function kn(e,t,n,r){t.child=null===e?Ua(t,null,n,r):Va(t,e.child,n,r)}function On(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function En(e,t,n,r,i){On(e,t);var o=0!==(64&t.effectTag);if(!n&&!o)return r&&Nt(t,!1),_n(e,t);n=t.stateNode,Gi.current=t;var a=o?null:n.render();return t.effectTag|=1,o&&(kn(e,t,null,i),t.child=null),kn(e,t,a,i),t.memoizedState=n.state,t.memoizedProps=n.props,r&&Nt(t,!0),t.child}function Pn(e){var t=e.stateNode;t.pendingContext?_t(e,t.pendingContext,t.pendingContext!==t.context):t.context&&_t(e,t.context,!1),ln(e,t.containerInfo)}function jn(e,t,n,r){var i=e.child;for(null!==i&&(i.return=e);null!==i;){switch(i.tag){case 12:var o=0|i.stateNode;if(i.type===t&&0!==(o&n)){for(o=i;null!==o;){var a=o.alternate;if(0===o.expirationTime||o.expirationTime>r)o.expirationTime=r,null!==a&&(0===a.expirationTime||a.expirationTime>r)&&(a.expirationTime=r);else{if(null===a||!(0===a.expirationTime||a.expirationTime>r))break;a.expirationTime=r}o=o.return}o=null}else o=i.child;break;case 13:o=i.type===e.type?null:i.child;break;default:o=i.child}if(null!==o)o.return=i;else for(o=i;null!==o;){if(o===e){o=null;break}if(null!==(i=o.sibling)){i.return=o.return,o=i;break}o=o.return}i=o}}function In(e,t,n){var r=t.type._context,i=t.pendingProps,o=t.memoizedProps,a=!0;if(Pa.current)a=!1;else if(o===i)return t.stateNode=0,on(t),_n(e,t);var s=i.value;if(t.memoizedProps=i,null===o)s=1073741823;else if(o.value===i.value){if(o.children===i.children&&a)return t.stateNode=0,on(t),_n(e,t);s=0}else{var l=o.value;if(l===s&&(0!==l||1/l===1/s)||l!==l&&s!==s){if(o.children===i.children&&a)return t.stateNode=0,on(t),_n(e,t);s=0}else if(s="function"===typeof r._calculateChangedBits?r._calculateChangedBits(l,s):1073741823,0===(s|=0)){if(o.children===i.children&&a)return t.stateNode=0,on(t),_n(e,t)}else jn(t,r,s,n)}return t.stateNode=s,on(t),Cn(e,t,i.children),t.child}function _n(e,t){if(null!==e&&t.child!==e.child&&r("153"),null!==t.child){e=t.child;var n=Mt(e,e.pendingProps,e.expirationTime);for(t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,n=n.sibling=Mt(e,e.pendingProps,e.expirationTime),n.return=t;n.sibling=null}return t.child}function Rn(e,t,n){if(0===t.expirationTime||t.expirationTime>n){switch(t.tag){case 3:Pn(t);break;case 2:At(t);break;case 4:ln(t,t.stateNode.containerInfo);break;case 13:on(t)}return null}switch(t.tag){case 0:null!==e&&r("155");var i=t.type,o=t.pendingProps,a=Ot(t);return a=Et(t,a),i=i(o,a),t.effectTag|=1,"object"===typeof i&&null!==i&&"function"===typeof i.render&&void 0===i.$$typeof?(a=t.type,t.tag=2,t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,a=a.getDerivedStateFromProps,"function"===typeof a&&dn(t,a,o),o=At(t),i.updater=Fa,t.stateNode=i,i._reactInternalFiber=t,hn(t,n),e=En(e,t,!0,o,n)):(t.tag=1,Cn(e,t,i),t.memoizedProps=o,e=t.child),e;case 1:return o=t.type,n=t.pendingProps,Pa.current||t.memoizedProps!==n?(i=Ot(t),i=Et(t,i),o=o(n,i),t.effectTag|=1,Cn(e,t,o),t.memoizedProps=n,e=t.child):e=_n(e,t),e;case 2:if(o=At(t),null===e)if(null===t.stateNode){var s=t.pendingProps,l=t.type;i=Ot(t);var c=2===t.tag&&null!=t.type.contextTypes;a=c?Et(t,i):Vr,s=new l(s,a),t.memoizedState=null!==s.state&&void 0!==s.state?s.state:null,s.updater=Fa,t.stateNode=s,s._reactInternalFiber=t,c&&(c=t.stateNode,c.__reactInternalMemoizedUnmaskedChildContext=i,c.__reactInternalMemoizedMaskedChildContext=a),hn(t,n),i=!0}else{l=t.type,i=t.stateNode,c=t.memoizedProps,a=t.pendingProps,i.props=c;var u=i.context;s=Ot(t),s=Et(t,s);var d=l.getDerivedStateFromProps;(l="function"===typeof d||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(c!==a||u!==s)&&fn(t,i,a,s),Ra=!1;var p=t.memoizedState;u=i.state=p;var f=t.updateQueue;null!==f&&(en(t,f,a,i,n),u=t.memoizedState),c!==a||p!==u||Pa.current||Ra?("function"===typeof d&&(dn(t,d,a),u=t.memoizedState),(c=Ra||pn(t,c,a,p,u,s))?(l||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(t.effectTag|=4)):("function"===typeof i.componentDidMount&&(t.effectTag|=4),t.memoizedProps=a,t.memoizedState=u),i.props=a,i.state=u,i.context=s,i=c):("function"===typeof i.componentDidMount&&(t.effectTag|=4),i=!1)}else l=t.type,i=t.stateNode,a=t.memoizedProps,c=t.pendingProps,i.props=a,u=i.context,s=Ot(t),s=Et(t,s),d=l.getDerivedStateFromProps,(l="function"===typeof d||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(a!==c||u!==s)&&fn(t,i,c,s),Ra=!1,u=t.memoizedState,p=i.state=u,f=t.updateQueue,null!==f&&(en(t,f,c,i,n),p=t.memoizedState),a!==c||u!==p||Pa.current||Ra?("function"===typeof d&&(dn(t,d,c),p=t.memoizedState),(d=Ra||pn(t,a,c,u,p,s))?(l||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(c,p,s),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(c,p,s)),"function"===typeof i.componentDidUpdate&&(t.effectTag|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!==typeof i.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!==typeof i.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=c,t.memoizedState=p),i.props=c,i.state=p,i.context=s,i=d):("function"!==typeof i.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!==typeof i.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),i=!1);return En(e,t,i,o,n);case 3:return Pn(t),o=t.updateQueue,null!==o?(i=t.memoizedState,i=null!==i?i.element:null,en(t,o,t.pendingProps,null,n),(o=t.memoizedState.element)===i?(Sn(),e=_n(e,t)):(i=t.stateNode,(i=(null===e||null===e.child)&&i.hydrate)&&(Wa=Tt(t.stateNode.containerInfo),Xa=t,i=Ya=!0),i?(t.effectTag|=2,t.child=Ua(t,null,o,n)):(Sn(),Cn(e,t,o)),e=t.child)):(Sn(),e=_n(e,t)),e;case 5:return sn(Ga.current),o=sn(La.current),i=at(o,t.type),o!==i&&(kt(Da,t,t),kt(La,i,t)),null===e&&wn(t),o=t.type,c=t.memoizedProps,i=t.pendingProps,a=null!==e?e.memoizedProps:null,Pa.current||c!==i||((c=1&t.mode&&!!i.hidden)&&(t.expirationTime=1073741823),c&&1073741823===n)?(c=i.children,wt(o,i)?c=null:a&&wt(o,a)&&(t.effectTag|=16),On(e,t),1073741823!==n&&1&t.mode&&i.hidden?(t.expirationTime=1073741823,t.memoizedProps=i,e=null):(Cn(e,t,c),t.memoizedProps=i,e=t.child)):e=_n(e,t),e;case 6:return null===e&&wn(t),t.memoizedProps=t.pendingProps,null;case 16:return null;case 4:return ln(t,t.stateNode.containerInfo),o=t.pendingProps,Pa.current||t.memoizedProps!==o?(null===e?t.child=Va(t,null,o,n):Cn(e,t,o),t.memoizedProps=o,e=t.child):e=_n(e,t),e;case 14:return o=t.type.render,n=t.pendingProps,i=t.ref,Pa.current||t.memoizedProps!==n||i!==(null!==e?e.ref:null)?(o=o(n,i),Cn(e,t,o),t.memoizedProps=n,e=t.child):e=_n(e,t),e;case 10:return n=t.pendingProps,Pa.current||t.memoizedProps!==n?(Cn(e,t,n),t.memoizedProps=n,e=t.child):e=_n(e,t),e;case 11:return n=t.pendingProps.children,Pa.current||null!==n&&t.memoizedProps!==n?(Cn(e,t,n),t.memoizedProps=n,e=t.child):e=_n(e,t),e;case 15:return n=t.pendingProps,t.memoizedProps===n?e=_n(e,t):(Cn(e,t,n.children),t.memoizedProps=n,e=t.child),e;case 13:return In(e,t,n);case 12:e:if(i=t.type,a=t.pendingProps,c=t.memoizedProps,o=i._currentValue,s=i._changedBits,Pa.current||0!==s||c!==a){if(t.memoizedProps=a,l=a.unstable_observedBits,void 0!==l&&null!==l||(l=1073741823),t.stateNode=l,0!==(s&l))jn(t,i,s,n);else if(c===a){e=_n(e,t);break e}n=a.children,n=n(o),t.effectTag|=1,Cn(e,t,n),e=t.child}else e=_n(e,t);return e;default:r("156")}}function An(e){e.effectTag|=4}function Nn(e,t){var n=t.pendingProps;switch(t.tag){case 1:return null;case 2:return jt(t),null;case 3:cn(t),It(t);var i=t.stateNode;return i.pendingContext&&(i.context=i.pendingContext,i.pendingContext=null),null!==e&&null!==e.child||(Tn(t),t.effectTag&=-3),za(t),null;case 5:un(t),i=sn(Ga.current);var o=t.type;if(null!==e&&null!=t.stateNode){var a=e.memoizedProps,s=t.stateNode,l=sn(La.current);s=mt(s,o,a,n,i),Ka(e,t,s,o,a,n,i,l),e.ref!==t.ref&&(t.effectTag|=128)}else{if(!n)return null===t.stateNode&&r("166"),null;if(e=sn(La.current),Tn(t))n=t.stateNode,o=t.type,a=t.memoizedProps,n[ii]=t,n[oi]=a,i=yt(n,o,a,e,i),t.updateQueue=i,null!==i&&An(t);else{e=pt(o,n,i,e),e[ii]=t,e[oi]=n;e:for(a=t.child;null!==a;){if(5===a.tag||6===a.tag)e.appendChild(a.stateNode);else if(4!==a.tag&&null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}ht(e,o,n,i),vt(o,n)&&An(t),t.stateNode=e}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)qa(e,t,e.memoizedProps,n);else{if("string"!==typeof n)return null===t.stateNode&&r("166"),null;i=sn(Ga.current),sn(La.current),Tn(t)?(i=t.stateNode,n=t.memoizedProps,i[ii]=t,bt(i,n)&&An(t)):(i=ft(n,i),i[ii]=t,t.stateNode=i)}return null;case 14:case 16:case 10:case 11:case 15:return null;case 4:return cn(t),za(t),null;case 13:return an(t),null;case 12:return null;case 0:r("167");default:r("156")}}function Bn(e,t){var n=t.source;null===t.stack&&null!==n&&se(n),null!==n&&ae(n),t=t.value,null!==e&&2===e.tag&&ae(e);try{t&&t.suppressReactErrorLogging||console.error(t)}catch(e){e&&e.suppressReactErrorLogging||console.error(e)}}function Mn(e){var t=e.ref;if(null!==t)if("function"===typeof t)try{t(null)}catch(t){$n(e,t)}else t.current=null}function Ln(e){switch("function"===typeof Wt&&Wt(e),e.tag){case 2:Mn(e);var t=e.stateNode;if("function"===typeof t.componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){$n(e,t)}break;case 5:Mn(e);break;case 4:Fn(e)}}function Dn(e){return 5===e.tag||3===e.tag||4===e.tag}function Gn(e){e:{for(var t=e.return;null!==t;){if(Dn(t)){var n=t;break e}t=t.return}r("160"),n=void 0}var i=t=void 0;switch(n.tag){case 5:t=n.stateNode,i=!1;break;case 3:case 4:t=n.stateNode.containerInfo,i=!0;break;default:r("161")}16&n.effectTag&&(st(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||Dn(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(i){var a=t,s=o.stateNode,l=n;8===a.nodeType?a.parentNode.insertBefore(s,l):a.insertBefore(s,l)}else t.insertBefore(o.stateNode,n);else i?(a=t,s=o.stateNode,8===a.nodeType?a.parentNode.insertBefore(s,a):a.appendChild(s)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function Fn(e){for(var t=e,n=!1,i=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&r("160"),n.tag){case 5:i=n.stateNode,o=!1;break e;case 3:case 4:i=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var a=t,s=a;;)if(Ln(s),null!==s.child&&4!==s.tag)s.child.return=s,s=s.child;else{if(s===a)break;for(;null===s.sibling;){if(null===s.return||s.return===a)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}o?(a=i,s=t.stateNode,8===a.nodeType?a.parentNode.removeChild(s):a.removeChild(s)):i.removeChild(t.stateNode)}else if(4===t.tag?i=t.stateNode.containerInfo:Ln(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return,4===t.tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function Hn(e,t){switch(t.tag){case 2:break;case 5:var n=t.stateNode;if(null!=n){var i=t.memoizedProps;e=null!==e?e.memoizedProps:i;var o=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&(n[oi]=i,gt(n,a,o,e,i))}break;case 6:null===t.stateNode&&r("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 15:case 16:break;default:r("163")}}function Vn(e,t,n){n=Kt(n),n.tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){hr(r),Bn(e,t)},n}function Un(e,t,n){n=Kt(n),n.tag=3;var r=e.stateNode;return null!==r&&"function"===typeof r.componentDidCatch&&(n.callback=function(){null===us?us=new Set([this]):us.add(this);var n=t.value,r=t.stack;Bn(e,t),this.componentDidCatch(n,{componentStack:null!==r?r:""})}),n}function Xn(e,t,n,r,i,o){n.effectTag|=512,n.firstEffect=n.lastEffect=null,r=rn(r,n),e=t;do{switch(e.tag){case 3:return e.effectTag|=1024,r=Vn(e,r,o),void Jt(e,r,o);case 2:if(t=r,n=e.stateNode,0===(64&e.effectTag)&&null!==n&&"function"===typeof n.componentDidCatch&&(null===us||!us.has(n)))return e.effectTag|=1024,r=Un(e,t,o),void Jt(e,r,o)}e=e.return}while(null!==e)}function Wn(e){switch(e.tag){case 2:jt(e);var t=e.effectTag;return 1024&t?(e.effectTag=-1025&t|64,e):null;case 3:return cn(e),It(e),t=e.effectTag,1024&t?(e.effectTag=-1025&t|64,e):null;case 5:return un(e),null;case 16:return t=e.effectTag,1024&t?(e.effectTag=-1025&t|64,e):null;case 4:return cn(e),null;case 13:return an(e),null;default:return null}}function Yn(){if(null!==ns)for(var e=ns.return;null!==e;){var t=e;switch(t.tag){case 2:jt(t);break;case 3:cn(t),It(t);break;case 5:un(t);break;case 4:cn(t);break;case 13:an(t)}e=e.return}rs=null,is=0,os=-1,as=!1,ns=null,cs=!1}function zn(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0===(512&e.effectTag)){t=Nn(t,e,is);var i=e;if(1073741823===is||1073741823!==i.expirationTime){var o=0;switch(i.tag){case 3:case 2:var a=i.updateQueue;null!==a&&(o=a.expirationTime)}for(a=i.child;null!==a;)0!==a.expirationTime&&(0===o||o>a.expirationTime)&&(o=a.expirationTime),a=a.sibling;i.expirationTime=o}if(null!==t)return t;if(null!==n&&0===(512&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e)),null!==r)return r;if(null===n){cs=!0;break}e=n}else{if(null!==(e=Wn(e,as,is)))return e.effectTag&=511,e;if(null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=512),null!==r)return r;if(null===n)break;e=n}}return null}function Kn(e){var t=Rn(e.alternate,e,is);return null===t&&(t=zn(e)),Gi.current=null,t}function qn(e,t,n){ts&&r("243"),ts=!0,t===is&&e===rs&&null!==ns||(Yn(),rs=e,is=t,os=-1,ns=Mt(rs.current,null,is),e.pendingCommitExpirationTime=0);var i=!1;for(as=!n||is<=Ja;;){try{if(n)for(;null!==ns&&!fr();)ns=Kn(ns);else for(;null!==ns;)ns=Kn(ns)}catch(t){if(null===ns)i=!0,hr(t);else{null===ns&&r("271"),n=ns;var o=n.return;if(null===o){i=!0,hr(t);break}Xn(e,o,n,t,as,is,Qa),ns=zn(n)}}break}if(ts=!1,i)return null;if(null===ns){if(cs)return e.pendingCommitExpirationTime=t,e.current.alternate;as&&r("262"),0<=os&&setTimeout(function(){var t=e.current.expirationTime;0!==t&&(0===e.remainingExpirationTime||e.remainingExpirationTime<t)&&ir(e,t)},os),mr(e.current.expirationTime)}return null}function $n(e,t){var n;e:{for(ts&&!ls&&r("263"),n=e.return;null!==n;){switch(n.tag){case 2:var i=n.stateNode;if("function"===typeof n.type.getDerivedStateFromCatch||"function"===typeof i.componentDidCatch&&(null===us||!us.has(i))){e=rn(t,e),e=Un(n,e,1),$t(n,e,1),Zn(n,1),n=void 0;break e}break;case 3:e=rn(t,e),e=Vn(n,e,1),$t(n,e,1),Zn(n,1),n=void 0;break e}n=n.return}3===e.tag&&(n=rn(t,e),n=Vn(e,n,1),$t(e,n,1),Zn(e,1)),n=void 0}return n}function Jn(){var e=2+25*(1+((er()-2+500)/25|0));return e<=Za&&(e=Za+1),Za=e}function Qn(e,t){return e=0!==es?es:ts?ls?1:is:1&t.mode?ks?2+10*(1+((e-2+15)/10|0)):2+25*(1+((e-2+500)/25|0)):1,ks&&(0===bs||e>bs)&&(bs=e),e}function Zn(e,t){for(;null!==e;){if((0===e.expirationTime||e.expirationTime>t)&&(e.expirationTime=t),null!==e.alternate&&(0===e.alternate.expirationTime||e.alternate.expirationTime>t)&&(e.alternate.expirationTime=t),null===e.return){if(3!==e.tag)break;var n=e.stateNode;!ts&&0!==is&&t<is&&Yn();var i=n.current.expirationTime;ts&&!ls&&rs===n||ir(n,i),Ps>Es&&r("185")}e=e.return}}function er(){return Qa=Ta()-$a,Ja=2+(Qa/10|0)}function tr(e){var t=es;es=2+25*(1+((er()-2+500)/25|0));try{return e()}finally{es=t}}function nr(e,t,n,r,i){var o=es;es=1;try{return e(t,n,r,i)}finally{es=o}}function rr(e){if(0!==fs){if(e>fs)return;null!==hs&&Ca(hs)}var t=Ta()-$a;fs=e,hs=Sa(ar,{timeout:10*(e-2)-t})}function ir(e,t){if(null===e.nextScheduledRoot)e.remainingExpirationTime=t,null===ps?(ds=ps=e,e.nextScheduledRoot=e):(ps=ps.nextScheduledRoot=e,ps.nextScheduledRoot=ds);else{var n=e.remainingExpirationTime;(0===n||t<n)&&(e.remainingExpirationTime=t)}ms||(Ss?Cs&&(gs=e,ys=1,dr(e,1,!1)):1===t?sr():rr(t))}function or(){var e=0,t=null;if(null!==ps)for(var n=ps,i=ds;null!==i;){var o=i.remainingExpirationTime;if(0===o){if((null===n||null===ps)&&r("244"),i===i.nextScheduledRoot){ds=ps=i.nextScheduledRoot=null;break}if(i===ds)ds=o=i.nextScheduledRoot,ps.nextScheduledRoot=o,i.nextScheduledRoot=null;else{if(i===ps){ps=n,ps.nextScheduledRoot=ds,i.nextScheduledRoot=null;break}n.nextScheduledRoot=i.nextScheduledRoot,i.nextScheduledRoot=null}i=n.nextScheduledRoot}else{if((0===e||o<e)&&(e=o,t=i),i===ps)break;n=i,i=i.nextScheduledRoot}}n=gs,null!==n&&n===t&&1===e?Ps++:Ps=0,gs=t,ys=e}function ar(e){lr(0,!0,e)}function sr(){lr(1,!1,null)}function lr(e,t,n){if(Ts=n,or(),t)for(;null!==gs&&0!==ys&&(0===e||e>=ys)&&(!vs||er()>=ys);)er(),dr(gs,ys,!vs),or();else for(;null!==gs&&0!==ys&&(0===e||e>=ys);)dr(gs,ys,!1),or();null!==Ts&&(fs=0,hs=null),0!==ys&&rr(ys),Ts=null,vs=!1,ur()}function cr(e,t){ms&&r("253"),gs=e,ys=t,dr(e,t,!1),sr(),ur()}function ur(){if(Ps=0,null!==Os){var e=Os;Os=null;for(var t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){ws||(ws=!0,xs=e)}}}if(ws)throw e=xs,xs=null,ws=!1,e}function dr(e,t,n){ms&&r("245"),ms=!0,n?(n=e.finishedWork,null!==n?pr(e,n,t):null!==(n=qn(e,t,!0))&&(fr()?e.finishedWork=n:pr(e,n,t))):(n=e.finishedWork,null!==n?pr(e,n,t):null!==(n=qn(e,t,!1))&&pr(e,n,t)),ms=!1}function pr(e,t,n){var i=e.firstBatch;if(null!==i&&i._expirationTime<=n&&(null===Os?Os=[i]:Os.push(i),i._defer))return e.finishedWork=t,void(e.remainingExpirationTime=0);if(e.finishedWork=null,ls=ts=!0,n=t.stateNode,n.current===t&&r("177"),i=n.pendingCommitExpirationTime,0===i&&r("261"),n.pendingCommitExpirationTime=0,er(),Gi.current=null,1<t.effectTag)if(null!==t.lastEffect){t.lastEffect.nextEffect=t;var o=t.firstEffect}else o=t;else o=t.firstEffect;wa=Ro;var a=Gr();if(qe(a)){if("selectionStart"in a)var s={start:a.selectionStart,end:a.selectionEnd};else e:{var l=window.getSelection&&window.getSelection();if(l&&0!==l.rangeCount){s=l.anchorNode;var c=l.anchorOffset,u=l.focusNode;l=l.focusOffset;try{s.nodeType,u.nodeType}catch(e){s=null;break e}var d=0,p=-1,f=-1,h=0,m=0,g=a,y=null;t:for(;;){for(var b;g!==s||0!==c&&3!==g.nodeType||(p=d+c),g!==u||0!==l&&3!==g.nodeType||(f=d+l),3===g.nodeType&&(d+=g.nodeValue.length),null!==(b=g.firstChild);)y=g,g=b;for(;;){if(g===a)break t;if(y===s&&++h===c&&(p=d),y===u&&++m===l&&(f=d),null!==(b=g.nextSibling))break;g=y,y=g.parentNode}g=b}s=-1===p||-1===f?null:{start:p,end:f}}else s=null}s=s||{start:0,end:0}}else s=null;for(xa={focusedElem:a,selectionRange:s},He(!1),ss=o;null!==ss;){a=!1,s=void 0;try{for(;null!==ss;){if(256&ss.effectTag){var v=ss.alternate;switch(c=ss,c.tag){case 2:if(256&c.effectTag&&null!==v){var w=v.memoizedProps,x=v.memoizedState,T=c.stateNode;T.props=c.memoizedProps,T.state=c.memoizedState;var S=T.getSnapshotBeforeUpdate(w,x);T.__reactInternalSnapshotBeforeUpdate=S}break;case 3:case 5:case 6:case 4:break;default:r("163")}}ss=ss.nextEffect}}catch(e){a=!0,s=e}a&&(null===ss&&r("178"),$n(ss,s),null!==ss&&(ss=ss.nextEffect))}for(ss=o;null!==ss;){v=!1,w=void 0;try{for(;null!==ss;){var C=ss.effectTag;if(16&C&&st(ss.stateNode,""),128&C){var k=ss.alternate;if(null!==k){var O=k.ref;null!==O&&("function"===typeof O?O(null):O.current=null)}}switch(14&C){case 2:Gn(ss),ss.effectTag&=-3;break;case 6:Gn(ss),ss.effectTag&=-3,Hn(ss.alternate,ss);break;case 4:Hn(ss.alternate,ss);break;case 8:x=ss,Fn(x),x.return=null,x.child=null,x.alternate&&(x.alternate.child=null,x.alternate.return=null)}ss=ss.nextEffect}}catch(e){v=!0,w=e}v&&(null===ss&&r("178"),$n(ss,w),null!==ss&&(ss=ss.nextEffect))}if(O=xa,k=Gr(),C=O.focusedElem,v=O.selectionRange,k!==C&&Hr(document.documentElement,C)){null!==v&&qe(C)&&(k=v.start,O=v.end,void 0===O&&(O=k),"selectionStart"in C?(C.selectionStart=k,C.selectionEnd=Math.min(O,C.value.length)):window.getSelection&&(k=window.getSelection(),w=C[A()].length,O=Math.min(v.start,w),v=void 0===v.end?O:Math.min(v.end,w),!k.extend&&O>v&&(w=v,v=O,O=w),w=Ke(C,O),x=Ke(C,v),w&&x&&(1!==k.rangeCount||k.anchorNode!==w.node||k.anchorOffset!==w.offset||k.focusNode!==x.node||k.focusOffset!==x.offset)&&(T=document.createRange(),T.setStart(w.node,w.offset),k.removeAllRanges(),O>v?(k.addRange(T),k.extend(x.node,x.offset)):(T.setEnd(x.node,x.offset),k.addRange(T))))),k=[];for(O=C;O=O.parentNode;)1===O.nodeType&&k.push({element:O,left:O.scrollLeft,top:O.scrollTop});for("function"===typeof C.focus&&C.focus(),C=0;C<k.length;C++)O=k[C],O.element.scrollLeft=O.left,O.element.scrollTop=O.top}for(xa=null,He(wa),wa=null,n.current=t,ss=o;null!==ss;){o=!1,C=void 0;try{for(k=i;null!==ss;){var E=ss.effectTag;if(36&E){var P=ss.alternate;switch(O=ss,v=k,O.tag){case 2:var j=O.stateNode;if(4&O.effectTag)if(null===P)j.props=O.memoizedProps,j.state=O.memoizedState,j.componentDidMount();else{var I=P.memoizedProps,_=P.memoizedState;j.props=O.memoizedProps,j.state=O.memoizedState,j.componentDidUpdate(I,_,j.__reactInternalSnapshotBeforeUpdate)}var R=O.updateQueue;null!==R&&(j.props=O.memoizedProps,j.state=O.memoizedState,nn(O,R,j,v));break;case 3:var N=O.updateQueue;if(null!==N){if(w=null,null!==O.child)switch(O.child.tag){case 5:w=O.child.stateNode;break;case 2:w=O.child.stateNode}nn(O,N,w,v)}break;case 5:var B=O.stateNode;null===P&&4&O.effectTag&&vt(O.type,O.memoizedProps)&&B.focus();break;case 6:case 4:case 15:case 16:break;default:r("163")}}if(128&E){O=void 0;var M=ss.ref;if(null!==M){var L=ss.stateNode;switch(ss.tag){case 5:O=L;break;default:O=L}"function"===typeof M?M(O):M.current=O}}var D=ss.nextEffect;ss.nextEffect=null,ss=D}}catch(e){o=!0,C=e}o&&(null===ss&&r("178"),$n(ss,C),null!==ss&&(ss=ss.nextEffect))}ts=ls=!1,"function"===typeof Xt&&Xt(t.stateNode),t=n.current.expirationTime,0===t&&(us=null),e.remainingExpirationTime=t}function fr(){return!(null===Ts||Ts.timeRemaining()>js)&&(vs=!0)}function hr(e){null===gs&&r("246"),gs.remainingExpirationTime=0,ws||(ws=!0,xs=e)}function mr(e){null===gs&&r("246"),gs.remainingExpirationTime=e}function gr(e,t){var n=Ss;Ss=!0;try{return e(t)}finally{(Ss=n)||ms||sr()}}function yr(e,t){if(Ss&&!Cs){Cs=!0;try{return e(t)}finally{Cs=!1}}return e(t)}function br(e,t){ms&&r("187");var n=Ss;Ss=!0;try{return nr(e,t)}finally{Ss=n,sr()}}function vr(e,t,n){if(ks)return e(t,n);Ss||ms||0===bs||(lr(bs,!1,null),bs=0);var r=ks,i=Ss;Ss=ks=!0;try{return e(t,n)}finally{ks=r,(Ss=i)||ms||sr()}}function wr(e){var t=Ss;Ss=!0;try{nr(e)}finally{(Ss=t)||ms||lr(1,!1,null)}}function xr(e,t,n,i,o){var a=t.current;if(n){n=n._reactInternalFiber;var s;e:{for(2===Ae(n)&&2===n.tag||r("170"),s=n;3!==s.tag;){if(Pt(s)){s=s.stateNode.__reactInternalMemoizedMergedChildContext;break e}(s=s.return)||r("171")}s=s.stateNode.context}n=Pt(n)?Rt(n,s):s}else n=Vr;return null===t.context?t.context=n:t.pendingContext=n,t=o,o=Kt(i),o.payload={element:e},t=void 0===t?null:t,null!==t&&(o.callback=t),$t(a,o,i),Zn(a,i),i}function Tr(e){var t=e._reactInternalFiber;return void 0===t&&("function"===typeof e.render?r("188"):r("268",Object.keys(e))),e=Me(t),null===e?null:e.stateNode}function Sr(e,t,n,r){var i=t.current;return i=Qn(er(),i),xr(e,t,n,i,r)}function Cr(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function kr(e){var t=e.findFiberByHostInstance;return Ut(Lr({},e,{findHostInstanceByFiber:function(e){return e=Me(e),null===e?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}function Or(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Vi,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Er(e){this._expirationTime=Jn(),this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Pr(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function jr(e,t,n){this._internalRoot=Ht(e,t,n)}function Ir(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function _r(e,t){if(t||(t=e?9===e.nodeType?e.documentElement:e.firstChild:null,t=!(!t||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new jr(e,!1,t)}function Rr(e,t,n,i,o){Ir(n)||r("200");var a=n._reactRootContainer;if(a){if("function"===typeof o){var s=o;o=function(){var e=Cr(a._internalRoot);s.call(e)}}null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)}else{if(a=n._reactRootContainer=_r(n,i),"function"===typeof o){var l=o;o=function(){var e=Cr(a._internalRoot);l.call(e)}}yr(function(){null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)})}return Cr(a._internalRoot)}function Ar(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Ir(t)||r("200"),Or(e,t,null,n)}var Nr=n(85),Br=n(0),Mr=n(155),Lr=n(59),Dr=n(87),Gr=n(156),Fr=n(157),Hr=n(158),Vr=n(86);Br||r("227");var Ur={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(e,t,n,r,o,a,s,l,c){i.apply(Ur,arguments)},invokeGuardedCallbackAndCatchFirstError:function(e,t,n,r,i,o,a,s,l){if(Ur.invokeGuardedCallback.apply(this,arguments),Ur.hasCaughtError()){var c=Ur.clearCaughtError();Ur._hasRethrowError||(Ur._hasRethrowError=!0,Ur._rethrowError=c)}},rethrowCaughtError:function(){return o.apply(Ur,arguments)},hasCaughtError:function(){return Ur._hasCaughtError},clearCaughtError:function(){if(Ur._hasCaughtError){var e=Ur._caughtError;return Ur._caughtError=null,Ur._hasCaughtError=!1,e}r("198")}},Xr=null,Wr={},Yr=[],zr={},Kr={},qr={},$r={plugins:Yr,eventNameDispatchConfigs:zr,registrationNameModules:Kr,registrationNameDependencies:qr,possibleRegistrationNames:null,injectEventPluginOrder:l,injectEventPluginsByName:c},Jr=null,Qr=null,Zr=null,ei=null,ti={injectEventPluginOrder:l,injectEventPluginsByName:c},ni={injection:ti,getListener:g,runEventsInBatch:y,runExtractedEventsInBatch:b},ri=Math.random().toString(36).slice(2),ii="__reactInternalInstance$"+ri,oi="__reactEventHandlers$"+ri,ai={precacheFiberNode:function(e,t){t[ii]=e},getClosestInstanceFromNode:v,getInstanceFromNode:function(e){return e=e[ii],!e||5!==e.tag&&6!==e.tag?null:e},getNodeFromInstance:w,getFiberCurrentPropsFromNode:x,updateFiberProps:function(e,t){e[oi]=t}},si={accumulateTwoPhaseDispatches:j,accumulateTwoPhaseDispatchesSkipTarget:function(e){p(e,O)},accumulateEnterLeaveDispatches:I,accumulateDirectDispatches:function(e){p(e,P)}},li={animationend:_("Animation","AnimationEnd"),animationiteration:_("Animation","AnimationIteration"),animationstart:_("Animation","AnimationStart"),transitionend:_("Transition","TransitionEnd")},ci={},ui={};Mr.canUseDOM&&(ui=document.createElement("div").style,"AnimationEvent"in window||(delete li.animationend.animation,delete li.animationiteration.animation,delete li.animationstart.animation),"TransitionEvent"in window||delete li.transitionend.transition);var di=R("animationend"),pi=R("animationiteration"),fi=R("animationstart"),hi=R("transitionend"),mi="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),gi=null,yi={_root:null,_startText:null,_fallbackText:null},bi="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),vi={type:null,target:null,currentTarget:Dr.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};Lr(M.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Dr.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Dr.thatReturnsTrue)},persist:function(){this.isPersistent=Dr.thatReturnsTrue},isPersistent:Dr.thatReturnsFalse,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;for(t=0;t<bi.length;t++)this[bi[t]]=null}}),M.Interface=vi,M.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return Lr(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=Lr({},r.Interface,e),n.extend=r.extend,G(n),n},G(M);var wi=M.extend({data:null}),xi=M.extend({data:null}),Ti=[9,13,27,32],Si=Mr.canUseDOM&&"CompositionEvent"in window,Ci=null;Mr.canUseDOM&&"documentMode"in document&&(Ci=document.documentMode);var ki=Mr.canUseDOM&&"TextEvent"in window&&!Ci,Oi=Mr.canUseDOM&&(!Si||Ci&&8<Ci&&11>=Ci),Ei=String.fromCharCode(32),Pi={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},ji=!1,Ii=!1,_i={eventTypes:Pi,extractEvents:function(e,t,n,r){var i=void 0,o=void 0;if(Si)e:{switch(e){case"compositionstart":i=Pi.compositionStart;break e;case"compositionend":i=Pi.compositionEnd;break e;case"compositionupdate":i=Pi.compositionUpdate;break e}i=void 0}else Ii?F(e,n)&&(i=Pi.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=Pi.compositionStart);return i?(Oi&&(Ii||i!==Pi.compositionStart?i===Pi.compositionEnd&&Ii&&(o=N()):(yi._root=r,yi._startText=B(),Ii=!0)),i=wi.getPooled(i,t,n,r),o?i.data=o:null!==(o=H(n))&&(i.data=o),j(i),o=i):o=null,(e=ki?V(e,n):U(e,n))?(t=xi.getPooled(Pi.beforeInput,t,n,r),t.data=e,j(t)):t=null,null===o?t:null===t?o:[o,t]}},Ri=null,Ai={injectFiberControlledHostComponent:function(e){Ri=e}},Ni=null,Bi=null,Mi={injection:Ai,enqueueStateRestore:W,needsStateRestore:Y,restoreStateIfNeeded:z},Li=!1,Di={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0},Gi=Br.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,Fi="function"===typeof Symbol&&Symbol.for,Hi=Fi?Symbol.for("react.element"):60103,Vi=Fi?Symbol.for("react.portal"):60106,Ui=Fi?Symbol.for("react.fragment"):60107,Xi=Fi?Symbol.for("react.strict_mode"):60108,Wi=Fi?Symbol.for("react.profiler"):60114,Yi=Fi?Symbol.for("react.provider"):60109,zi=Fi?Symbol.for("react.context"):60110,Ki=Fi?Symbol.for("react.async_mode"):60111,qi=Fi?Symbol.for("react.forward_ref"):60112,$i=Fi?Symbol.for("react.timeout"):60113,Ji="function"===typeof Symbol&&Symbol.iterator,Qi=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Zi=Object.prototype.hasOwnProperty,eo={},to={},no={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){no[e]=new de(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];no[t]=new de(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){no[e]=new de(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","preserveAlpha"].forEach(function(e){no[e]=new de(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){no[e]=new de(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){no[e]=new de(e,3,!0,e.toLowerCase(),null)}),["capture","download"].forEach(function(e){no[e]=new de(e,4,!1,e.toLowerCase(),null)}),["cols","rows","size","span"].forEach(function(e){no[e]=new de(e,6,!1,e.toLowerCase(),null)}),["rowSpan","start"].forEach(function(e){no[e]=new de(e,5,!1,e.toLowerCase(),null)});var ro=/[\-:]([a-z])/g;"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(ro,pe);no[t]=new de(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(ro,pe);no[t]=new de(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(ro,pe);no[t]=new de(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),no.tabIndex=new de("tabIndex",1,!1,"tabindex",null);var io={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}},oo=null,ao=null,so=!1;Mr.canUseDOM&&(so=ee("input")&&(!document.documentMode||9<document.documentMode));var lo={eventTypes:io,_isInputEventSupported:so,extractEvents:function(e,t,n,r){var i=t?w(t):window,o=void 0,a=void 0,s=i.nodeName&&i.nodeName.toLowerCase();if("select"===s||"input"===s&&"file"===i.type?o=Ce:Q(i)?so?o=Ie:(o=Pe,a=Ee):(s=i.nodeName)&&"input"===s.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(o=je),o&&(o=o(e,t)))return xe(o,n,r);a&&a(e,i,t),"blur"===e&&(e=i._wrapperState)&&e.controlled&&"number"===i.type&&ve(i,"number",i.value)}},co=M.extend({view:null,detail:null}),uo={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"},po=co.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Re,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)}}),fo=po.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),ho={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},mo={eventTypes:ho,extractEvents:function(e,t,n,r){var i="mouseover"===e||"pointerover"===e,o="mouseout"===e||"pointerout"===e;if(i&&(n.relatedTarget||n.fromElement)||!o&&!i)return null;if(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,o?(o=t,t=(t=n.relatedTarget||n.toElement)?v(t):null):o=null,o===t)return null;var a=void 0,s=void 0,l=void 0,c=void 0;return"mouseout"===e||"mouseover"===e?(a=po,s=ho.mouseLeave,l=ho.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(a=fo,s=ho.pointerLeave,l=ho.pointerEnter,c="pointer"),e=null==o?i:w(o),i=null==t?i:w(t),s=a.getPooled(s,o,n,r),s.type=c+"leave",s.target=e,s.relatedTarget=i,n=a.getPooled(l,t,n,r),n.type=c+"enter",n.target=i,n.relatedTarget=e,I(s,n,o,t),[s,n]}},go=M.extend({animationName:null,elapsedTime:null,pseudoElement:null}),yo=M.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),bo=co.extend({relatedTarget:null}),vo={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},wo={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},xo=co.extend({key:function(e){if(e.key){var t=vo[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?(e=De(e),13===e?"Enter":String.fromCharCode(e)):"keydown"===e.type||"keyup"===e.type?wo[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Re,charCode:function(e){return"keypress"===e.type?De(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?De(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),To=po.extend({dataTransfer:null}),So=co.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Re}),Co=M.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),ko=po.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),Oo=[["abort","abort"],[di,"animationEnd"],[pi,"animationIteration"],[fi,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[hi,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],Eo={},Po={};[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){Ge(e,!0)}),Oo.forEach(function(e){Ge(e,!1)});var jo={eventTypes:Eo,isInteractiveTopLevelEventType:function(e){return void 0!==(e=Po[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var i=Po[e];if(!i)return null;switch(e){case"keypress":if(0===De(n))return null;case"keydown":case"keyup":e=xo;break;case"blur":case"focus":e=bo;break;case"click":if(2===n.button)return null;case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=po;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=To;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=So;break;case di:case pi:case fi:e=go;break;case hi:e=Co;break;case"scroll":e=co;break;case"wheel":e=ko;break;case"copy":case"cut":case"paste":e=yo;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=fo;break;default:e=M}return t=e.getPooled(i,t,n,r),j(t),t}},Io=jo.isInteractiveTopLevelEventType,_o=[],Ro=!0,Ao={get _enabled(){return Ro},setEnabled:He,isEnabled:function(){return Ro},trapBubbledEvent:Ve,trapCapturedEvent:Ue,dispatchEvent:We},No={},Bo=0,Mo="_reactListenersID"+(""+Math.random()).slice(2),Lo=Mr.canUseDOM&&"documentMode"in document&&11>=document.documentMode,Do={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Go=null,Fo=null,Ho=null,Vo=!1,Uo={eventTypes:Do,extractEvents:function(e,t,n,r){var i,o=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(i=!o)){e:{o=Ye(o),i=qr.onSelect;for(var a=0;a<i.length;a++){var s=i[a];if(!o.hasOwnProperty(s)||!o[s]){o=!1;break e}}o=!0}i=!o}if(i)return null;switch(o=t?w(t):window,e){case"focus":(Q(o)||"true"===o.contentEditable)&&(Go=o,Fo=t,Ho=null);break;case"blur":Ho=Fo=Go=null;break;case"mousedown":Vo=!0;break;case"contextmenu":case"mouseup":return Vo=!1,$e(n,r);case"selectionchange":if(Lo)break;case"keydown":case"keyup":return $e(n,r)}return null}};ti.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),Jr=ai.getFiberCurrentPropsFromNode,Qr=ai.getInstanceFromNode,Zr=ai.getNodeFromInstance,ti.injectEventPluginsByName({SimpleEventPlugin:jo,EnterLeaveEventPlugin:mo,ChangeEventPlugin:lo,SelectEventPlugin:Uo,BeforeInputEventPlugin:_i});var Xo="function"===typeof requestAnimationFrame?requestAnimationFrame:void 0,Wo=Date,Yo=setTimeout,zo=clearTimeout,Ko=void 0;if("object"===typeof performance&&"function"===typeof performance.now){var qo=performance;Ko=function(){return qo.now()}}else Ko=function(){return Wo.now()};var $o=void 0,Jo=void 0;if(Mr.canUseDOM){var Qo="function"===typeof Xo?Xo:function(){r("276")},Zo=null,ea=null,ta=-1,na=!1,ra=!1,ia=0,oa=33,aa=33,sa={didTimeout:!1,timeRemaining:function(){var e=ia-Ko();return 0<e?e:0}},la=function(e,t){var n=e.scheduledCallback,r=!1;try{n(t),r=!0}finally{Jo(e),r||(na=!0,window.postMessage(ca,"*"))}},ca="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(e){if(e.source===window&&e.data===ca&&(na=!1,null!==Zo)){if(null!==Zo){var t=Ko();if(!(-1===ta||ta>t)){e=-1;for(var n=[],r=Zo;null!==r;){var i=r.timeoutTime;-1!==i&&i<=t?n.push(r):-1!==i&&(-1===e||i<e)&&(e=i),r=r.next}if(0<n.length)for(sa.didTimeout=!0,t=0,r=n.length;t<r;t++)la(n[t],sa);ta=e}}for(e=Ko();0<ia-e&&null!==Zo;)e=Zo,sa.didTimeout=!1,la(e,sa),e=Ko();null===Zo||ra||(ra=!0,Qo(ua))}},!1);var ua=function(e){ra=!1;var t=e-ia+aa;t<aa&&oa<aa?(8>t&&(t=8),aa=t<oa?oa:t):oa=t,ia=e+aa,na||(na=!0,window.postMessage(ca,"*"))};$o=function(e,t){var n=-1;return null!=t&&"number"===typeof t.timeout&&(n=Ko()+t.timeout),(-1===ta||-1!==n&&n<ta)&&(ta=n),e={scheduledCallback:e,timeoutTime:n,prev:null,next:null},null===Zo?Zo=e:null!==(t=e.prev=ea)&&(t.next=e),ea=e,ra||(ra=!0,Qo(ua)),e},Jo=function(e){if(null!==e.prev||Zo===e){var t=e.next,n=e.prev;e.next=null,e.prev=null,null!==t?null!==n?(n.next=t,t.prev=n):(t.prev=null,Zo=t):null!==n?(n.next=null,ea=n):ea=Zo=null}}}else{var da=new Map;$o=function(e){var t={scheduledCallback:e,timeoutTime:0,next:null,prev:null},n=Yo(function(){e({timeRemaining:function(){return 1/0},didTimeout:!1})});return da.set(e,n),t},Jo=function(e){var t=da.get(e.scheduledCallback);da.delete(e),zo(t)}}var pa={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"},fa=void 0,ha=function(e){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,i){MSApp.execUnsafeLocalFunction(function(){return e(t,n)})}:e}(function(e,t){if(e.namespaceURI!==pa.svg||"innerHTML"in e)e.innerHTML=t;else{for(fa=fa||document.createElement("div"),fa.innerHTML="<svg>"+t+"</svg>",t=fa.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}),ma={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ga=["Webkit","ms","Moz","O"];Object.keys(ma).forEach(function(e){ga.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ma[t]=ma[e]})});var ya=Lr({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0}),ba=Dr.thatReturns(""),va={createElement:pt,createTextNode:ft,setInitialProperties:ht,diffProperties:mt,updateProperties:gt,diffHydratedProperties:yt,diffHydratedText:bt,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(e,t,n){switch(t){case"input":if(ye(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var i=n[t];if(i!==e&&i.form===e.form){var o=x(i);o||r("90"),ie(i),ye(i,o)}}}break;case"textarea":rt(e,n);break;case"select":null!=(t=n.value)&&Ze(e,!!n.multiple,t,!1)}}},wa=null,xa=null,Ta=Ko,Sa=$o,Ca=Jo;new Set;var ka=[],Oa=-1,Ea=St(Vr),Pa=St(!1),ja=Vr,Ia=null,_a=null,Ra=!1,Aa=St(null),Na=St(null),Ba=St(0),Ma={},La=St(Ma),Da=St(Ma),Ga=St(Ma),Fa={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===Ae(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=er();r=Qn(r,e);var i=Kt(r);i.payload=t,void 0!==n&&null!==n&&(i.callback=n),$t(e,i,r),Zn(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=er();r=Qn(r,e);var i=Kt(r);i.tag=1,i.payload=t,void 0!==n&&null!==n&&(i.callback=n),$t(e,i,r),Zn(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=er();n=Qn(n,e);var r=Kt(n);r.tag=2,void 0!==t&&null!==t&&(r.callback=t),$t(e,r,n),Zn(e,n)}},Ha=Array.isArray,Va=yn(!0),Ua=yn(!1),Xa=null,Wa=null,Ya=!1,za=void 0,Ka=void 0,qa=void 0;za=function(){},Ka=function(e,t,n){(t.updateQueue=n)&&An(t)},qa=function(e,t,n,r){n!==r&&An(t)};var $a=Ta(),Ja=2,Qa=$a,Za=0,es=0,ts=!1,ns=null,rs=null,is=0,os=-1,as=!1,ss=null,ls=!1,cs=!1,us=null,ds=null,ps=null,fs=0,hs=void 0,ms=!1,gs=null,ys=0,bs=0,vs=!1,ws=!1,xs=null,Ts=null,Ss=!1,Cs=!1,ks=!1,Os=null,Es=1e3,Ps=0,js=1,Is={updateContainerAtExpirationTime:xr,createContainer:function(e,t,n){return Ht(e,t,n)},updateContainer:Sr,flushRoot:cr,requestWork:ir,computeUniqueAsyncExpiration:Jn,batchedUpdates:gr,unbatchedUpdates:yr,deferredUpdates:tr,syncUpdates:nr,interactiveUpdates:vr,flushInteractiveUpdates:function(){ms||0===bs||(lr(bs,!1,null),bs=0)},flushControlled:wr,flushSync:br,getPublicRootInstance:Cr,findHostInstance:Tr,findHostInstanceWithNoPortals:function(e){return e=Le(e),null===e?null:e.stateNode},injectIntoDevTools:kr};Ai.injectFiberControlledHostComponent(va),Er.prototype.render=function(e){this._defer||r("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,i=new Pr;return xr(e,t,null,n,i._onCommit),i},Er.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Er.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||r("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var i=null,o=t;o!==this;)i=o,o=o._next;null===i&&r("251"),i._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,cr(e,n),t=this._next,this._next=null,t=e.firstBatch=t,null!==t&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},Er.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},Pr.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Pr.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!==typeof n&&r("191",n),n()}}},jr.prototype.render=function(e,t){var n=this._internalRoot,r=new Pr;return t=void 0===t?null:t,null!==t&&r.then(t),Sr(e,n,null,r._onCommit),r},jr.prototype.unmount=function(e){var t=this._internalRoot,n=new Pr;return e=void 0===e?null:e,null!==e&&n.then(e),Sr(null,t,null,n._onCommit),n},jr.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,i=new Pr;return n=void 0===n?null:n,null!==n&&i.then(n),Sr(t,r,e,i._onCommit),i},jr.prototype.createBatch=function(){var e=new Er(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime<=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},K=Is.batchedUpdates,q=Is.interactiveUpdates,$=Is.flushInteractiveUpdates;var _s={createPortal:Ar,findDOMNode:function(e){return null==e?null:1===e.nodeType?e:Tr(e)},hydrate:function(e,t,n){return Rr(null,e,t,!0,n)},render:function(e,t,n){return Rr(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,i){return(null==e||void 0===e._reactInternalFiber)&&r("38"),Rr(e,t,n,!1,i)},unmountComponentAtNode:function(e){return Ir(e)||r("40"),!!e._reactRootContainer&&(yr(function(){Rr(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Ar.apply(void 0,arguments)},unstable_batchedUpdates:gr,unstable_deferredUpdates:tr,unstable_interactiveUpdates:vr,flushSync:br,unstable_flushControlled:wr,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:ni,EventPluginRegistry:$r,EventPropagators:si,ReactControlledComponent:Mi,ReactDOMComponentTree:ai,ReactDOMEventListener:Ao},unstable_createRoot:function(e,t){return new jr(e,!0,null!=t&&!0===t.hydrate)}};kr({findFiberByHostInstance:v,bundleType:0,version:"16.4.2",rendererPackageName:"react-dom"});var Rs={default:_s},As=Rs&&_s||Rs;e.exports=As.default?As.default:As},function(e,t,n){"use strict";var r=!("undefined"===typeof window||!window.document||!window.document.createElement),i={canUseDOM:r,canUseWorkers:"undefined"!==typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};e.exports=i},function(e,t,n){"use strict";function r(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}e.exports=r},function(e,t,n){"use strict";function r(e,t){return e===t?0!==e||0!==t||1/e===1/t:e!==e&&t!==t}function i(e,t){if(r(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),i=Object.keys(t);if(n.length!==i.length)return!1;for(var a=0;a<n.length;a++)if(!o.call(t,n[a])||!r(e[n[a]],t[n[a]]))return!1;return!0}var o=Object.prototype.hasOwnProperty;e.exports=i},function(e,t,n){"use strict";function r(e,t){return!(!e||!t)&&(e===t||!i(e)&&(i(t)?r(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}var i=n(159);e.exports=r},function(e,t,n){"use strict";function r(e){return i(e)&&3==e.nodeType}var i=n(160);e.exports=r},function(e,t,n){"use strict";function r(e){var t=e?e.ownerDocument||e:document,n=t.defaultView||window;return!(!e||!("function"===typeof n.Node?e instanceof n.Node:"object"===typeof e&&"number"===typeof e.nodeType&&"string"===typeof e.nodeName))}e.exports=r},function(e,t,n){"use strict";var r=n(162);n(89),n(166);n.d(t,"a",function(){return r.a})},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=(n.n(a),n(1)),l=n.n(s),c=n(88);n(60);t.a=function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"store",n=arguments[1],s=n||t+"Subscription",u=function(e){function n(o,a){r(this,n);var s=i(this,e.call(this,o,a));return s[t]=o.store,s}return o(n,e),n.prototype.getChildContext=function(){var e;return e={},e[t]=this[t],e[s]=null,e},n.prototype.render=function(){return a.Children.only(this.props.children)},n}(a.Component);return u.propTypes={store:c.a.isRequired,children:l.a.element.isRequired},u.childContextTypes=(e={},e[t]=c.a.isRequired,e[s]=c.b,e),u}()},function(e,t,n){"use strict";function r(){}var i=n(164);e.exports=function(){function e(e,t,n,r,o,a){if(a!==i){var s=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw s.name="Invariant Violation",s}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=r,n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(){var e=[],t=[];return{clear:function(){t=o,e=o},notify:function(){for(var n=e=t,r=0;r<n.length;r++)n[r]()},get:function(){return t},subscribe:function(n){var r=!0;return t===e&&(t=e.slice()),t.push(n),function(){r&&e!==o&&(r=!1,t===e&&(t=e.slice()),t.splice(t.indexOf(n),1))}}}}n.d(t,"a",function(){return s});var o=null,a={notify:function(){}},s=function(){function e(t,n,i){r(this,e),this.store=t,this.parentSub=n,this.onStateChange=i,this.unsubscribe=null,this.listeners=a}return e.prototype.addNestedSub=function(e){return this.trySubscribe(),this.listeners.subscribe(e)},e.prototype.notifyNestedSubs=function(){this.listeners.notify()},e.prototype.isSubscribed=function(){return Boolean(this.unsubscribe)},e.prototype.trySubscribe=function(){this.unsubscribe||(this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.onStateChange):this.store.subscribe(this.onStateChange),this.listeners=i())},e.prototype.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null,this.listeners.clear(),this.listeners=a)},e}()},function(e,t,n){"use strict";function r(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}function i(e,t,n){for(var r=t.length-1;r>=0;r--){var i=t[r](e);if(i)return i}return function(t,r){throw new Error("Invalid value of type "+typeof e+" for "+n+" argument when connecting component "+r.wrappedComponentName+".")}}function o(e,t){return e===t}var a=n(89),s=n(167),l=n(168),c=n(181),u=n(182),d=n(183),p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};!function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.connectHOC,n=(void 0===t&&a.a,e.mapStateToPropsFactories),r=(void 0===n&&c.a,e.mapDispatchToPropsFactories),i=(void 0===r&&l.a,e.mergePropsFactories),o=(void 0===i&&u.a,e.selectorFactory);void 0===o&&d.a}()},function(e,t,n){"use strict";function r(e,t){return e===t?0!==e||0!==t||1/e===1/t:e!==e&&t!==t}function i(e,t){if(r(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),i=Object.keys(t);if(n.length!==i.length)return!1;for(var a=0;a<n.length;a++)if(!o.call(t,n[a])||!r(e[n[a]],t[n[a]]))return!1;return!0}t.a=i;var o=Object.prototype.hasOwnProperty},function(e,t,n){"use strict";function r(e){return"function"===typeof e?Object(s.b)(e,"mapDispatchToProps"):void 0}function i(e){return e?void 0:Object(s.a)(function(e){return{dispatch:e}})}function o(e){return e&&"object"===typeof e?Object(s.a)(function(t){return Object(a.bindActionCreators)(e,t)}):void 0}var a=n(61),s=n(91);t.a=[r,i,o]},function(e,t,n){"use strict";(function(e,r){var i,o=n(171);i="undefined"!==typeof self?self:"undefined"!==typeof window?window:"undefined"!==typeof e?e:r;var a=Object(o.a)(i);t.a=a}).call(t,n(37),n(170)(e))},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t,n){"use strict";function r(e){var t,n=e.Symbol;return"function"===typeof n?n.observable?t=n.observable:(t=n("observable"),n.observable=t):t="@@observable",t}t.a=r},function(e,t,n){"use strict";function r(e){if(!Object(a.a)(e)||Object(i.a)(e)!=s)return!1;var t=Object(o.a)(e);if(null===t)return!0;var n=d.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&u.call(n)==p}var i=n(173),o=n(178),a=n(180),s="[object Object]",l=Function.prototype,c=Object.prototype,u=l.toString,d=c.hasOwnProperty,p=u.call(Object);t.a=r},function(e,t,n){"use strict";function r(e){return null==e?void 0===e?l:s:c&&c in Object(e)?Object(o.a)(e):Object(a.a)(e)}var i=n(93),o=n(176),a=n(177),s="[object Null]",l="[object Undefined]",c=i.a?i.a.toStringTag:void 0;t.a=r},function(e,t,n){"use strict";var r=n(175),i="object"==typeof self&&self&&self.Object===Object&&self,o=r.a||i||Function("return this")();t.a=o},function(e,t,n){"use strict";(function(e){var n="object"==typeof e&&e&&e.Object===Object&&e;t.a=n}).call(t,n(37))},function(e,t,n){"use strict";function r(e){var t=a.call(e,l),n=e[l];try{e[l]=void 0;var r=!0}catch(e){}var i=s.call(e);return r&&(t?e[l]=n:delete e[l]),i}var i=n(93),o=Object.prototype,a=o.hasOwnProperty,s=o.toString,l=i.a?i.a.toStringTag:void 0;t.a=r},function(e,t,n){"use strict";function r(e){return o.call(e)}var i=Object.prototype,o=i.toString;t.a=r},function(e,t,n){"use strict";var r=n(179),i=Object(r.a)(Object.getPrototypeOf,Object);t.a=i},function(e,t,n){"use strict";function r(e,t){return function(n){return e(t(n))}}t.a=r},function(e,t,n){"use strict";function r(e){return null!=e&&"object"==typeof e}t.a=r},function(e,t,n){"use strict";function r(e){return"function"===typeof e?Object(o.b)(e,"mapStateToProps"):void 0}function i(e){return e?void 0:Object(o.a)(function(){return{}})}var o=n(91);t.a=[r,i]},function(e,t,n){"use strict";function r(e,t,n){return s({},n,e,t)}function i(e){return function(t,n){var r=(n.displayName,n.pure),i=n.areMergedPropsEqual,o=!1,a=void 0;return function(t,n,s){var l=e(t,n,s);return o?r&&i(l,a)||(a=l):(o=!0,a=l),a}}}function o(e){return"function"===typeof e?i(e):void 0}function a(e){return e?void 0:function(){return r}}var s=(n(92),Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e});t.a=[o,a]},function(e,t,n){"use strict";function r(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}function i(e,t,n,r){return function(i,o){return n(e(i,o),t(r,o),o)}}function o(e,t,n,r,i){function o(i,o){return h=i,m=o,g=e(h,m),y=t(r,m),b=n(g,y,m),f=!0,b}function a(){return g=e(h,m),t.dependsOnOwnProps&&(y=t(r,m)),b=n(g,y,m)}function s(){return e.dependsOnOwnProps&&(g=e(h,m)),t.dependsOnOwnProps&&(y=t(r,m)),b=n(g,y,m)}function l(){var t=e(h,m),r=!p(t,g);return g=t,r&&(b=n(g,y,m)),b}function c(e,t){var n=!d(t,m),r=!u(e,h);return h=e,m=t,n&&r?a():n?s():r?l():b}var u=i.areStatesEqual,d=i.areOwnPropsEqual,p=i.areStatePropsEqual,f=!1,h=void 0,m=void 0,g=void 0,y=void 0,b=void 0;return function(e,t){return f?c(e,t):o(e,t)}}function a(e,t){var n=t.initMapStateToProps,a=t.initMapDispatchToProps,s=t.initMergeProps,l=r(t,["initMapStateToProps","initMapDispatchToProps","initMergeProps"]),c=n(e,l),u=a(e,l),d=s(e,l);return(l.pure?o:i)(c,u,d,e,l)}t.a=a;n(184)},function(e,t,n){"use strict";n(60)},function(e,t){},function(e,t){},function(e,t,n){"use strict";var r=n(61),i=n(188),o=Object(r.createStore)(i.a);t.a=o},function(e,t,n){"use strict";var r=n(0),i=(n.n(r),n(23)),o=n(94),a=n(95),s=n(189),l=n(250),c=n(261),u=n(273),d=n(492),p={mainNavItems:o.d,mainActiveNavItem:0,currentSidebarConfig:o.a,sidebarNavItems:o.g[i.f],sidebarActiveNavItem:o.h,currentPage:i.f,sourceCodeOptions:s.b[i.f],activeSourceCodeComponent:s.a[i.f][0],activeSourceCodeNumber:0,currentLink:l.b[i.f],currentDownload:l.a[i.f],currentDownloadName:l.c[i.f],currentFileName:l.d[i.f],currentSummaryComponent:c.a[i.f],currentScreenshotComponent:u.a[i.f],currentVideoComponent:d.a[i.f]},f=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:p,t=arguments[1];switch(t.type){case a.a:return Object.assign({},e,{mainActiveNavItem:i.i[t.payload.newPage],currentSidebarConfig:o.f[t.payload.newPage],sidebarNavItems:o.g[t.payload.newPage],sidebarActiveNavItem:o.h,sourceCodeOptions:s.b[t.payload.newPage],activeSourceCodeComponent:s.a[t.payload.newPage][0],activeSourceCodeNumber:0,currentLink:l.b[t.payload.newPage],currentDownload:l.a[t.payload.newPage],currentDownloadName:l.c[t.payload.newPage],currentFileName:l.d[t.payload.newPage],currentSummaryComponent:c.a[t.payload.newPage],currentScreenshotComponent:u.a[t.payload.newPage],currentVideoComponent:d.a[t.payload.newPage],currentPage:t.payload.newPage});case a.b:return Object.assign({},e,{sidebarActiveNavItem:t.payload.newComponent});case a.c:return Object.assign({},e,{activeSourceCodeComponent:s.a[e.currentPage][t.payload.sourceCodeNumber],activeSourceCodeNumber:t.payload.sourceCodeNumber});default:return e}};t.a=f},function(e,t,n){"use strict";function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,"b",function(){return he}),n.d(t,"a",function(){return me});var i,o,a=n(0),s=n.n(a),l=n(23),c=n(190),u=n(192),d=n(193),p=n(194),f=n(195),h=n(196),m=n(197),g=n(198),y=n(199),b=n(200),v=n(201),w=n(202),x=n(203),T=n(204),S=n(205),C=n(206),k=n(207),O=n(208),E=n(209),P=n(210),j=n(211),I=n(212),_=n(213),R=n(214),A=n(215),N=n(216),B=n(217),M=n(218),L=n(219),D=n(220),G=n(221),F=n(222),H=n(223),V=n(224),U=n(225),X=n(226),W=n(227),Y=n(228),z=n(229),K=n(230),q=n(231),$=n(232),J=n(233),Q=n(234),Z=n(235),ee=n(236),te=n(237),ne=n(238),re=n(239),ie=n(240),oe=n(241),ae=n(242),se=n(243),le=n(244),ce=n(245),ue=n(246),de=n(247),pe=n(248),fe=n(249),he=(i={},r(i,l.f,["BodyContainer.jsx","MainNavBarContainer.jsx","SidebarContainer.jsx","SourceCodeContainer.jsx","LinksContainer.jsx","SummaryContainer.jsx"]),r(i,l.e,["Daur.java","GameScreen.java","Storage.java","World.java","Beetle.java","Wizard.java"]),r(i,l.g,["BuildingViewController.swift","MapViewController.swift","PrimaryMapViewController.swift","RoomViewController.swift","Point.swift","EECSHandler.swift"]),r(i,l.b,["Player.java","Character.java","GameScreen.java","LightHandler.java","LightBox.java","YellowLighter.java"]),r(i,l.h,["CircleGame.java","CircleGameView.java","Initializer.java","LevelSelect.java","BitmapManager.java","SoundManager.java"]),r(i,l.j,["PixelKnight.java","GameScreen.java","Storage.java","World.java","Mud.java","Charger.java"]),r(i,l.a,["Main.cpp","ColorManager.h","ColorManager.cpp","CursorManager.h","CursorManager.cpp","WindowManager.cpp"]),r(i,l.c,["TextEncryptor.h","TextEncryptor.cpp","Encryptor.cpp","Decryptor.cpp","Cipher.cpp","ColumnarTransposition.cpp"]),r(i,l.d,["RunManager.h","RunManager.cpp","Encryptor.cpp","Decryptor.cpp","EncryptionHandler.cpp","DecryptionHandler.cpp"]),r(i,l.l,["Director.py","CarHandler.py","GraphicsHelper.py"]),r(i,l.k,["Player.rb","Camera.rb","Map.rb","Enemy.rb","XShooter.rb","MissileLauncher.rb"]),i),me=(o={},r(o,l.f,[s.a.createElement(c.a,null),s.a.createElement(u.a,null),s.a.createElement(d.a,null),s.a.createElement(p.a,null),s.a.createElement(f.a,null),s.a.createElement(h.a,null)]),r(o,l.e,[s.a.createElement(m.a,null),s.a.createElement(b.a,null),s.a.createElement(y.a,null),s.a.createElement(g.a,null),s.a.createElement(v.a,null),s.a.createElement(w.a,null)]),r(o,l.g,[s.a.createElement(x.a,null),s.a.createElement(T.a,null),s.a.createElement(S.a,null),s.a.createElement(C.a,null),s.a.createElement(k.a,null),s.a.createElement(O.a,null)]),r(o,l.b,[s.a.createElement(E.a,null),s.a.createElement(P.a,null),s.a.createElement(b.a,null),s.a.createElement(j.a,null),s.a.createElement(I.a,null),s.a.createElement(_.a,null)]),r(o,l.h,[s.a.createElement(R.a,null),s.a.createElement(A.a,null),s.a.createElement(N.a,null),s.a.createElement(B.a,null),s.a.createElement(M.a,null),s.a.createElement(L.a,null)]),r(o,l.j,[s.a.createElement(D.a,null),s.a.createElement(b.a,null),s.a.createElement(y.a,null),s.a.createElement(g.a,null),s.a.createElement(G.a,null),s.a.createElement(F.a,null)]),r(o,l.a,[s.a.createElement(H.a,null),s.a.createElement(V.a,null),s.a.createElement(U.a,null),s.a.createElement(X.a,null),s.a.createElement(W.a,null),s.a.createElement(Y.a,null)]),r(o,l.c,[s.a.createElement(z.a,null),s.a.createElement(K.a,null),s.a.createElement(q.a,null),s.a.createElement($.a,null),s.a.createElement(J.a,null),s.a.createElement(Q.a,null)]),r(o,l.d,[s.a.createElement(Z.a,null),s.a.createElement(ee.a,null),s.a.createElement(te.a,null),s.a.createElement(ne.a,null),s.a.createElement(re.a,null),s.a.createElement(ie.a,null)]),r(o,l.l,[s.a.createElement(ae.a,null),s.a.createElement(oe.a,null),s.a.createElement(se.a,null)]),r(o,l.k,[s.a.createElement(ue.a,null),s.a.createElement(le.a,null),s.a.createElement(ce.a,null),s.a.createElement(de.a,null),s.a.createElement(pe.a,null),s.a.createElement(fe.a,null)]),o)},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-javascript"},'import React from "react";\nimport PropTypes from "prop-types"\nimport connect from \'react-redux/lib/connect/connect\';\n\nimport { Col } from "react-bootstrap"\n\nimport SidebarContainer from "../containers/SidebarContainer";\nimport SummaryContainer from "../containers/SummaryContainer";\nimport ScreenshotContainer from "./ScreenshotContainer";\nimport VideoContainer from "../containers/VideoContainer";\nimport SourceCodeContainer from "../containers/SourceCodeContainer";\nimport LinkContainer from "./LinksContainer";\nimport Footer from "../components/Footer";\n\nimport "./css/BodyContainer.css"\n\nimport { changeSidebarActive } from "../actions/index";\nimport {SUMMARY, SCREENSHOTS, VIDEO, CODE, LINKS, V_SIDEBAR, S_SIDEBAR} from "../constants/NavObjects";\n\nconst OFFSET_TOP = 60;\n\nclass BodyContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.summaryRef = React.createRef();\n        this.screenshotRef = React.createRef();\n        this.videoRef = React.createRef();\n        this.sourceCodeRef = React.createRef();\n        this.linkRef = React.createRef();\n    }\n\n    isTop(element) {\n        const top = element.getBoundingClientRect().top;\n        return top < OFFSET_TOP;\n    }\n\n    trackScrolling() {\n        if (this.linkRef.current.getBoundingClientRect().bottom <= window.innerHeight) {\n            this.props.changeSidebarActive(LINKS);\n            return;\n        }\n\n        if (this.isTop(this.sourceCodeRef.current)) {\n            this.props.changeSidebarActive(CODE);\n            return;\n        }\n        if (this.props.currentSidebarConfig === V_SIDEBAR && this.isTop(this.videoRef.current)) {\n            this.props.changeSidebarActive(VIDEO);\n            return;\n        }\n        if ((this.props.currentSidebarConfig === S_SIDEBAR || this.props.currentSidebarConfig === V_SIDEBAR)\n            && this.isTop(this.screenshotRef.current)) {\n            this.props.changeSidebarActive(SCREENSHOTS);\n            return;\n        }\n        if (this.isTop(this.summaryRef.current)) {\n            this.props.changeSidebarActive(SUMMARY);\n        }\n    }\n\n    scrollToRef = (id) => {\n        switch (id) {\n            case SUMMARY:\n                this.summaryRef.current.scrollIntoView({block: "end", behavior: "smooth"});\n                break;\n            case SCREENSHOTS:\n                const screenshotAdjusted = this.screenshotRef.current.offsetTop - 50;\n                window.scroll({ top: screenshotAdjusted, behavior: "smooth" });\n                break;\n            case VIDEO:\n                const videoAdjusted = this.videoRef.current.offsetTop - 50;\n                window.scroll({ top: videoAdjusted, behavior: "smooth" });\n                break;\n            case CODE:\n                const codeAdjusted = this.sourceCodeRef.current.offsetTop - 50;\n                window.scroll({ top: codeAdjusted, behavior: "smooth" });\n                break;\n            case LINKS:\n                const linksAdjusted = this.linkRef.current.offsetTop + 50;\n                window.scroll({ top: linksAdjusted, behavior: "smooth" });\n                break;\n            default:\n                break;\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener(\'scroll\', this.trackScrolling.bind(this));\n    }\n\n    componentDidUpdate() {\n        document.addEventListener(\'scroll\', this.trackScrolling.bind(this));\n    }\n\n    componentWillUpdate() {\n        document.removeEventListener(\'scroll\', this.trackScrolling.bind(this));\n    }\n\n    render() {\n        return (\n            <div className={"row"}>\n                <SidebarContainer scrollToComponent={this.scrollToRef.bind(this)}/>\n                <Col md={11} mdPush={1} className="body-container">\n                    <div ref={this.summaryRef}>\n                        <SummaryContainer/>\n                    </div>\n                    <div ref={this.screenshotRef}>\n                        <ScreenshotContainer ref={this.screenshotRef}/>\n                    </div>\n                    <div ref={this.videoRef}>\n                        <VideoContainer ref={this.videoRef}/>\n                    </div>\n                    <div ref={this.sourceCodeRef}>\n                        <SourceCodeContainer ref={this.sourceCodeRef}/>\n                    </div>\n                    <div ref={this.linkRef}>\n                        <LinkContainer ref={this.linkRef}/>\n                    </div>\n                    <Footer/>\n                </Col>\n            </div>\n        )\n    }\n}\n\nBodyContainer.propTypes = {\n    currentSidebarConfig: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        currentSidebarConfig: state.currentSidebarConfig\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeSidebarActive: (activeComponent) => dispatch(changeSidebarActive(activeComponent))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BodyContainer);')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),s=n(0),l=function(e){return e&&e.__esModule?e:{default:e}}(s),c=n(1),u=function(e){function t(){var e,n,o,a;r(this,t);for(var s=arguments.length,l=Array(s),c=0;c<s;c++)l[c]=arguments[c];return n=o=i(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(l))),o._handleRefMount=function(e){o._domNode=e},a=n,i(o,a)}return o(t,e),a(t,[{key:"componentDidMount",value:function(){this._hightlight()}},{key:"componentDidUpdate",value:function(){this._hightlight()}},{key:"_hightlight",value:function(){Prism.highlightElement(this._domNode,this.props.async)}},{key:"render",value:function(){var e=this.props,t=e.className,n=e.component,r=e.children;return l.default.createElement(n,{ref:this._handleRefMount,className:t},r)}}]),t}(s.PureComponent);u.propTypes={async:c.PropTypes.bool,className:c.PropTypes.string,children:c.PropTypes.any,component:c.PropTypes.node},u.defaultProps={component:"code"},t.default=u},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-javascript"},'import React from "react";\nimport PropTypes from "prop-types"\nimport connect from \'react-redux/lib/connect/connect\';\nimport { Navbar, Nav } from "react-bootstrap"\n\nimport { changePage } from "../actions/index"\n\nimport MainNavBarElement from "../components/MainNavBarElement";\n\nclass MainNavBar extends React.Component {\n    handleSelect(pageId) {\n        this.props.changePage(pageId);\n        window.scroll({ top: 0, behavior: "instant" });\n    };\n\n    render() {\n        return (\n            <Navbar inverse collapseOnSelect fixedTop fluid className="navbar-toggleable-md">\n                <Navbar.Header>\n                    <Navbar.Brand>\n                        <p>Apps</p>\n                    </Navbar.Brand>\n                    <Navbar.Toggle />\n                </Navbar.Header>\n                <Navbar.Collapse>\n                    <Nav bsStyle="tabs" className="nav-fill">\n                        {this.props.navItems.map((navItem, i) => {\n                            return (\n                                <MainNavBarElement key={i} {...{\n                                    navItem: navItem,\n                                    navActive: i === this.props.activeNavItem,\n                                    onSelect: this.handleSelect.bind(this)\n                                }}/>\n                            );\n                        })}\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nMainNavBar.propTypes = {\n    navItems: PropTypes.array.isRequired,\n    activeNavItem: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        navItems: state.mainNavItems,\n        activeNavItem: state.mainActiveNavItem\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changePage: (newPage) => dispatch(changePage(newPage))\n    };\n};\n\nconst MainNavBarContainer = connect(mapStateToProps, mapDispatchToProps)(MainNavBar);\nexport default MainNavBarContainer;')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-javascript"},'import React from "react";\nimport PropTypes from "prop-types"\nimport connect from \'react-redux/lib/connect/connect\';\n\nimport SidebarElement from "../components/SidebarElement";\nimport { Col, Nav } from "react-bootstrap"\n\nimport "./css/SidebarContainer.css"\nimport { changeSidebarActive } from "../actions/index";\n\nclass SidebarContainer extends React.Component {\n    render() {\n        return (\n            <Col xsHidden md={1} className="sidebar">\n                <Nav bsStyle="pills" stacked navbar>\n                    {this.props.navItems.map((navItem, i) => {\n                        return (\n                            <SidebarElement key={i} {...{\n                                navItem: navItem,\n                                navActive: navItem.id === this.props.activeNavItem,\n                                sidebarScroll: this.props.scrollToComponent\n                            }}/>\n                        );\n                    })}\n                </Nav>\n            </Col>\n        )\n    }\n}\n\nSidebarContainer.propTypes = {\n    navItems: PropTypes.array.isRequired,\n    activeNavItem: PropTypes.string.isRequired,\n    scrollToComponent: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        navItems: state.sidebarNavItems,\n        activeNavItem: state.sidebarActiveNavItem\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeSidebarActive: (activeComponent) => dispatch(changeSidebarActive(activeComponent))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidebarContainer);')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-javascript"},'import React from "react";\nimport PropTypes from "prop-types"\nimport connect from \'react-redux/lib/connect/connect\';\n\nimport { DropdownButton, MenuItem } from "react-bootstrap"\n\nimport Prism from "prismjs";\n\nimport { changeSourceCodeComponent } from "../actions/index"\n\nclass SourceCodeContainer extends React.Component {\n    handleSelect(activeSourceCodeNumber) {\n        this.props.changeSourceCodeComponent(activeSourceCodeNumber);\n    };\n\n    render() {\n        return (\n            <div>\n                <hr id="code"/>\n                <h2>{this.props.currentPage} Source Code</h2>\n                <DropdownButton\n                    bsStyle="default"\n                    title={this.props.sourceCodeOptions[this.props.activeSourceCodeNumber]}\n                    key={0}\n                    id={`dropdown-basic-0`}\n                >\n                    {this.props.sourceCodeOptions.map((option, i) => {\n                        if (i === this.props.activeSourceCodeNumber) {\n                            return (\n                                <MenuItem\n                                    eventKey={i}\n                                    data-val={option}\n                                    key={i}\n                                    active\n                                    onSelect={() => this.handleSelect(i)}\n                                >\n                                    {option}\n                                </MenuItem>\n                            );\n                        }\n                        else {\n                            return (\n                                <MenuItem\n                                    eventKey={i}\n                                    data-val={option}\n                                    key={i}\n                                    onSelect={() => this.handleSelect(i)}\n                                >\n                                    {option}\n                                </MenuItem>\n                            );\n                        }\n                    })}\n                </DropdownButton>\n                <br/>\n                <div id="active-source">\n                    {this.props.activeSourceCodeComponent}\n                </div>\n            </div>\n        );\n    }\n}\n\nSourceCodeContainer.propTypes = {\n    currentPage: PropTypes.string.isRequired,\n    sourceCodeOptions: PropTypes.array.isRequired,\n    activeSourceCodeNumber: PropTypes.number.isRequired,\n    activeSourceCodeComponent: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        sourceCodeOptions: state.sourceCodeOptions,\n        activeSourceCodeComponent: state.activeSourceCodeComponent,\n        activeSourceCodeNumber: state.activeSourceCodeNumber,\n        currentPage: state.currentPage\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeSourceCodeComponent: (activeSourceCodeNumber) => dispatch(changeSourceCodeComponent(activeSourceCodeNumber))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SourceCodeContainer);')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-javascript"},'import React from "react";\nimport PropTypes from "prop-types"\nimport connect from \'react-redux/lib/connect/connect\';\n\nclass LinksContainer extends React.Component {\n    render() {\n        return (\n            <div>\n                <hr id="links"/>\n                <h3>Links</h3>\n                <div className="row">\n                    &nbsp;&nbsp;&nbsp;\n                    <a href={this.props.currentLink} target="_blank">\n                        <i className="fa fa-github fa-4x" title="Github Link"/>\n                    </a>\n                    &nbsp;&nbsp;&nbsp;\n                    <a href={this.props.currentDownload} target="_blank" download={this.props.currentFileName}>\n                        <i className="fa fa-download fa-4x" title={this.props.currentDownloadName}/>\n                    </a>\n                </div>\n                <br/>\n            </div>\n        );\n    }\n}\n\nLinksContainer.propTypes = {\n    currentLink: PropTypes.string.isRequired,\n    currentDownload: PropTypes.string.isRequired,\n    currentDownloadName: PropTypes.string.isRequired,\n    currentFileName: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        currentLink: state.currentLink,\n        currentDownload: state.currentDownload,\n        currentDownloadName: state.currentDownloadName,\n        currentFileName: state.currentFileName\n    };\n};\n\nexport default connect(mapStateToProps, null)(LinksContainer);')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-javascript"},'import React from "react";\nimport PropTypes from "prop-types"\nimport connect from \'react-redux/lib/connect/connect\';\n\nclass SummaryContainer extends React.Component {\n    render() {\n        return (\n            <div ref={this.refs.summaryRef}>\n                {this.props.currentSummaryComponent}\n            </div>\n        );\n    }\n}\n\nSummaryContainer.propTypes = {\n    currentSummaryComponent: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        currentSummaryComponent: state.currentSummaryComponent\n    };\n};\n\nexport default connect(mapStateToProps, null)(SummaryContainer);')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},'package com.inoculates.fatesreprise.Characters;\n\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.audio.Sound;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.g2d.*;\nimport com.badlogic.gdx.maps.MapObject;\nimport com.badlogic.gdx.maps.objects.RectangleMapObject;\nimport com.badlogic.gdx.maps.tiled.TiledMap;\nimport com.badlogic.gdx.maps.tiled.TiledMapTileLayer;\nimport com.badlogic.gdx.math.Rectangle;\nimport com.badlogic.gdx.utils.Timer;\nimport com.inoculates.fatesreprise.Consumables.*;\nimport com.inoculates.fatesreprise.Effects.*;\nimport com.inoculates.fatesreprise.Events.*;\nimport com.inoculates.fatesreprise.Events.Event;\nimport com.inoculates.fatesreprise.Interactables.*;\nimport com.inoculates.fatesreprise.Items.*;\nimport com.inoculates.fatesreprise.MeleeWeapons.BasicSword;\nimport com.inoculates.fatesreprise.Projectiles.Projectile;\nimport com.inoculates.fatesreprise.Screens.GameScreen;\nimport com.inoculates.fatesreprise.Spells.WindSickle;\nimport com.inoculates.fatesreprise.UI.*;\nimport com.inoculates.fatesreprise.UI.Heart;\nimport com.inoculates.fatesreprise.Worlds.UnderWorld;\nimport com.inoculates.fatesreprise.Worlds.UpperWorld;\n\nimport java.awt.*;\nimport java.util.ArrayList;\n\n// Daur class responsible for every action of the main character, Daur. The most complicated character class.\npublic class Daur extends Character {\n    // All of these static integers represent the various states Daur goes through.\n    // Each state Daur is set to will cause Daur to have a different animation.\n    private final int ATTACKING = 2, RUNNING = 3, PUSHING = 4, JUMPING = 5, SWIMMING = 6, FALLING = 7, DROWNING = 8,\n            ITEMAQ = 9, CASTING = 10, KNOCKOUT = 11, JUMPATTACKING = 12;\n\n    // Animations of Daur, which as mentioned are determined by the state\n    Animation idle, run, push, cast, attack, jump, swim, falling, drowning, itemAQ, knockout;\n\n    // The collision direction of Daur, which determines the orientation of his frames and animations when he is pushing\n    // on something. This is to ensure that regardless of whatever direction the player is moving Daur in, he will remain\n    // pushing in the same direction.\n    int collisionDir;\n    // The number which determines which wade sound will be played.\n    int wadeNum = 0;\n\n    // Whether Daur is currently invulnerable (cannot be harmed). Also whether Daur is shielding and a cooldown period\n    // for the wade sound of Daur.\n    public boolean invulnerability = false, shielding = false, wadeCooldown = false, grassCooldown = false;\n\n    // Whether Daur is slowed, on grass, in dialogue, displaying his wounded animation (flashing colors), falling down\n    // a hole, attacking, his spell\'s on cooldown, and swimming.\n    private boolean slowed = false, onGrass = false;\n    private boolean talkPressed = false;\n    private boolean transitioning = false;\n    private boolean fallingHole = false;\n    private boolean attacking = false;\n    private boolean spellCooldown = false;\n    private boolean swimming = false;\n    private boolean grounded = true;\n    private boolean onPlatform = false;\n    private boolean dying = false;\n\n    // The max possible speed of Daur, the amount of time Daur has to push on a block for it to move, and the amount of\n    // time Daur has been shielding.\n    private float maxSpeed = 0, blockTime = 0, shieldTime;\n    // The jumping velocity of Daur. This is added to the normal velocity so that it appears as though Daur is jumping.\n    private float jumpVelocity = 0, platformVelX = 0, platformVelY = 0;\n\n    // This timer creates a concurrent thread that is responsible for the slowing effect when Daur swims.\n    private Timer dragTimer = new Timer();\n    // This timer is used to fill up Daur\'s hearts.\n    private Timer heartTimer = new Timer();\n    // The grass effect that will stick to Daur.\n    private Grass grass;\n    // The ripple effect that will also stick to Daur.\n    private Ripple ripple;\n    // The shadow effect that will be beneath Daur when in the air.\n    private Shadow shadow;\n    // The shield effect that will guard Daur.\n    private Shield shield;\n    // The block that Daur is currently moving.\n    private Block moveBlock;\n    // Daur\'s sword, that appears when swung.\n    private BasicSword sword;\n    // Shield channeling sound.\n    private Sound shieldSFX;\n    // The array list that represents the heart UI elemnt shown to the user.\n    private ArrayList&lt;Heart&gt; hearts = new ArrayList&lt;Heart&gt;();\n    // The respawn point of the Daur (if he dies), and the spawn point (if he falls down a hole and must be spawned).\n    private Point respawnPoint, spawnPoint;\n    // The bar for the UI on the game that hovers on the top edge of the screen.\n    BlueBarUI blueBar;\n\n    // The regions that serve as frames for the animations of Daur. Note that nearly every frame has FOUR directions to\n    // it, including the idle and walking animations.\n    TextureAtlas.AtlasRegion FD1 = atlas.findRegion("bottom1"), FD2 = atlas.findRegion("bottom2"),\n            FU1 = atlas.findRegion("top1"), FU2 = atlas.findRegion("top2"), FL1 = atlas.findRegion("left1"),\n            FL2 = atlas.findRegion("left2"), FR1 = atlas.findRegion("right1"), FR2 = atlas.findRegion("right2");\n\n    TextureAtlas.AtlasRegion PD1 = atlas.findRegion("bottompush1"), PD2 = atlas.findRegion("bottompush2"),\n            PU1 = atlas.findRegion("toppush1"), PU2 = atlas.findRegion("toppush2"), PR1 = atlas.findRegion("rightpush1"),\n            PR2 = atlas.findRegion("rightpush2"), PL1 = atlas.findRegion("leftpush1"), PL2 = atlas.findRegion("leftpush2");\n\n    TextureAtlas.AtlasRegion SU1 = atlas.findRegion("topswim1"), SU2 = atlas.findRegion("topswim2"),\n            SD1 = atlas.findRegion("bottomswim1"), SD2 = atlas.findRegion("bottomswim2"), SL1 = atlas.findRegion("leftswim1"),\n            SL2 = atlas.findRegion("leftswim2"), SR1 = atlas.findRegion("rightswim1"), SR2 = atlas.findRegion("rightswim2");\n\n    TextureAtlas.AtlasRegion AD1 = atlas.findRegion("attackdown1"), AD2 = atlas.findRegion("attackdown2"),\n            AU1 = atlas.findRegion("attackup1"), AU2 = atlas.findRegion("attackup2"), AL1 = atlas.findRegion("attackleft1"),\n            AL2 = atlas.findRegion("attackleft2"), AR1 = atlas.findRegion("attackright1"), AR2 = atlas.findRegion("attackright2");\n\n    TextureAtlas.AtlasRegion JD1 = atlas.findRegion("jumpD1"), JD2 = atlas.findRegion("jumpD2"), JD3 = atlas.findRegion("jumpD3"),\n            JU1 = atlas.findRegion("jumpU1"), JU2 = atlas.findRegion("jumpU2"), JU3 = atlas.findRegion("jumpU3"),\n            JR1 = atlas.findRegion("jumpR1"), JR2 = atlas.findRegion("jumpR2"), JR3 = atlas.findRegion("jumpR3"),\n            JL1 = atlas.findRegion("jumpL1"), JL2 = atlas.findRegion("jumpL2"), JL3 = atlas.findRegion("jumpL3");\n\n    TextureAtlas.AtlasRegion F1 = atlas.findRegion("falling1"), F2 = atlas.findRegion("falling2"), F3 = atlas.findRegion("falling3");\n\n    TextureAtlas.AtlasRegion DR = atlas.findRegion("drown");\n\n    TextureAtlas.AtlasRegion KO = atlas.findRegion("dead");\n\n    TextureAtlas.AtlasRegion IA = atlas.findRegion("itemacquired");\n\n    // Initializes the Daur class by setting Daur\'s atlas, layer, screen, map, frames, and animations. Additionally sets\n    // the mana, coins, and health in case a game has been loaded. Also creates the effects and the UI for the game.\n    public Daur(GameScreen screen, TiledMap map, TextureAtlas atlas) {\n        super(screen, map, atlas, screen.storage);\n        health = storage.health;\n\n        // Creates effects.\n        grass = new Grass(screen, map, screen.daurAtlases.get(3), this);\n        ripple = new Ripple(screen, map, screen.daurAtlases.get(3), this);\n        shadow = new Shadow(screen, map, screen.miscAtlases.get(1), this, getX(), getY(), 1);\n        shieldSFX = storage.sounds.get("zap1");\n\n        // Creates UI bar for the user to see the various UI elements.\n        blueBar = new BlueBarUI(screen, screen.daurAtlases.get(1));\n        screen.UIS.add(blueBar);\n\n        // Creates each individual heart and adds to the UI bar.\n        for (int i = 0; i &lt; storage.maxHealth / 2; i++) {\n            Heart heart = new Heart(screen, screen.daurAtlases.get(1), blueBar, i);\n            hearts.add(heart);\n            screen.UIS.add(heart);\n        }\n        updateHearts();\n    }\n\n    // This overrides the character draw method purely to draw the sword so that it displays at all times.\n    public void draw(Batch batch) {\n        super.draw(batch);\n        if (attacking)\n            sword.draw(batch);\n    }\n\n    // Checks for key inputs, collision of enemies, and checks whether Daur is currently in fog.\n    protected void update(float deltaTime) {\n        processKeys();\n        collidesEnemy();\n        checkFog();\n    }\n\n    // This method moves Daur depending on the x and y components of its velocity. Additionally, it checks for any\n    // collisions, and for any change in condition (like slow).\n    private void tryMove() {\n        checkCollisions();\n        detectPlatform();\n        detectConditions();\n    }\n\n    // Sets the velocity components of the character depending on the modifiers. Overidden to prevent changes during\n    // transitioning.\n    protected void SVX(float x) {\n        if (transitioning)\n            return;\n\n        vel.x = x - modifierX * Math.signum(x);\n    }\n\n    protected void SVY(float y) {\n        if (transitioning)\n            return;\n\n        vel.y = y - modifierY * Math.signum(y);\n    }\n\n    // Checks whether Daur\'s condition has changed depending on its position.\n    private void detectConditions() {\n        // Checks if Daur is slowed.\n        if (detectSlow() && grounded) {\n            slowed = true;\n            setModifier(0.35f, 0.35f);\n            // If currently slowed, but not in a slow cell, removes the slow effect.\n        } else if (slowed) {\n            slowed = false;\n            resetModifier(0.35f, 0.35f);\n        }\n\n        // Checks if any grass has been detected (if there is no grass type there is no grass).\n        if (detectGrass() != 4 && grounded) {\n            // Sets the grass type accordingly.\n            grass.setType(detectGrass());\n            // If previously not on grass, adds the grass screen effect and sets the position. Additionally, sets the\n            // frame.\n            if (!onGrass) {\n                onGrass = true;\n                screen.effects.add(grass);\n                grass.setPosition(getX(), getY());\n                grass.setAnimationTime(animationTime);\n            }\n            // Else if Daur was on grass previously, but no more, removes the grass and sets Daur\'s condition\n            // accordingly.\n        } else {\n            onGrass = false;\n            screen.effects.remove(grass);\n        }\n\n        // If Daur is on shallow water, a ripple effect will be added to Daur, similarly to the grass effect.\n        if (detectShallowWater() && grounded) {\n            if (!screen.effects.contains(ripple)) {\n                screen.effects.add(ripple);\n                ripple.setPosition(getX(), getY());\n                ripple.setAnimationTime(animationTime);\n            }\n            // If the Daur has a ripple effect, but is not in shallow water, the game removes the effect.\n        }\n        else if (screen.effects.contains(ripple))\n            screen.effects.remove(ripple);\n\n        // If Daur is in deep enough water to swim, Daur will begin to swim, and his state will be set accordingly.\n        if (grounded && detectWater() || (detectDeepWater() && canSwim() && grounded)) {\n            swimming = true;\n            setState(SWIMMING, true);\n        }\n        // Else if daur was previously swimming, ensures that Daur is no longer swimming, and allows him to move\n        // freely. Also immediately sets his state to idle.\n        else if (swimming) {\n            unStun();\n            swimming = false;\n            setState(IDLE, true);\n        }\n\n        // If Daur is in water that is too deep for him to traverse (without proper swim gear) he drowns.\n        if (detectDeepWater() && !canSwim() && grounded)\n            drown();\n\n        // If the Daur is currently in a hole, causes him to fall.\n        if (detectHole() != null && grounded && !onPlatform) {\n            // Creates the boolean variable isFalling, to check if Daur is close enough to fall, or only close enough\n            // to gravitate.\n            boolean isFalling = false;\n            // Gets the middle of the hole cell.\n            Point holePoint = detectHole();\n            // Distance from Daur to the middle of the hole cell.\n            float distanceX = Math.abs(holePoint.x - getCX());\n            float distanceY = Math.abs(holePoint.y - getCY());\n            // If Daur is sufficiently close in both the x and y respects, causes him to fall.\n            if (distanceX &lt; getWidth() / 2.25f && distanceY &lt; getHeight() / 2.25f) {\n                fallHole(holePoint);\n                isFalling = true;\n            }\n            // Otherwise simply gravitates him.\n            if (!isFalling) {\n                fallingHole = true;\n                gravitateHole(holePoint);\n            }\n        }\n        // Else if Daur is not in a hole cell, but was falling previously, snaps him back to a normal state. Also reduces\n        // his acceleration to zero, so he is no longer gravitating.\n        else if (fallingHole) {\n            fallingHole = false;\n            ace.x = 0;\n            ace.y = 0;\n        }\n    }\n\n    // This detects if Daur is currently on a platform. Should he be, his velocity is modified by the platform\'s, and\n    // he will not fall down.\n    private void detectPlatform() {\n        // Does not work if in the air.\n        if (!grounded) {\n            platformVelX = 0;\n            platformVelY = 0;\n            onPlatform = false;\n            return;\n        }\n        for (Interactable interactable : screen.interactables)\n            if (interactable instanceof Platform && screen.isInView(interactable)) {\n                Platform platform = (Platform) interactable;\n                // If the vertices of Daur are inside a platform, sets onPlatform to true.\n                if (platform.getBoundingRectangle().contains(getX(), getCY()) ||\n                        platform.getBoundingRectangle().contains(getRX(), getCY()) ||\n                        platform.getBoundingRectangle().contains(getCX(), getY()) ||\n                        platform.getBoundingRectangle().contains(getCX(), getRY() - 5) ||\n                        platform.getBoundingRectangle().contains(getX(), getRY() - 5) ||\n                        platform.getBoundingRectangle().contains(getX(), getY()) ||\n                        platform.getBoundingRectangle().contains(getRX(), getRY() - 5) ||\n                        platform.getBoundingRectangle().contains(getRX(), getY())) {\n                    onPlatform = true;\n                    platformVelX = platform.getVelX();\n                    platformVelY = platform.getVelY();\n                    return;\n                }\n            }\n        platformVelX = 0;\n        platformVelY = 0;\n        onPlatform = false;\n    }\n\n    // This is what occurs if Daur were to fall down a hole.\n    private void fallHole(Point hole) {\n        // Resets channeling as Daur is falling.\n        stopChanneling();\n        // If Daur is already falling, no need to make him fall down twice.\n        if (state == FALLING)\n            return;\n        // Sets invulnerability and transparency to true to avoid collisions.\n        invulnerability = true;\n        // Sets the state to falling for the animation.\n        setState(FALLING, true);\n        // This method adjusts the position of Daur\'s sprite to emulate Daur falling down the center of the hole.\n        // Uses a time loop to ensure a constant repositioning.\n        final Point fallHole = hole;\n        for (float i = 0; i &lt; 0.9; i += 0.01f)\n            screen.globalTimer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    resetPosition(fallHole);\n                }\n            }, i);\n        // Causes Daur to be motionless and receive no input.\n        ace.x = 0;\n        ace.y = 0;\n        stun();\n        freeze();\n        // Plays the falling sound.\n        storage.sounds.get("fall2").play(1.0f);\n        // After one second of falling, Daur\'s health will be reduced, he will flicker to show he has been hurt,\n        // his position will be reset to the spawn point, he will be unstunned, and his state will be set to idle.\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                invulnerability = false;\n                setPosition(spawnPoint.x, spawnPoint.y);\n                setState(IDLE, true);\n                freeze();\n                unStun();\n                loseHealth(1);\n            }\n        }, 1);\n    }\n\n    // This is what occurs if Daur were to drown in a deepwater area.\n    private void drown() {\n        // Resets channeling.\n        stopChanneling();\n        // If Daur is already drowning, returns.\n        if (state == DROWNING)\n            return;\n        // Else sets the state to drowning.\n        setState(DROWNING, true);\n        // Immobilizes and stuns Daur.\n        freeze();\n        stun();\n        // Adjusts Daur\'s new sprite position to the center of the tile to simulate drowning.\n        setPosition((int) ((getCX()) / layer.getTileWidth()) * layer.getTileWidth() + layer.getTileWidth() / 2 - getWidth() / 2,\n                (int) ((getY() + 2) / layer.getTileHeight()) * layer.getTileHeight() + layer.getTileHeight() / 2 - getHeight() / 2);\n        chooseSprite();\n        setPosition((int) ((getCX()) / layer.getTileWidth()) * layer.getTileWidth() + layer.getTileWidth() / 2 - getWidth() / 2,\n                (int) ((getY() + 2) / layer.getTileHeight()) * layer.getTileHeight() + layer.getTileHeight() / 2 - getHeight() / 2);\n        // Adds the small splash effect.\n        Splash splash = new Splash(screen, map, screen.daurAtlases.get(3), this);\n        screen.effects.add(splash);\n        // Plays the drowning sound.\n        storage.sounds.get("drown").play(1.0f);\n        // After 0.75 seconds of falling, Daur\'s health will be reduced, he will flicker to show he has been hurt,\n        // his position will be reset to the spawn point, he will be unstunned, and his state will be set to idle.\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                loseHealth(1);\n                setPosition(spawnPoint.x, spawnPoint.y);\n                unStun();\n                setState(IDLE, true);\n                detectConditions();\n            }\n        }, 0.75f);\n    }\n\n    // With every new frame, Daur\'s position is reset due to the vastly different sizes of his sprites during his falling\n    // animation. Note that the time is rounded up to ensure that Daur has changed his sprite (as the frame and timer\n    // do not line up perfectly).\n    private void resetPosition(final Point hole) {\n        chooseSprite();\n        setPosition(hole.x - getWidth() / 2, hole.y - getHeight() / 2);\n    }\n\n    // This method is responsible for constantly accelerating Daur towards the center of the hole.\n    private void gravitateHole(Point holePoint) {\n        // Gets angle between Daur and center of the hole.\n        float angle = (float) Math.atan2(holePoint.y - getY() - getHeight() / 2, holePoint.x - getX() - getWidth() / 2);\n        // Causes Daur to accelerate towards the hole, but not by too much.\n        ace.x = (float) Math.cos(angle) / 10;\n        ace.y = (float) Math.sin(angle);\n        // Sets the max speed to ensure Daur does not fly into the hole at super speeds.\n        maxSpeed = 0.5f;\n    }\n\n    // Large method that checks for any collisions with other characters, objects, or terrain.\n    private void checkCollisions() {\n        // Sets the current x and y values. This retains the soon-to-be "old" position components.\n        float oldX = getX(), oldY = getY(), oldSY = shadow.getY();\n        // The boolean for collisions.\n        boolean collisionX = false, collisionY = false;\n\n        // If Daur is moving and on shallow water plays the wading sound. This is a constant alternation between two\n        // sounds.\n        if ((vel.x != 0 || vel.y != 0) && screen.effects.contains(ripple) && !wadeCooldown) {\n            wadeCooldown = true;\n            screen.globalTimer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    wadeCooldown = false;\n                }\n            }, 0.35f);\n\n            switch (wadeNum) {\n                case 0:\n                    storage.sounds.get("wade1").play(2.0f);\n                    wadeNum = 1;\n                    break;\n                case 1:\n                    storage.sounds.get("wade2").play(2.0f);\n                    wadeNum = 0;\n                    break;\n            }\n        }\n\n        // Same but for the grass sound.\n        if ((vel.x != 0 || vel.y != 0) && screen.effects.contains(grass) && !grassCooldown) {\n            grassCooldown = true;\n            screen.globalTimer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    grassCooldown = false;\n                }\n            }, 0.25f);\n            storage.sounds.get("grasswalk").play(1.0f);\n        }\n\n        // Accelerates Daur accordingly.\n        vel.x += ace.x;\n\n        // Ensures that Daur does not accelerate out of control by setting a maximum speed.\n        if (ace.x != 0 && Math.abs(vel.x) &gt; maxSpeed)\n            vel.x = Math.signum(vel.x) * maxSpeed;\n\n        // Adds velocity to x value.\n        setX(getX() + vel.x + platformVelX);\n        // Sets shadow\'s position accordingly.\n        shadow.setPosition(getCX() - shadow.getWidth() / 2, shadow.getY());\n\n        // Detects collision and if there is one, moves Daur back. The first if statement is if Daur is moving to the\n        // left and the second if to the right.\n        if (vel.x &lt; 0 && grounded)\n            // If Daur has collided with terrain or an interactable while on the ground.\n            collisionX = collidesLeft() || collidesInteractable() || collidesHalfBlockLeft() ||\n                    // If Daur is stunned, ensures that he does not go to another cell. This is to prevent the user from\n                    // feeling too confused.\n                    (getX() &lt; storage.cellX * layer.getTileWidth() * 10 && stun && !swimming);\n        else if (vel.x &gt; 0 && grounded)\n            collisionX = collidesRight() || collidesInteractable() || collidesHalfBlockRight() ||\n                    (getX() + getWidth() &gt; (storage.cellX + 1) * layer.getTileWidth() * 10 && stun && !swimming);\n        else if (!grounded)\n            collisionX = collidesShadow();\n\n        // If Daur has collided in any way on the x-axis. NOTE: this is only for terrain.\n        if (collisionX) {\n            // Sets the collision direction of Daur depending on the x component of his velocity.\n            if (vel.x &gt; 0)\n                collisionDir = 1;\n            else collisionDir = -1;\n\n            // If collision occurs, sets the x value of Daur back to the old one, and causes him to stop.\n            setX(oldX);\n            shadow.setPosition(getCX() - shadow.getWidth() / 2, shadow.getY());\n            vel.x = 0;\n\n            // If Daur has collided while swimming, also sets the y component of his velocity to zero, unstuns him to\n            // allow movement, and clears all instances of drag.\n            if (swimming) {\n                dragTimer.clear();\n                unStun();\n                setY(oldY);\n                vel.y = 0;\n                // Stops playing the swim sound to prevent too many sounds playing.\n                storage.sounds.get("swim").stop();\n            }\n            else\n                // If not swimming, Daur\'s state is set to pushing. However, this does NOT override any other state.\n                setState(PUSHING, false);\n        }\n\n        // If Daur collides with character, does largely the same as terrain. However, Daur will not be set to his\n        // pushing state.\n        if (collidesCharacter() && grounded) {\n            setX(oldX);\n            vel.x = 0;\n\n            if (swimming) {\n                dragTimer.clear();\n                unStun();\n                setY(oldY);\n                vel.y = 0;\n                // Stops playing the swim sound to prevent too many sounds playing.\n                storage.sounds.get("swim").stop();\n            }\n        }\n\n        // Similar to the x version, but for the y component of Daur\'s velocity.\n        vel.y += ace.y;\n\n        if (ace.y != 0 && Math.abs(vel.y) &gt; maxSpeed)\n            vel.y = Math.signum(vel.y) * maxSpeed;\n\n        // Adds velocity and jump velocity to y value.\n        setY(getY() + vel.y + jumpVelocity + platformVelY);\n        // Sets shadow\'s position accordingly.\n        shadow.setPosition(getCX() - shadow.getWidth() / 2, shadow.getY() + vel.y);\n\n        // Detects collision on the y axis.\n        if (vel.y &lt; 0 && grounded)\n            collisionY = collidesBottom() || collidesInteractable() || collidesHalfBlockBottom() ||\n                    (getY() &lt; storage.cellY * layer.getTileHeight() * 10 && stun && !swimming);\n        else if (vel.y &gt; 0 && grounded)\n            collisionY = collidesTop() || collidesInteractable() || collidesHalfBlockTop() ||\n                    (getY() + getHeight() &gt; (storage.cellY + 1) * layer.getTileHeight() * 10 - 16 && stun && !swimming);\n            // If not on the ground, collision is based on the shadow of Daur.\n        else if (!grounded)\n            collisionY = collidesShadow();\n\n        if (collisionY) {\n            if (vel.y &gt; 0)\n                collisionDir = 2;\n            else collisionDir = -2;\n\n            setY(oldY);\n            shadow.setY(oldSY);\n            vel.y = jumpVelocity;\n            setY(getY() + jumpVelocity);\n\n            if (swimming) {\n                dragTimer.clear();\n                unStun();\n                setX(oldX);\n                vel.x = 0;\n                // Stops playing the swim sound to prevent too many sounds playing.\n                storage.sounds.get("swim").stop();\n            }\n            else\n                setState(PUSHING, false);\n        }\n\n        if (collidesCharacter() && grounded) {\n            setY(oldY);\n            if (swimming) {\n                dragTimer.clear();\n                unStun();\n                setX(oldX);\n                vel.x = 0;\n                // Stops playing the swim sound to prevent too many sounds playing.\n                storage.sounds.get("swim").stop();\n            }\n        }\n\n        // If jumping, constantly reduces jump velocity so it appears as though Daur is falling.\n        if (state == JUMPING || state == JUMPATTACKING) {\n            // If Daur is below the shadow, ends the jump.\n            if (getY() &lt; shadow.getY())\n                endJump();\n                // Lowers jump velocity otherwise.\n            else\n                jumpVelocity -= 0.1345;\n        }\n\n        if (!collisionY && !collisionX && state == PUSHING)\n            setState(IDLE, false);\n    }\n\n    // Checks if Daur has collided with one of the interactables on the screen by checking if their bounding rectangles\n    // have intersected.\n    protected boolean collidesInteractable() {\n        for (Interactable interactable : screen.interactables) {\n            for (float step = 0; step &lt; getWidth() - 2; step += layer.getTileWidth() / 16)\n                for (float step2 = 0; step2 &lt; getHeight() - 5; step2 += layer.getTileHeight() / 16)\n                    if (interactable.getBoundingRectangle().contains(getX() + 1 + step, getY() + 1 + step2)) {\n                        // Checks if the interactable Daur has collided with is a block.\n                        checkBlock(interactable);\n                        // Check if the interactable Daur has collided with is a locked door.\n                        checkLockedDoor(interactable);\n                        // If interactable is not a teleporter, collides with the interactable. Also does not collide if\n                        // Daur is inside the chest.\n                        if (!(interactable instanceof Teleporter || interactable instanceof Platform))\n                            return true;\n                    }\n        }\n        return false;\n    }\n\n    // Checks if Daur has collided with one of the consumables on the screen by checking if their bounding rectangles\n    // have intersected.\n    protected boolean collidesConsumable() {\n        for (Consumable consumable : screen.consumables) {\n            for (float step = 0; step &lt; getWidth() - 2; step += layer.getTileWidth() / 16)\n                for (float step2 = 0; step2 &lt; getHeight() - 5; step2 += layer.getTileHeight() / 16)\n                    if (consumable.getBoundingRectangle().contains(getX() + 1 + step, getY() + 1 + step2)) {\n                        // Does the corresponding action.\n                        eatConsumable(consumable);\n                        return true;\n                    }\n        }\n        return false;\n    }\n\n    // Checks if the SHADOW of Daur has collides. This is used to determine if Daur has collided while jumping. As he\n    // must return to his shadow, his shadow is used to determine collision.\n    protected boolean collidesShadow() {\n        for (float x = getX() + 1; x &lt; getX() + getWidth(); x ++)\n            for (float y = shadow.getY() + 1; y &lt; shadow.getY() + shadow.getHeight() + 5; y ++)\n                if (isCellBlocked(x, y) || isCellPost(x + 6, y) || isCellShrub(x + 4, y) || collidesHalfBlock(x, y))\n                    return true;\n        return (shadow.collidesCharacter() || shadow.collidesInteractable());\n    }\n\n    // Checks if the shadow has collided with any half blocks.\n    private boolean collidesHalfBlock(float x, float y) {\n        // Daur is moving right, checks for right half block collision.\n        if (vel.x &gt; 0 && vel.y == 0) {\n            if (isCellHalfBlockedR(getRX() - 8, y) || isCellHalfBlockedL(shadow.getRX(), y) || isCellHalfBlockedT(x, shadow.getRY() - 4) ||\n                    isCellHalfBlockedB(x, shadow.getY() + 8) || isCellHalfBlockedBR(getRX() - 8, shadow.getY() + 8) ||\n                    isCellHalfBlockedTR(getRX() - 8, shadow.getRY() - 4) || isCellHalfBlockedBL(shadow.getRX(), shadow.getY() + 8) ||\n                    isCellHalfBlockedTL(shadow.getRX(), shadow.getRY() - 4))\n                return true;\n        }\n        // Daur is moving right and up, checks for right or top half block collision.\n        else if (vel.x &gt; 0 && vel.y &gt; 0) {\n            if (isCellHalfBlockedR(getRX() - 8, y) || isCellHalfBlockedL(shadow.getRX(), y) || isCellHalfBlockedT(x, shadow.getRY() - 4) ||\n                    isCellHalfBlockedB(x, shadow.getRY() + 2) || isCellHalfBlockedBR(getRX() - 8, shadow.getRY() + 2) ||\n                    isCellHalfBlockedTR(getRX() - 8, shadow.getRY() - 4) || isCellHalfBlockedBL(shadow.getRX(), shadow.getRY() + 2) ||\n                    isCellHalfBlockedTL(shadow.getRX(), shadow.getRY() - 4))\n                return true;\n        }\n        // Daur is moving right and bottom, checks for right or bottom half block collision.\n        else if (vel.x &gt; 0 && vel.y &lt; 0) {\n            if (isCellHalfBlockedR(getRX() - 8, y) || isCellHalfBlockedL(shadow.getRX(), y) || isCellHalfBlockedT(x, shadow.getY() + 1) ||\n                    isCellHalfBlockedB(x, shadow.getY() + 8) || isCellHalfBlockedBR(getRX() - 8, shadow.getY() + 8) ||\n                    isCellHalfBlockedTR(getRX() - 8, shadow.getY() + 1) || isCellHalfBlockedBL(shadow.getRX(), shadow.getY() + 8) ||\n                    isCellHalfBlockedTL(shadow.getRX(), shadow.getY() + 1))\n                return true;\n        }\n        // Daur is moving left, checks for left half block collision.\n        else if (vel.x &lt; 0 && vel.y == 0) {\n            if (isCellHalfBlockedL(getX() + 8, y) || isCellHalfBlockedR(shadow.getX() - 1, y) || isCellHalfBlockedT(x, shadow.getRY() - 4) ||\n                    isCellHalfBlockedB(x, shadow.getY() + 8) || isCellHalfBlockedBR(shadow.getX() - 1, shadow.getY() + 8) ||\n                    isCellHalfBlockedTR(shadow.getX() - 1, shadow.getRY() - 4) || isCellHalfBlockedBL(getX() + 8, shadow.getY() + 8) ||\n                    isCellHalfBlockedTL(getX() + 8, shadow.getRY() - 4))\n                return true;\n        }\n        // Daur is moving left and up, checks for left and top half block collision.\n        else if (vel.x &lt; 0 && vel.y &gt; 0) {\n            if (isCellHalfBlockedR(shadow.getX() - 1, y) || isCellHalfBlockedL(getX() + 8, y) || isCellHalfBlockedT(x, shadow.getRY() - 4) ||\n                    isCellHalfBlockedB(x, shadow.getRY() + 2)  || isCellHalfBlockedBR(shadow.getX() - 1, shadow.getRY() + 2) ||\n                    isCellHalfBlockedTR(shadow.getX() - 1, shadow.getRY() - 4) || isCellHalfBlockedBL(getX() + 8, shadow.getRY() + 2) ||\n                    isCellHalfBlockedTL(getX() + 8, shadow.getRY() - 4))\n                return true;\n        }\n        // Daur is moving left and down, checks for left and bottom half block collision.\n        else if (vel.x &lt; 0 && vel.y &lt; 0) {\n            if (isCellHalfBlockedR(shadow.getX() - 1, y) || isCellHalfBlockedL(getX() + 8, y) || isCellHalfBlockedT(x, shadow.getY() + 1) ||\n                    isCellHalfBlockedB(x, shadow.getY() + 8)  || isCellHalfBlockedBR(shadow.getX() - 1, shadow.getY() + 8) ||\n                    isCellHalfBlockedTR(shadow.getX() - 1, shadow.getY() + 1) || isCellHalfBlockedBL(getX() + 8, shadow.getY() + 8) ||\n                    isCellHalfBlockedTL(getX() + 8, shadow.getY() + 1))\n                return true;\n        }\n        // Daur is moving up, checks for top half block collision.\n        else if (vel.y &gt; 0 && vel.x == 0) {\n            if (isCellHalfBlockedT(x, shadow.getRY() - 4) || isCellHalfBlockedB(x, shadow.getRY() + 2) || isCellHalfBlockedR(shadow.getRX() - 8, y) ||\n                    isCellHalfBlockedL(getX() + 8, y) || isCellHalfBlockedBR(getRX() - 8, shadow.getRY() + 2) ||\n                    isCellHalfBlockedTR(getRX() - 8, shadow.getRY() - 4) || isCellHalfBlockedBL(getX() + 8, shadow.getRY() + 2) ||\n                    isCellHalfBlockedTL(getX() + 8, shadow.getRY() - 4))\n                return true;\n        }\n        // Daur is moving down, checks for bottom half block collision.\n        else if (vel.y &lt; 0 && vel.x == 0) {\n            if (isCellHalfBlockedB(x, shadow.getY() + 8) || isCellHalfBlockedT(x, shadow.getY() + 1) || isCellHalfBlockedR(shadow.getRX() - 8, y) ||\n                    isCellHalfBlockedL(getX() + 8, y) || isCellHalfBlockedBR(getRX() - 8, shadow.getY() + 8) ||\n                    isCellHalfBlockedTR(getRX() - 8, shadow.getY() + 1) || isCellHalfBlockedBL(getX() + 8, shadow.getY() + 8) ||\n                    isCellHalfBlockedTL(getX() + 8, shadow.getY() + 1))\n                return true;\n        }\n        return false;\n    }\n\n    // Checks if Daur has collided with a block, and if so, pushes on the block.\n    private void checkBlock(final Interactable interactable) {\n        // Checks if the collided interactable is indeed a block.\n        if (interactable instanceof Block) {\n            // Casts interactable to a block to properly use methods.\n            Block block = (Block) interactable;\n            // If Daur is currently not pushing on a block, or if this block is a new block, sets the current block\n            // to the the one Daur is pushing on.\n            if (moveBlock == null || !moveBlock.equals(block)) {\n                moveBlock = block;\n                // Also resets the amount of time Daur has to push on the block to move it.\n                blockTime = 0;\n            }\n            // Else if the block is the same one Daur is pushing on, and he has been pushing on it for more than 0.75\n            // seconds, moves it.\n            else if (blockTime &gt; 0.75f) {\n                // Moves block in accordance with Daur\'s direction.\n                block.move(dir);\n                // Also stuns Daur for 0.25 seconds to ensure that Daur does not buggily collide with the moving block.\n                stun();\n                screen.globalTimer.scheduleTask(new Timer.Task() {\n                    @Override\n                    public void run() {\n                        unStun();\n                    }\n                }, 0.25f);\n            }\n        }\n    }\n\n    // Checks if Daur has collided with a locked door, and if so, opens the door.\n    private void checkLockedDoor(final Interactable interactable) {\n        // Checks if the collided interactable is indeed a door.\n        if (interactable instanceof LockedDoor) {\n            // Casts interactable to a block to properly use methods.\n            LockedDoor door = (LockedDoor) interactable;\n            // If facing the door, the door is not yet unlocked, and Daur has a key, opens it and loses a key.\n            if (facingObject(door) && !door.isUnlocked() && door.canOpen()) {\n                // Opens the door.\n                door.open(dir);\n                // Removes the key based on the dungeon.\n                storage.removeKey();\n            }\n        }\n        // Checks if the collided interactable is alternatively a BOSS door.\n        if (interactable instanceof BossLockedDoor) {\n            // Same as above.\n            BossLockedDoor door = (BossLockedDoor) interactable;\n            if (facingObject(door) && !door.isUnlocked() && hasBossKey()) {\n                // Opens the door.\n                door.open(dir);\n                // Removes the key based on the dungeon.\n                removeBossKey();\n            }\n        }\n    }\n\n    // Depending on the dungeon, checks if Daur has the boss key.\n    private boolean hasBossKey() {\n        switch (storage.dungeon) {\n            case 0:\n                for (Item item : storage.questItems)\n                    if (item instanceof GreatHollowBossKey)\n                        return true;\n                return false;\n        }\n        return false;\n    }\n\n    // Depending on dungeon removes boss\n    private void removeBossKey() {\n        Item questItem = storage.questItems.get(0);\n        switch (storage.dungeon) {\n            case 0:\n                for (Item item : storage.questItems)\n                    if (item instanceof GreatHollowBossKey)\n                        questItem = item;\n        }\n        storage.questItems.remove(questItem);\n    }\n\n    // This method consumes the consumables and does the corresponding action.\n    public void eatConsumable(Consumable consumable) {\n        // Temporary integer to express the coins gained.\n        int coins = 0;\n        // Coins of different grades confer wealth to Daur.\n        if (consumable instanceof Bronze)\n            coins = 1;\n        if (consumable instanceof Copper)\n            coins = 5;\n        if (consumable instanceof Silver)\n            coins = 10;\n        if (consumable instanceof Gold)\n            coins = 20;\n        if (consumable instanceof Diamond)\n            coins = 50;\n        // If a coin is acquired plays a coin sound.\n        if (coins != 0) {\n            int random = (int) (Math.random() * 3);\n            switch (random) {\n                case 0:\n                    storage.sounds.get("coin1").play(1.0f);\n                    break;\n                case 1:\n                    storage.sounds.get("coin2").play(1.0f);\n                    break;\n                case 2:\n                    storage.sounds.get("coin3").play(1.0f);\n                    break;\n            }\n        }\n        // A heart simply gives one full heart (2 health).\n        if (consumable instanceof com.inoculates.fatesreprise.Consumables.Heart) {\n            health += 2;\n            // If the health of Daur is greater than the total health, sets his health to the total health.\n            if (health &gt; hearts.size() * 2)\n                health = hearts.size() * 2;\n            // Plays sound of a heart acquired.\n            storage.sounds.get("heart").play(1.0f);\n        }\n\n        // Updates the storage, regardless if the coins or health of the Daur has been updated. This is to get rid of\n        // unnecessary code.\n        // Coins cannot go above 999.\n        if (storage.coins + coins &lt; 999)\n            storage.setCoins(storage.coins + coins);\n        else\n            storage.setCoins(999);\n        storage.health = health;\n        // Also updates the heart UI if need be.\n        updateHearts();\n        // Removes consumable after consuming it.\n        consumable.consume();\n    }\n\n    // This adds a heart piece to Daur\'s list. If Daur has all four pieces, adds to his max health.\n    public void addHeartPiece() {\n        screen.storage.incHeartPiece();\n        // If Daur has all four pieces, adds to Daur\'s max health, and fills all his empty hearts up.\n        if (screen.storage.heartPieces &gt; 3) {\n            screen.storage.fillHeart();\n            Heart heart = new Heart(screen, screen.daurAtlases.get(1), blueBar, screen.storage.maxHealth / 2 - 1);\n            hearts.add(heart);\n            screen.UIS.add(heart);\n            fillHearts(6);\n            updateHearts();\n        }\n    }\n\n    // This creates an entirely new heart, as well as healing Daur to full.\n    public void incrementMaxHealth() {\n        storage.incMaxHealth();\n        Heart heart = new Heart(screen, screen.daurAtlases.get(1), blueBar, screen.storage.maxHealth / 2 - 1);\n        hearts.add(heart);\n        screen.UIS.add(heart);\n        fillHearts(storage.maxHealth);\n        updateHearts();\n    }\n\n    // Fills the hearts of Daur, with a time-based stagger in between to the amount specified.\n    private void fillHearts(int amount) {\n        // For every health lost, increments health in an interval of 0.1.\n        for (int i = 1; i &lt;= amount; i++)\n            heartTimer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    // If already filled, no need to fill it any further.\n                    if (health == storage.maxHealth) {\n                        heartTimer.clear();\n                        return;\n                    }\n                    // Else increments health.\n                    health ++;\n                    // Checks if the number exceeds the max health.\n                    if (health &gt; storage.maxHealth)\n                        health = storage.maxHealth;\n                    // Updates health accordingly.\n                    storage.setHealth(health);\n                    updateHearts();\n                    // Plays the refill sound.\n                    storage.sounds.get("refill").play(1.0f);\n                }\n            }, 0.2f * i);\n    }\n\n    // This large method is used to move Daur by a constant rate as opposed to short bursts. Also checks to see if Daur\n    // is talking with a character.\n    private void processKeys() {\n        // This moves Daur to the left if the left arrow key is pressed. The amount differs based on whether Daur is\n        // swimming, or simply running.\n        if (Gdx.input.isKeyPressed(storage.moveLeft) && !Gdx.input.isKeyPressed(storage.moveRight) && !stun) {\n            // If Daur is not already moving in the y direction, and is not pushing on something, sets his direction to\n            // the left.\n            if (vel.y == 0 && state != PUSHING)\n                dir = LEFT;\n\n            // If Daur is already pushing to the left, sets the direction also to the left. This is purely for the\n            // purpose of ensuring that Daur is still facing left when he stops pushing.\n            if (state == PUSHING && collisionDir == -1)\n                dir = LEFT;\n\n            // Sets Daur\'s state to running if not pushing or jumping.\n            if (state != JUMPING && state != PUSHING)\n                setState(RUNNING, false);\n\n            // This only applies if Daur is on a platform. Essentially adds the platform\'s velocity to\n            // Daur\'s own to ensure that he is moving in a proper fashion when on a platform.\n            if (vel.x != 0 && Math.signum(vel.x) == dir && pX)\n                vel.x = (1.5f + Math.abs(vel.x)) * Math.signum(dir);\n\n                // If swimming, engages the swim method to properly move Daur. This is to ensure that Daur swims with drag,\n                // and does not swim with a constant velocity.\n            else if (swimming) {\n                // Swims in the top-right direction.\n                if (Gdx.input.isKeyPressed(storage.moveUp))\n                    swim(4);\n                    // Swims in the bottom-right direction.\n                else if (Gdx.input.isKeyPressed(storage.moveDown))\n                    swim(5);\n                    // Else swims in simply the left direction.\n                else swim(0);\n            }\n            // Else if NOT swimming, simply allows Daur to move at a constant negative velocity.\n            else\n                SVX(-0.75f);\n        }\n\n        //Same as the left method, except for the right.\n        else if (Gdx.input.isKeyPressed(storage.moveRight) && !Gdx.input.isKeyPressed(storage.moveLeft) && !stun) {\n            if (vel.y == 0 && state != PUSHING)\n                dir = RIGHT;\n\n            if (state == PUSHING && collisionDir == 1)\n                dir = RIGHT;\n\n            if (state != JUMPING && state != PUSHING)\n                setState(RUNNING, false);\n\n            if (vel.x != 0 && Math.signum(vel.x) == dir && pX)\n                vel.x = (1.5f + Math.abs(vel.x)) * Math.signum(dir);\n\n            else if (swimming) {\n                if (Gdx.input.isKeyPressed(storage.moveUp))\n                    swim(6);\n                else if (Gdx.input.isKeyPressed(storage.moveDown))\n                    swim(7);\n                else swim(1);\n            }\n            else\n                SVX(0.75f);\n        }\n        else if (!stun && !pX && !swimming && ace.x == 0 && ace.y == 0)\n            vel.x = 0;\n\n        // Same but for the up direction.\n        if (Gdx.input.isKeyPressed(storage.moveUp) && !Gdx.input.isKeyPressed(storage.moveDown) && !stun) {\n            if (vel.x == 0 && state != PUSHING)\n                dir = UP;\n\n            if (state == PUSHING && collisionDir == 2)\n                dir = UP;\n\n            if (state != JUMPING && state != PUSHING)\n                setState(RUNNING, false);\n\n            if (vel.y != 0 && Math.signum(vel.y) == dir && pY)\n                vel.y = (1.5f + Math.abs(vel.y)) * Math.signum(dir);\n\n            else if (swimming) {\n                if (Gdx.input.isKeyPressed(storage.moveLeft))\n                    swim(4);\n                else if (Gdx.input.isKeyPressed(storage.moveRight))\n                    swim(5);\n                else swim(2);\n            }\n            else\n                SVY(0.75f);\n        }\n\n        // Same but for the down direction.\n        else if (Gdx.input.isKeyPressed(storage.moveDown) && !Gdx.input.isKeyPressed(storage.moveUp) && !stun) {\n            if (vel.x == 0 && state != PUSHING)\n                dir = DOWN;\n\n            if (state == PUSHING && collisionDir == -2)\n                dir = DOWN;\n\n            if (state != JUMPING && state != PUSHING)\n                setState(RUNNING, false);\n\n            if (vel.y != 0 && Math.signum(vel.y) == dir && pY)\n                vel.y = (1.5f + Math.abs(vel.y)) * Math.signum(dir);\n\n            else if (swimming) {\n                if (Gdx.input.isKeyPressed(storage.moveLeft))\n                    swim(6);\n                else if (Gdx.input.isKeyPressed(storage.moveRight))\n                    swim(7);\n                else swim(3);\n            }\n            else\n                SVY(-0.75f);\n        }\n        else if (!stun && !pY && !swimming)\n            vel.y = 0;\n\n        // If the Daur\'s velocity is not completely zero, moves him accordingly, and checks for any portals he may have\n        // stepped through while doing so.\n        if ((vel.x != 0 || vel.y != 0 || ace.x != 0 || ace.y != 0 || jumpVelocity != 0 || platformVelX != 0 ||\n                platformVelY != 0) && state != FALLING && state != DROWNING) {\n            tryMove();\n            // Only checks for teleportation if grounded.\n            if (grounded) {\n                checkAccess();\n                checkPortals();\n                checkTeleporters();\n                collidesConsumable();\n            }\n            checkTriggers();\n            // If on platform but immobile, sets state to Idle anyway.\n            if (vel.x == 0 && vel.y == 0 && onPlatform)\n                setState(IDLE, false);\n        }\n        // Else sets his state to idle.\n        else\n            setState(IDLE, false);\n\n        // If the user has pressed the talk button, and the user has not pressed the talk button recently (to ensure the\n        // user does not accidently skip dialogue or start dialogue twice).\n        if (Gdx.input.isKeyPressed(storage.talk) && !talkPressed) {\n            // Sets the button press flag to be true.\n            talkPressed = true;\n\n            // Increments the line if Daur is currently engaged in dialogue.\n            if (screen.currentTextBox != null)\n                screen.currentTextBox.incrementLine();\n                // Else if Daur is NOT engaged in dialogue, checks to see whether he passes the conditions to do so.\n            else if (!stun)\n                checkEvents();\n\n            // Resets the button press flag after 0.25 seconds.\n            screen.globalTimer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    resetPressed();\n                }\n            }, 0.25f);\n        }\n        // Checks if the user is holding down a key necessary to channel a spell.\n        checkChanneling();\n    }\n\n    // Allows Daur to swim, with a drag effect similar to Link\'s Awakening.\n    private void swim(final int direction) {\n        // Resets channeling.\n        stopChanneling();\n        // Clears drag screen.globalTimer for fresh delayed events.\n        dragTimer.clear();\n        // Sets the velocity of Daur depending on the direction he\'s facing. NOTE: the velocity components are consistent\n        // throughout. Meaning, though they might change in sign, they are of the same value.\n        switch (direction) {\n            case 0:\n                SVX(-0.75f);\n                break;\n            case 1:\n                SVX(0.75f);\n                break;\n            case 2:\n                SVY(0.75f);\n                break;\n            case 3:\n                SVY(-0.75f);\n                break;\n            case 4:\n                SVX(-0.75f);\n                SVY(0.75f);\n                break;\n            case 5:\n                SVX(-0.75f);\n                SVY(-0.75f);\n                break;\n            case 6:\n                SVX(0.75f);\n                SVY(0.75f);\n                break;\n            case 7:\n                SVX(0.75f);\n                SVY(-0.75f);\n                break;\n        }\n        // Stuns the Daur so he CANNOT move while in the midst of swimming.\n        stun();\n        // Plays the sound that indicates the player is swimming.\n        storage.sounds.get("swim").play(1.0f);\n        // Creates the drag screen.globalTimer and launches the drag screen.globalTimer so that Daur is incrementally slowed until he stops.\n        for (int i = 0; i &lt; 4; i++)\n            dragTimer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    // Reduce Daur\'s velocity over a period of time.\n                    drag(direction);\n                }\n                // Note that this increases the time each iteration, so that the drag effect occurs over a large interval.\n            }, 0.08f + 0.08f * i);\n        dragTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                // Freezes Daur so that his velocity is zero.\n                freeze();\n            }\n            // Note that this increases the time each iteration, so that the drag effect occurs over a large interval.\n        }, 0.4f);\n        dragTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                // Gets rid of the stun after a sufficient amount of time (when Daur\'s velocity is zero).\n                unStun();\n            }\n        }, 0.5f);\n        // Starts the drag timer.\n        dragTimer.start();\n    }\n\n    // Decreases Daur\'s velocity while in the water in accordance with his direction.\n    private void drag(int direction) {\n        switch (direction) {\n            // Note that the signage of the float that is being summed is the OPPOSITE of the previous method.\n            case 0:\n                vel.x /= 1.2f;\n                break;\n            case 1:\n                vel.x /= 1.2f;\n                break;\n            case 2:\n                vel.y /= 1.2f;\n                break;\n            case 3:\n                vel.y /= 1.2f;\n                break;\n            case 4:\n                vel.x /= 1.2f;\n                vel.y /= 1.2f;\n                break;\n            case 5:\n                vel.x /= 1.2f;\n                vel.y /= 1.2f;\n                break;\n            case 6:\n                vel.x /= 1.2f;\n                vel.y /= 1.2f;\n                break;\n            case 7:\n                vel.x /= 1.2f;\n                vel.y /= 1.2f;\n                break;\n        }\n    }\n\n    // Checks if the player is holding the necessary key to continue channeling the current spell.\n    private void checkChanneling() {\n        // For the shield.\n        if (shielding)\n            // If Daur is not holding the shield button, but is shielding, stops shielding and resets the spell cooldown.\n            if (!(Gdx.input.isKeyPressed(storage.slotOne) && storage.item1 instanceof ShieldItem) &&\n                    !(Gdx.input.isKeyPressed(storage.slotTwo) && storage.item2 instanceof ShieldItem) &&\n                    !(Gdx.input.isKeyPressed(storage.slotThree) && storage.item3 instanceof ShieldItem)) {\n                shielding = false;\n                screen.effects.remove(shield);\n                coolDown(1);\n                setState(IDLE, true);\n                // Halts the shield sound.\n                shieldSFX.stop();\n            }\n    }\n\n    // Stops all channeling. This occurs due to death primarily.\n    private void stopChanneling() {\n        // If shielding, stops shielding.\n        if (shielding) {\n            shielding = false;\n            screen.effects.remove(shield);\n            // Halts the shield sound.\n            shieldSFX.stop();\n        }\n        // Regardless of spell used, cools down and resets state.\n        coolDown(1);\n        if (state == CASTING)\n            setState(IDLE, true);\n    }\n\n    // Ends the jump of Daur.\n    public void endJump() {\n        // If not jumping, return.\n        if (state != JUMPING && state != JUMPATTACKING)\n            return;\n        // Else continues.\n        grounded = true;\n        setState(IDLE, true);\n        // Sets Y to shadow\'s Y, and zeroes both velocities.\n        setY(shadow.getY());\n        jumpVelocity = 0;\n        SVY(0);\n        // Removes shadow.\n        screen.effects.remove(shadow);\n        // Checks to see if Daur is now on a platform.\n        detectPlatform();\n        // Plays the landed sound if on solid ground, else the drown sound.\n        if (detectShallowWater())\n            storage.sounds.get("drown").play(1.0f);\n        else if (detectHole() == null || onPlatform)\n            storage.sounds.get("landing").play(1.0f);\n        // Checks to see if Daur is in any new tile.\n        detectConditions();\n    }\n\n    // Resets all events. This occurs if Daur dies or exits a portal. Note: Also rechecks for music transitions.\n    private void resetEvents() {\n        storage.FDstorage.resetEvents();\n    }\n\n    //Creates all the animations of Daur with their corresponding frames. Also, animations are based on direction.\n    protected void createAnimations() {\n        if (dir == UP) {\n            idle = new Animation(0.25f, FU1, FU2);\n            run = new Animation(0.25f, FU1, FU2);\n            push = new Animation(0.25f, PU1, PU2);\n            cast = new Animation(0.5f, PU1);\n            attack = new Animation(0.15f, AU1, AU2, AU2, AU2);\n            jump = new Animation(0.1f, JU1, JU2, JU3, FU2, FU2, FU2);\n            // Swim animation differs based on whether Daur is moving.\n            if (vel.x == 0 && vel.y == 0)\n                swim = new Animation(0.5f, SU1);\n            else\n                swim = new Animation(0.5f, SU2);\n        } else if (dir == DOWN) {\n            idle = new Animation(0.25f, FD1, FD2);\n            run = new Animation(0.25f, FD1, FD2);\n            push = new Animation(0.25f, PD1, PD2);\n            cast = new Animation(1, PD1);\n            attack = new Animation(0.15f, AD1, AD2, AD2, AD2);\n            jump = new Animation(0.1f, JD1, JD2, JD3, FD2, FD2, FD2);\n            if (vel.x == 0 && vel.y == 0)\n                swim = new Animation(0.5f, SD1);\n            else\n                swim = new Animation(0.5f, SD2);\n        } else if (dir == RIGHT) {\n            idle = new Animation(0.25f, FR1, FR2);\n            run = new Animation(0.25f, FR1, FR2);\n            push = new Animation(0.25f, PR1, PR2);\n            cast = new Animation(1, PR1);\n            attack = new Animation(0.15f, AR1, AR2, AR2, AR2);\n            jump = new Animation(0.1f, JR1, JR2, JR3, FR2, FR2, FR2);\n            if (vel.x == 0 && vel.y == 0)\n                swim = new Animation(0.5f, SR1);\n            else\n                swim = new Animation(0.5f, SR2);\n        } else if (dir == LEFT) {\n            idle = new Animation(0.25f, FL1, FL2);\n            run = new Animation(0.25f, FL1, FL2);\n            push = new Animation(0.25f, PL1, PL2);\n            cast = new Animation(1, PL1);\n            attack = new Animation(0.15f, AL1, AL2, AL2, AL2);\n            jump = new Animation(0.1f, JL1, JL2, JL3, FL2, FL2, FL2);\n            if (vel.x == 0 && vel.y == 0)\n                swim = new Animation(0.5f, SL1);\n            else\n                swim = new Animation(0.5f, SL2);\n        }\n        falling = new Animation(0.33333f, F1, F2, F3);\n        drowning = new Animation(1, DR);\n        itemAQ = new Animation(1, IA);\n        knockout = new Animation(1, KO);\n    }\n\n    // This method periodically sets the frame of Daur dependent on both the state and the animationTime.\n    protected void chooseSprite() {\n        Animation anim = run;\n\n        // Sets the animation of Daur depending on state.\n        if (state == IDLE)\n            anim = idle;\n        if (state == RUNNING)\n            anim = run;\n        if (state == PUSHING)\n            anim = push;\n        if (state == CASTING)\n            anim = cast;\n        if (state == ATTACKING || state == JUMPATTACKING)\n            anim = attack;\n        if (state == JUMPING)\n            anim = jump;\n        if (state == SWIMMING)\n            anim = swim;\n        if (state == FALLING)\n            anim = falling;\n        if (state == DROWNING)\n            anim = drowning;\n        if (state == ITEMAQ)\n            anim = itemAQ;\n        if (state == KNOCKOUT || state == DEAD)\n            anim = knockout;\n\n        // Sets the frame of Daur depending on how much time has passed since Daur has received a new animation.\n        setRegion(anim.getKeyFrame(animationTime, true));\n        // Sets size of the Daur sprite depending on the size of the current frame * 7/8.\n        setSize(anim.getKeyFrame(animationTime, true).getRegionWidth() * 7 / 8, anim.getKeyFrame(animationTime, true).getRegionHeight() * 7 / 8);\n    }\n\n    // Kills and removes the Daur instance from the game for a short time. Also stuns Daur to ensure the player does not\n    // move him while he is dead.\n    public void death() {\n        if (dying)\n            return;\n        // Forces idle state and then stuns/freezes Daur.\n        forceState(IDLE);\n        stun();\n        freeze();\n        stopChanneling();\n        swimming = false;\n        // Makes Daur face down.\n        setDirection(-2);\n        // Sets dying to true.\n        dying = true;\n        // Dying animation.\n        selfDestruct();\n        // Removes the UI from the rendering list temporarily.\n        screen.UIS.removeValue(blueBar, false);\n        screen.UIS.removeValue(blueBar.bar, false);\n        for (Heart heart : hearts)\n            screen.UIS.removeValue(heart, false);\n        // Causes defeat mask to fade in.\n        screen.defeatMask(true);\n        // Stops the current music.\n        storage.stopMusic();\n        // Plays defeat noise.\n        storage.sounds.get("defeat1").play();\n        // Changes Daur\'s current frame to the death frame.\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                setState(DEAD, true);\n                chooseSprite();\n                storage.sounds.get("defeat1").stop();\n                storage.sounds.get("defeat3").play();\n            }\n        }, 1.25f);\n        // Sets the screen to the death screen.\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                screen.defeat();\n                screen.defeatMask(false);\n            }\n        }, 2);\n    }\n\n    // Same as the bosses methods.\n    private void selfDestruct() {\n        for (float time = 0.1f; time &lt;= 2; time += 0.2f) {\n            screen.globalTimer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    destructing = true;\n                }\n            }, time);\n        }\n        for (float time = 0.2f; time &lt;= 2; time += 0.2f)\n            screen.globalTimer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    destructing = false;\n                }\n            }, time);\n    }\n\n    // Respawns Daur by putting him in the most recent respawn point\n    public void respawn() {\n        // Sets state to IDLE, and faces up.\n        forceState(IDLE);\n        setDirection(2);\n        // Readds the UI to the rendering list.\n        screen.UIS.add(blueBar.bar);\n        screen.UIS.add(blueBar);\n        for (Heart heart : hearts)\n            screen.UIS.add(heart);\n        // Resets all triggers and sets dying to false.\n        resetEvents();\n        // Resets all objects in the current world.\n        if (screen.getWorld(map) instanceof UpperWorld)\n            screen.setTileMap(0);\n        else if (screen.getWorld(map) instanceof UnderWorld)\n            screen.setTileMap(1);\n        else\n            screen.setTileMap(2);\n        // Sets dying to false.\n        dying = false;\n        // Restores six hearts, and moves self to the respawn point.\n        health = 6;\n        storage.setHealth(health);\n        updateHearts();\n        setPosition(respawnPoint.x, respawnPoint.y);\n        // Instantly zooms in on Daur.\n        screen.getWorld(map).setCameraInstantly();\n        // Transitions screen. After one second, unstuns Daur.\n        screen.transition(Color.BLACK);\n        // Ensures the proper music is playing.\n        screen.getWorld(map).checkMusicTransition();\n        // Detects conditions to prevent sound when moving.\n        detectConditions();\n        // Clears the shaders on the screen and sets a new one if needed.\n        screen.setCurrentMapShader(null);\n        screen.getWorld(map).checkShaderTransition();\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                unStun();\n                destructing = false;\n            }\n        }, 0.25f);\n    }\n\n    // Updates the time based on how much time has passed since the game has been previously updated.\n    protected void updateTime(float deltaTime) {\n        // Updates the animation time if not frozen.\n        if (!frozen && state != IDLE)\n            animationTime += deltaTime;\n        // Updates block time if pushing.\n        if (state == PUSHING)\n            blockTime += deltaTime;\n        else\n            blockTime = 0;\n        // Updates shield time if shielding.\n        if (shielding) {\n            // Updates the time and the corresponding alpha of the shield.\n            shieldTime += deltaTime;\n            shield.setAlpha(1 - shieldTime / 5);\n            // If Daur has been continuously shielding for more than 3 seconds, stops the shield, and sets his spells and\n            // cooldown.\n            if (shieldTime &gt; 3) {\n                shielding = false;\n                screen.effects.remove(shield);\n                coolDown(1);\n                setState(IDLE, true);\n                // Halts the shielding sound.\n                shieldSFX.stop();\n            }\n        }\n        else\n            shieldTime = 0;\n    }\n\n    // Sets the state depending ona  few conditions.\n    protected void setState(int cState, boolean override) {\n        // If the state is not set to override mode, the current state must not be required to be overriden. If the state\n        // is set to override mode the state must also have first priority over the current one.\n        if (cState == state || (!override && overrideCheck()) || (override && priorities(cState)))\n            return;\n\n        // If all checks are passed, the current state is set to the new one.\n        state = cState;\n        if (state != IDLE)\n            animationTime = 0;\n    }\n\n    // If the Daur\'s current state is ANY of the following, the new state will not be set as the current one.\n    protected boolean overrideCheck() {\n        return (state == ATTACKING || state == SWIMMING || state == FALLING || state == DROWNING || state == ITEMAQ ||\n                state == CASTING || state == KNOCKOUT || state == DEAD || state == JUMPING || state == JUMPATTACKING);\n    }\n\n    // Overrides the current state if necessary based on a matter of priorities.\n    protected boolean priorities(int cState) {\n        switch (cState) {\n            // If Daur wants to go to casting state, but is jumping, the state change is denied.\n            case CASTING:\n                if (state == JUMPING)\n                    return true;\n                break;\n        }\n        return false;\n    }\n\n    // Forces the state (does NOT check). Swimming is the sole exception.\n    public void forceState(int cState) {\n        // If swimming and the game is trying to make Daur go idle, ensures that Daur continues to swim.\n        if (cState == IDLE && swimming)\n            state = SWIMMING;\n        else\n            state = cState;\n    }\n\n    // Sets the spawn point.\n    public void setSpawnPoint(float x, float y) {\n        spawnPoint = new Point((int) x, (int) y);\n    }\n\n    // Sets the respawn point for Daur.\n    public void setRespawnPoint() {\n        respawnPoint = new Point((int) getX(), (int) getY());\n        storage.setRespawnPoint(respawnPoint.x, respawnPoint.y);\n    }\n\n    // Sets whether Daur is transitioning.\n    public void setTransitioning(boolean transitioning) {\n        this.transitioning = transitioning;\n    }\n\n    //Subtracts health from Daur.\n    public void loseHealth(int h) {\n        // If Daur is invulnerable or dying or transitioning, he cannot lose health so the method returns.\n        if (invulnerability || dying || transitioning)\n            return;\n        // Otherwise, subtract the health by the damage, which is first mitigated by the armor.\n        health -= (h - armor);\n        // Updates the health UI.\n        updateHearts();\n        // Sets Daur\'s state to invulnerable for now.\n        invulnerability = true;\n        // Flickers the sprite to indicate to the user Daur is hurt if health is greater than 0.\n        if (health &gt; 0)\n            flickerSprite();\n        // Sets Daur to a vulnerable status after one second.\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                invulnerability = false;\n            }\n        }, 1);\n        // If Daur has no more health, kills him.\n        if (health == 0) {\n            death();\n        }\n        else\n            // Plays the hurt sound for Daur.\n            storage.sounds.get("daurhurt").play(1.0f);\n    }\n\n    // This makes the sprite flicker from inverted to normal over a period of one second.\n    private void flickerSprite() {\n        // If falling returns to prevent recoloring.\n        if (state == FALLING)\n            return;\n        // Sets the sprite to inverted. This informs the game screen to draw the sprite with inverted colors.\n        inverted = true;\n        // Reverts the sprite 0.2 seconds later.\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                inverted = false;\n            }\n        }, 0.2f);\n        // Inverts the sprite 0.2 seconds later.\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                if (state == FALLING)\n                    return;\n                inverted = true;\n            }\n        }, 0.4f);\n        // Etc.\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                inverted = false;\n            }\n        }, 0.6f);\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                if (state == FALLING)\n                    return;\n                inverted = true;\n            }\n        }, 0.8f);\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                inverted = false;\n            }\n        }, 1);\n    }\n\n    // This is the method responsible for hurting Daur should he stray too close to an enemy.\n    private void collidesEnemy() {\n        // As usual, if Daur is invulnerable, nothing occurs. If in the air, the same result is achieved.\n        if (invulnerability || !grounded || transitioning)\n            return;\n\n        // Gets every character in the current screen. Note that this does NOT use the same iterator that draws Daur. This\n        // is because doing so throws an exception.\n        for (Character character : screen.drawnSprites)\n            // If the iterated character is an enemy, does further checks.\n            if (character instanceof Enemy) {\n                // Casts for method purposes.\n                Enemy enemy = (Enemy) character;\n                // If the enemy is dead, or transparent (cannot collide), returns.\n                if (enemy.isDead() || enemy.isTransparent())\n                    return;\n                for (float step = 0; step &lt; getWidth() - 1; step += layer.getTileWidth() / 16)\n                    for (float step2 = 0; step2 &lt; getHeight() - 5; step2 += layer.getTileHeight() / 16)\n                        // If Daur is inside the enemy\'s bounding rectangle, causes damage collision to Daur.\n                        if (character.getBoundingRectangle().contains(getX() + 1 + step, getY() + 1 + step2))\n                            damageCollision(enemy);\n            }\n    }\n\n    // Causes damage to Daur, as well as jettisoning him away from the enemy.\n    public void damageCollision(Sprite sprite) {\n        // If invulnerable or falling or drowning or dying returns the method to prevent any damage.\n        if (invulnerability || state == FALLING || state == DROWNING || dying)\n            return;\n        // If the damage collision was a result of a projectile, does not get hurt.\n        if (sprite instanceof Projectile && !grounded)\n            return;\n        // If the damage collision was due to an enemy that is grounded, but Daur isn\'t, ignores damage.\n        if (sprite instanceof Enemy && !grounded && ((Enemy) sprite).isGrounded())\n            return;\n        // Ends jump if necessary.\n        endJump();\n        // Gets the angle between Daur and the sprite. Note that the angle is from Daur\'s perspective.\n        float angle = (float) Math.atan2(getY() - sprite.getY(), getX() - sprite.getX());\n        // Sets the velocity of Daur to the cosine and sine of the angle, causing him to fly away from the sprite.\n        vel.x = (float) (4 * Math.cos(angle));\n        vel.y = (float) (4 * Math.sin(angle));\n        // Stuns Daur so the player cannot interrupt the collision.\n        stun();\n        // Lose one health.\n        loseHealth(1);\n        // After 0.1 seconds, unstuns Daur and stops his movement.\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                // Note that the unstun only occurs if Daur is NOT falling.\n                if (state != FALLING && state != DROWNING) {\n                    vel.x = 0;\n                    vel.y = 0;\n                    unStun();\n                }\n            }\n        }, 0.1f);\n    }\n\n    // Depending on the health of Daur, fills up the hearts in the UI bar.\n    private void updateHearts() {\n        // Empties all hearts to begin with by setting their state to two.\n        for (int i = 0; i &lt; hearts.size(); i++)\n            hearts.get(i).setState(2);\n\n        // Since each heart has two parts, fills all hearts up till half the health value. For example, a health value\n        // of eight would have four hearts.\n        for (int i = 0; i &lt; health / 2; i++)\n            hearts.get(i).setState(0);\n\n        // If the health value is an odd number, fills the last heart only half way.\n        if (health % 2 == 1)\n            hearts.get(health / 2).setState(1);\n\n        storage.setHealth(health);\n    }\n\n    // Checks if Daur\'s bounding rectangle intersects with any other character\'s, and treats this as a collision if so.\n    protected boolean collidesCharacter() {\n        if (swimming) {\n            for (Character character : screen.drawnSprites)\n                for (float step = 0; step &lt; getWidth() - 5; step += layer.getTileWidth() / 16)\n                    for (float step2 = 0; step2 &lt; getHeight() / 2; step2 += layer.getTileHeight() / 16)\n                        if (character.getBoundingRectangle().contains(getX() + 2.5f + step, getY() + 1 + step2) && !character.equals(this) && !(character instanceof Enemy))\n                            return true;\n        }\n        else {\n            for (Character character : screen.drawnSprites)\n                for (float step = 0; step &lt; getWidth() - 2; step += layer.getTileWidth() / 16)\n                    for (float step2 = 0; step2 &lt; getHeight() - 5; step2 += layer.getTileHeight() / 16)\n                        if (character.getBoundingRectangle().contains(getX() + 2 + step, getY() + 1 + step2) && !character.equals(this) && !(character instanceof Enemy))\n                            return true;\n        }\n        return false;\n    }\n\n    // Checks for every type of interactable dialogue.\n    private void checkEvents() {\n        // Breaks channeling immediately.\n        stopChanneling();\n        // Checks all interactable dialogue.\n        checkTalk();\n        checkSign();\n        checkBooks();\n        checkChests();\n        checkKeyHoles();\n    }\n\n    // Checks if Daur is past any trigger checks. If so, launches the corresponding trigger.\n    private void checkTriggers() {\n        com.inoculates.fatesreprise.Worlds.World world;\n        // If Daur is in the overworld.\n        if (screen.map == screen.world1.getMap())\n            world = screen.world1;\n            // If Daur is in the underword.\n        else if (screen.map == screen.world2.getMap())\n            world = screen.world2;\n            // If Daur is in a house.\n        else\n            world = screen.world3;\n\n        // Iterates over every trigger. Note that the method is different for if Daur is grounded or not.\n        if (grounded)\n            for (int i = 0; i &lt; world.getTriggerSize(); i++)\n                // Gets every point in the Daur sprite from left to right.\n                for (float x = getX(); x &lt;= getX() + getWidth(); x++) {\n                    float y;\n                    // If the trigger is to Daur\'s bottom, set\'s Daur\'s y point as his bottom-most point.\n                    if (world.getTrigger(i).getRectangle().getY() &lt; getY())\n                        y = getY();\n                        // Otherwise sets Daur\'s y point as his top-most point.\n                    else\n                        y = getHeight();\n                    // If any trigger contains Daur\'s x point and y point, launches the trigger.\n                    if (world.getTrigger(i).getRectangle().contains(x, y))\n                        world.trigger(world.getTrigger(i));\n                }\n        else\n            for (int i = 0; i &lt; world.getTriggerSize(); i++)\n                // Gets every point in the Daur sprite from left to right.\n                for (float x = shadow.getX(); x &lt;= shadow.getX() + shadow.getWidth(); x++) {\n                    float y;\n                    // If the trigger is to Daur\'s bottom, set\'s Daur\'s y point as his bottom-most point.\n                    if (world.getTrigger(i).getRectangle().getY() &lt; getY())\n                        y = shadow.getY();\n                        // Otherwise sets Daur\'s y point as his top-most point.\n                    else\n                        y = shadow.getHeight();\n                    // If any trigger contains Daur\'s x point and y point, launches the trigger.\n                    if (world.getTrigger(i).getRectangle().contains(x, y))\n                        world.trigger(world.getTrigger(i));\n                }\n    }\n\n    // Checks if Daur is currently in any portal, and transports him if so.\n    private void checkPortals() {\n        // If Daur is in the over world and is transported to a house.\n        if (screen.map == screen.world1.getMap())\n            // Iterates over every portal.\n            for (int i = 0; i &lt; screen.world1.getPortalSize(); i++)\n                // Gets every point in the Daur sprite from left to right.\n                for (float x = getX(); x &lt;= getX() + getWidth(); x++) {\n                    float y;\n                    // If the portal is to Daur\'s bottom, set\'s Daur\'s y point as his bottom-most point.\n                    if (screen.world1.getPortal(i, true).getY() &lt; getY())\n                        y = getY();\n                        // Otherwise sets Daur\'s y point as his top-most point.\n                    else\n                        y = getHeight();\n                    // If any portal contains Daur\'s x point and y point, transports him.\n                    if (screen.world1.getPortal(i, true).contains(x, y)) {\n                        // Sets the new tile map to the houses one.\n                        screen.setTileMap(2);\n                        // Sets Daur\'s map to the new houses map.\n                        setMap(screen.map);\n\n                        // Sets the new position of Daur into the portal\'s position.\n                        setX(screen.world3.getPortal(i, false).getX());\n                        setY(screen.world3.getPortal(i, false).getY());\n                        // Sets the new respawn point to that same portal\'s position.\n                        respawnPoint = new Point((int) getX(), (int) getY());\n                        storage.setRespawnPoint(respawnPoint.x, respawnPoint.y);\n\n                        // Resets all events.\n                        resetEvents();\n                        // Sets the mask to black to allow for a transition.\n                        screen.transition(Color.BLACK);\n                        // Sets the camera position quickly.\n                        screen.getWorld(map).setCameraInstantly();\n                        // Plays the enter/exit sound.\n                        storage.sounds.get("enterstairs").play(1.0f);\n                        // Makes the player vulnerable and stunned, in case he wasn\'t before.\n                        unStun();\n                        invulnerability = false;\n                        inverted = false;\n                        // Stops channeling.\n                        stopChanneling();\n                        // Checks for a music transition.\n                        screen.getWorld(map).checkMusicTransition();\n                    }\n                }\n\n        // Same but from houses to overworld.\n        if (screen.map == screen.world3.getMap())\n            for (int i = 0; i &lt; screen.world3.getPortalSize(); i++)\n                for (float x = getX(); x &lt;= getX() + getWidth(); x++) {\n                    float y;\n                    if (screen.world3.getPortal(i, true).getY() &lt; getY())\n                        y = getY();\n                    else\n                        y = getHeight();\n                    if (screen.world3.getPortal(i, true).contains(x, y)) {\n                        screen.setTileMap(0);\n                        setMap(screen.map);\n\n                        setX(screen.world1.getPortal(i, false).getX());\n                        setY(screen.world1.getPortal(i, false).getY());\n                        respawnPoint = new Point((int) getX(), (int) getY());\n                        storage.setRespawnPoint(respawnPoint.x, respawnPoint.y);\n\n                        resetEvents();\n                        screen.transition(Color.BLACK);\n                        screen.getWorld(map).setCameraInstantly();\n                        // Plays the enter/exit sound.\n                        storage.sounds.get("enterstairs").play(1.0f);\n                        // Makes the player vulnerable and stunned, in case he wasn\'t before.\n                        unStun();\n                        invulnerability = false;\n                        inverted = false;\n                        // Stops channeling.\n                        stopChanneling();\n                        // Checks for a music transition.\n                        screen.getWorld(map).checkMusicTransition();\n                    }\n                }\n    }\n\n    // Same but for underworld to overworld and vice versa.\n    private void checkAccess() {\n        if (screen.map == screen.world1.getMap())\n            for (int i = 0; i &lt; screen.world1.getAccessSize(); i++)\n                for (float x = getX(); x &lt;= getX() + getWidth(); x++)\n                    if (screen.world1.getAccess(i, true).contains(x, getY())) {\n                        screen.setTileMap(1);\n                        setMap(screen.map);\n\n                        setX((int) (screen.world2.getAccess(i, false).getX() / layer.getTileWidth()) * layer.getTileWidth());\n                        setY((int) (screen.world2.getAccess(i, false).getY() / layer.getTileHeight()) * layer.getTileHeight());\n                        respawnPoint = new Point((int) getX(), (int) getY());\n                        storage.setRespawnPoint(respawnPoint.x, respawnPoint.y);\n\n                        resetEvents();\n                        screen.transition(Color.BLACK);\n                        screen.getWorld(map).setCameraInstantly();\n                        // Plays the enter/exit sound.\n                        storage.sounds.get("enterstairs").play(1.0f);\n                        // Makes the player vulnerable and stunned, in case he wasn\'t before.\n                        unStun();\n                        invulnerability = false;\n                        inverted = false;\n                        // Stops channeling.\n                        stopChanneling();\n                        // Checks for a music transition.\n                        screen.getWorld(map).checkMusicTransition();\n                    }\n\n        if (screen.map == screen.world2.getMap()) {\n            // Checks for exits IN ADDITION to stairs.\n            // Checks for exits first.\n            for (int i = 0; i &lt; screen.world2.getAccessSize(); i++)\n                for (float x = getX(); x &lt;= getX() + getWidth(); x++)\n                    if (screen.world2.getAccess(i, true).contains(x, getY())) {\n                        screen.setTileMap(0);\n                        setMap(screen.map);\n\n                        setX((int) (screen.world1.getAccess(i, false).getX() / layer.getTileWidth()) * layer.getTileWidth());\n                        setY((int) (screen.world1.getAccess(i, false).getY() / layer.getTileHeight()) * layer.getTileHeight());\n                        respawnPoint = new Point((int) getX(), (int) getY());\n                        storage.setRespawnPoint(respawnPoint.x, respawnPoint.y);\n\n                        resetEvents();\n                        screen.transition(Color.BLACK);\n                        screen.getWorld(map).setCameraInstantly();\n                        // Plays the enter/exit sound.\n                        storage.sounds.get("enterstairs").play(1.0f);\n                        // Makes the player vulnerable and stunned, in case he wasn\'t before.\n                        unStun();\n                        invulnerability = false;\n                        inverted = false;\n                        // Stops channeling.\n                        stopChanneling();\n                        // Checks for a music transition.\n                        screen.getWorld(map).checkMusicTransition();\n                    }\n            // Note that this stairs portion is only for intra-world purposes. Specifically, this chunk of code refers\n            // to Daur going upstairs.\n            for (int i = 0; i &lt; screen.world2.getStairsSize(); i++)\n                for (float x = getX(); x &lt;= getX() + getWidth(); x++)\n                    if (screen.world2.getStairs(i, true).contains(x, getCY())) {\n                        setX((int) (screen.world2.getStairs(i, false).getX() / layer.getTileWidth()) * layer.getTileWidth());\n                        setY((int) (screen.world2.getStairs(i, false).getY() / layer.getTileHeight()) * layer.getTileHeight() - layer.getTileHeight());\n\n                        screen.transition(Color.BLACK);\n                        screen.getWorld(map).setCameraInstantly();\n                        storage.setLevel(1);\n                        // Plays the enter/exit sound.\n                        storage.sounds.get("enterstairs").play(1.0f);\n                        // Makes the player vulnerable and stunned, in case he wasn\'t before.\n                        unStun();\n                        invulnerability = false;\n                        inverted = false;\n                        // Stops channeling.\n                        stopChanneling();\n                        // Checks for a music transition.\n                        screen.getWorld(map).checkMusicTransition();\n                    }\n            // Same but for downstairs.\n            for (int i = 0; i &lt; screen.world2.getStairsSize(); i++)\n                for (float x = getX(); x &lt;= getX() + getWidth(); x++)\n                    if (screen.world2.getStairs(i, false).contains(x, getCY())) {\n                        setX((int) (screen.world2.getStairs(i, true).getX() / layer.getTileWidth()) * layer.getTileWidth());\n                        setY((int) (screen.world2.getStairs(i, true).getY() / layer.getTileHeight()) * layer.getTileHeight() - layer.getTileHeight());\n\n                        screen.transition(Color.BLACK);\n                        screen.getWorld(map).setCameraInstantly();\n                        storage.setLevel(-1);\n                        // Plays the enter/exit sound.\n                        storage.sounds.get("enterstairs").play(1.0f);\n                        // Makes the player vulnerable and stunned, in case he wasn\'t before.\n                        unStun();\n                        invulnerability = false;\n                        inverted = false;\n                        // Stops channeling.\n                        stopChanneling();\n                        // Checks for a music transition.\n                        screen.getWorld(map).checkMusicTransition();\n                    }\n\n        }\n    }\n\n    // Checks if Daur is currently in a teleporter. If so, transports to the other teleporter.\n    private void checkTeleporters() {\n        if (screen.map == screen.world2.getMap()) {\n            for (int i = 0; i &lt; screen.world2.getTeleporterSize(); i++)\n                for (float x = getX(); x &lt;= getX() + getWidth(); x++) {\n                    // For Teleporter Ones.\n                    if (screen.world2.getTeleporter(i, true).contains(x, getCY())) {\n                        // Moves Daur to the corresponding teleporter.\n                        setX((int) (screen.world2.getTeleporter(i, false).getX() / layer.getTileWidth()) *\n                                layer.getTileWidth() + layer.getTileWidth() / 2 - getWidth() / 2);\n                        setY((int) (screen.world2.getTeleporter(i, false).getY() / layer.getTileHeight()) *\n                                layer.getTileHeight() - 24);\n\n                        screen.transition(Color.WHITE);\n                        screen.getWorld(map).setCameraInstantly();\n                        // Plays the teleporter sound.\n                        storage.sounds.get("teleport").play(1.0f);\n                        // Makes the player vulnerable and stunned, in case he wasn\'t before.\n                        unStun();\n                        invulnerability = false;\n                        inverted = false;\n                        // Stops channeling.\n                        stopChanneling();\n                        // Checks for a music transition.\n                        screen.getWorld(map).checkMusicTransition();\n                    }\n                    // For Teleporter Twos.\n                    if (screen.world2.getTeleporter(i, false).contains(x, getCY())) {\n                        // Moves Daur to the corresponding teleporter.\n                        setX((int) (screen.world2.getTeleporter(i, true).getX() / layer.getTileWidth()) *\n                                layer.getTileWidth() + layer.getTileWidth() / 2 - getWidth() / 2);\n                        setY((int) (screen.world2.getTeleporter(i, true).getY() / layer.getTileHeight()) *\n                                layer.getTileHeight() - 24);\n\n                        screen.transition(Color.WHITE);\n                        screen.getWorld(map).setCameraInstantly();\n                        // Plays the teleporter sound.\n                        storage.sounds.get("teleport").play(1.0f);\n                        // Makes the player vulnerable and stunned, in case he wasn\'t before.\n                        unStun();\n                        invulnerability = false;\n                        inverted = false;\n                        // Stops channeling.\n                        stopChanneling();\n                        // Checks for a music transition.\n                        screen.getWorld(map).checkMusicTransition();\n                    }\n                }\n        }\n    }\n\n    // Checks if Daur is currently in a fog spot, meaning the area around him becomes darker.\n    private void checkFog() {\n        // If the screen is transitioning, returns.\n        if (transitioning)\n            return;\n\n        // If in the overworld.\n        if (screen.map == screen.world1.getMap()) {\n            // Gets all fog objects.\n            for (int i = 0; i &lt; screen.world1.getFogSize(true); i++)\n                for (float x = getX(); x &lt;= getX() + getWidth(); x++)\n                    for (float y = getY(); y &lt;= getY() + getHeight(); y++)\n                        // If the fog object contains Daur, fogs the area around Daur, making it darker.\n                        if (screen.world1.getFog(i, true).contains(x, y)) {\n                            screen.mask.setColor(Color.BLACK);\n                            // Sets the alpha in accordance with the current fog amount.\n                            screen.mask.setAlpha(screen.world1.getFogAmount(i));\n                        }\n\n            // Gets all fog OUT objects.\n            for (int i = 0; i &lt; screen.world1.getFogSize(false); i++)\n                for (float x = getX(); x &lt;= getX() + getWidth(); x++)\n                    for (float y = getY(); y &lt;= getY() + getHeight(); y++)\n                        // If the fog out object contains Daur, erases all fog from the area around Daur.\n                        if (screen.world1.getFog(i, false).contains(x, y))\n                            screen.mask.setAlpha(0);\n        }\n\n        // Same but for the underworld and houses tile map.\n        if (screen.map == screen.world2.getMap()) {\n            for (int i = 0; i &lt; screen.world2.getFogSize(true); i++)\n                for (float x = getX(); x &lt;= getX() + getWidth(); x++)\n                    for (float y = getY(); y &lt;= getY() + getHeight(); y++)\n                        if (screen.world2.getFog(i, true).contains(x, y)) {\n                            screen.mask.setColor(Color.BLACK);\n                            screen.mask.setAlpha(screen.world2.getFogAmount(i));\n                        }\n\n            for (int i = 0; i &lt; screen.world2.getFogSize(false); i++)\n                for (float x = getX(); x &lt;= getX() + getWidth(); x++)\n                    for (float y = getY(); y &lt;= getY() + getHeight(); y++)\n                        if (screen.world2.getFog(i, false).contains(x, y)) {\n                            screen.mask.setAlpha(0);\n                        }\n        }\n\n        if (screen.map == screen.world3.getMap()) {\n            for (int i = 0; i &lt; screen.world3.getFogSize(true); i++)\n                for (float x = getX(); x &lt;= getX() + getWidth(); x++)\n                    for (float y = getY(); y &lt;= getY() + getHeight(); y++)\n                        if (screen.world3.getFog(i, true).contains(x, y)) {\n                            screen.mask.setColor(Color.BLACK);\n                            screen.mask.setAlpha(screen.world3.getFogAmount(i));\n                        }\n\n            for (int i = 0; i &lt; screen.world3.getFogSize(false); i++)\n                for (float x = getX(); x &lt;= getX() + getWidth(); x++)\n                    for (float y = getY(); y &lt;= getY() + getHeight(); y++)\n                        if (screen.world3.getFog(i, false).contains(x, y)) {\n                            screen.mask.setAlpha(0);\n                        }\n        }\n    }\n\n    // Checks if Daur is initiating dialogue with another character.\n    private void checkTalk() {\n        // Event that causes the dialogue.\n        Event event;\n\n        // Checks every character in an iterator.\n        for (Character character : screen.drawnSprites) {\n            // If character is of the villager class.\n            if (character instanceof Villager) {\n                // Casts character.\n                Villager villager = (Villager) character;\n                // If Daur is both facing the character, and is one tile below him, initiates the dialogue.\n                if (facingObject(villager) && inRange(villager))\n                    event = new VillagerEvents(map, screen, storage, villager);\n            }\n            // Checks if the character is the fairy queen.\n            if (character instanceof FairyQueen && facingObject(character) && inRange(character))\n                event = new FairyEvent(map, screen, storage);\n\n            // Checks if the character is the first sage.\n            if (character instanceof Druni && facingObject(character) && inRange(character))\n                event = new DruniMeeting(map, screen, (Druni) character);\n        }\n\n        // Checks if Daur is trying to talk to a character over the counter.\n        for (Rectangle counter : screen.world3.counters)\n            // If the counter rectangle contains Daur.\n            if (counter.contains(getX() + getWidth() / 2, getY() + layer.getTileHeight()) && dir == 2) {\n                switch (screen.world3.counters.indexOf(counter)) {\n                    // Depending on the type of counter, initiates a dialogue for the corresponding character.\n                    case 0:\n                        for (Character character : screen.drawnSprites) {\n                            if (character instanceof Villager) {\n                                Villager villager = (Villager) character;\n                                if (villager.getVillager() == 20)\n                                    event = new VillagerEvents(map, screen, storage, villager);\n                            }\n                        }\n                        break;\n                    case 1:\n                        for (Character character : screen.drawnSprites) {\n                            if (character instanceof Villager) {\n                                Villager villager = (Villager) character;\n                                if (villager.getVillager() == 21)\n                                    event = new VillagerEvents(map, screen, storage, villager);\n                            }\n                        }\n                        break;\n                    case 2:\n                        for (Character character : screen.drawnSprites) {\n                            if (character instanceof Villager) {\n                                Villager villager = (Villager) character;\n                                if (villager.getVillager() == 22)\n                                    event = new VillagerEvents(map, screen, storage, villager);\n                            }\n                        }\n                        break;\n                    case 3:\n                        for (Character character : screen.drawnSprites) {\n                            if (character instanceof Villager) {\n                                Villager villager = (Villager) character;\n                                if (villager.getVillager() == 23)\n                                    event = new VillagerEvents(map, screen, storage, villager);\n                            }\n                        }\n                        break;\n                    case 4:\n                        for (Character character : screen.drawnSprites) {\n                            if (character instanceof Villager) {\n                                Villager villager = (Villager) character;\n                                if (villager.getVillager() == 24)\n                                    event = new VillagerEvents(map, screen, storage, villager);\n                            }\n                        }\n                        break;\n                }\n            }\n    }\n\n    // This method fires when Daur is knocked down by something (This could be through death or incapacitation).\n    public void knockOut() {\n        // Sets state to knockout, then freezes and stuns Daur (to prevent movement).\n        setState(KNOCKOUT, true);\n        freeze();\n        stun();\n        stopChanneling();\n\n        // Unstuns after 0.75 seconds of being KO\'d.\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                setState(IDLE, true);\n                unStun();\n            }\n        }, 0.75f);\n    }\n\n    // Same as some of the previous methods but for signs.\n    private void checkSign() {\n        SignEvents events;\n        int value = -1;\n        float tileDX = (int) ((getX() + getWidth() / 2) / layer.getTileWidth()) * layer.getTileWidth();\n        float tileDY = (int) (getY() / layer.getTileHeight()) * layer.getTileHeight() + layer.getTileHeight();\n\n        TiledMapTileLayer.Cell cell = layer.getCell((int) (tileDX / layer.getTileWidth()), (int) (tileDY / layer.getTileHeight()));\n\n        if (map == screen.world1.getMap())\n            for (MapObject object : map.getLayers().get("Signs").getObjects())\n                if (object instanceof RectangleMapObject) {\n                    RectangleMapObject rectObject = (RectangleMapObject) object;\n                    Rectangle rect = rectObject.getRectangle();\n                    float x = (int) (rect.getX() / layer.getTileWidth()) * layer.getTileWidth();\n                    float y = (int) (rect.getY() / layer.getTileHeight()) * layer.getTileHeight();\n\n                    // Sets the value of the sign, which tells the game which dialogue to use for the sign.\n                    if (x == tileDX && y == tileDY)\n                        value = Integer.parseInt(rectObject.getProperties().get("sign").toString());\n                }\n\n        // If there is a sign existing, creates a dialogue based on the value obtained.\n        if (value != -1 && dir == UP)\n            events = new SignEvents(map, screen, value);\n    }\n\n    // Nearly the same method as the last, except for books.\n    private void checkBooks() {\n        BookEvents events;\n        int value = -1;\n        float tileDX = (int) ((getX() + getWidth() / 2) / layer.getTileWidth()) * layer.getTileWidth();\n        float tileDY = (int) (getY() / layer.getTileHeight()) * layer.getTileHeight() + layer.getTileHeight();\n\n        TiledMapTileLayer.Cell cell = layer.getCell((int) (tileDX / layer.getTileWidth()), (int) (tileDY / layer.getTileHeight()));\n\n        if (map == screen.world3.getMap())\n            for (MapObject object : map.getLayers().get("Books").getObjects())\n                if (object instanceof RectangleMapObject) {\n                    RectangleMapObject rectObject = (RectangleMapObject) object;\n                    Rectangle rect = rectObject.getRectangle();\n                    float x = (int) (rect.getX() / layer.getTileWidth()) * layer.getTileWidth();\n                    float y = (int) (rect.getY() / layer.getTileHeight()) * layer.getTileHeight();\n\n                    if (x == tileDX && y == tileDY)\n                        value = Integer.parseInt(rectObject.getProperties().get("book").toString());\n                }\n\n        if (value != -1 && dir == UP)\n            events = new BookEvents(map, screen, value);\n    }\n\n    // Checks the item in the current slot, and executes a method based on that item.\n    public void checkItem(int input) {\n        // If Daur is stunned, he is unable to use any items.\n        if (stun)\n            return;\n        Item item = null;\n        // Sets the item depending on the input button clicked (whether the user pressed the 1st item button, 2nd, or\n        // 3rd.\n        if (input == storage.slotOne)\n            item = storage.item1;\n        else if (input == storage.slotTwo)\n            item = storage.item2;\n        else if (input == storage.slotThree)\n            item = storage.item3;\n\n        // If the user has used a sword item.\n        if (item instanceof BasicSwordItem && !attacking)\n            swordAttack();\n        // If the user has cast a spell.\n        castSpell(item);\n    }\n\n    // Checks for any interactions with chests.\n    private void checkChests() {\n        // Checks every character in an iterator.\n        for (Interactable interactable : screen.interactables) {\n            // If character is of the villager class.\n            if (interactable instanceof Chest) {\n                // Casts character.\n                Chest chest = (Chest) interactable;\n                // If Daur is both facing the character, and is one tile below him, initiates the dialogue.\n                if (facingObject(chest) && inRange(chest))\n                    chest.open();\n            }\n        }\n    }\n\n    // Similar to the book and sign methods.\n    private void checkKeyHoles() {\n        Event keyHoleEvent;\n        int value = -1;\n        float tileDX = (int) ((getX() + getWidth() / 2) / layer.getTileWidth()) * layer.getTileWidth();\n        float tileDY = (int) (getY() / layer.getTileHeight()) * layer.getTileHeight() + layer.getTileHeight();\n\n        TiledMapTileLayer.Cell cell = layer.getCell((int) (tileDX / layer.getTileWidth()), (int) (tileDY / layer.getTileHeight()));\n\n        if (map == screen.world1.getMap())\n            for (MapObject object : map.getLayers().get("Interactables").getObjects())\n                if (object instanceof RectangleMapObject) {\n                    RectangleMapObject rectObject = (RectangleMapObject) object;\n                    Rectangle rect = rectObject.getRectangle();\n                    float x = (int) (rect.getX() / layer.getTileWidth()) * layer.getTileWidth();\n                    float y = (int) (rect.getY() / layer.getTileHeight()) * layer.getTileHeight();\n\n                    if (x == tileDX && y == tileDY)\n                        value = Integer.parseInt(rectObject.getProperties().get("keyhole").toString());\n                }\n\n        // Launches the keyhole event based on the value of the keyhole rectangle map object.\n        if (value != -1 && dir == UP) {\n            switch (value) {\n                // Great Hollow Keyhole. Launches Great Hollow Opening event.\n                case 0:\n                    for (Item item : storage.questItems)\n                        if (item instanceof GreatHollowKey) {\n                            // Removes key and starts event.\n                            keyHoleEvent = new GreatHollowOpening(screen.map, screen, screen.storage);\n                            storage.questItems.remove(item);\n                            // Advances story; sets main quest to 2.\n                            storage.setMainQuestStage();\n                            return;\n                        }\n                    break;\n            }\n        }\n    }\n\n    private void castSpell(Item item) {\n        // If not on the ground, cooling down, or channeling already, returns.\n        if (!grounded || spellCooldown || state == CASTING)\n            return;\n        // Checks what spell is being used based on the item. In this instance, Daur is casting concussive shot.\n        if (item instanceof ConcussiveShotItem)\n            // Launches the appropriate method.\n            launchShot();\n        else if (item instanceof ShieldItem)\n            shield();\n        else if (item instanceof WindSickleItem)\n            windSickles();\n        else if (item instanceof ZephyrsWispItem)\n            jump();\n        // Note that if the item is a minor health potion, returns to avoid setting state to casting.\n        else if (item instanceof MinorHealthPotionItem) {\n            restoreHealth();\n            return;\n        }\n        else\n            return;\n\n        // Sets the state to casting.\n        setState(CASTING, true);\n    }\n\n    // Method responsible for the sword attack for Daur.\n    private void swordAttack() {\n        // Plays a random sword slash sound.\n        int random = (int) (Math.random() * 4);\n        switch (random) {\n            case 0:\n                storage.sounds.get("swordslash1").play(1.0f);\n                break;\n            case 1:\n                storage.sounds.get("swordslash2").play(1.0f);\n                break;\n            case 2:\n                storage.sounds.get("swordslash3").play(1.0f);\n                break;\n            case 3:\n                storage.sounds.get("swordslash4").play(1.0f);\n                break;\n        }\n        // Sets Daur\'s state to attacking if grounded.\n        if (grounded) {\n            setState(ATTACKING, true);\n            // Makes Daur immobile and uninteractable for a while if grounded.\n            vel.y = 0;\n            vel.x = 0;\n            stun();\n        }\n        // Otherwise state is set to jump attacking.\n        else\n            setState(JUMPATTACKING, true);\n        // Breaks all channeling.\n        stopChanneling();\n        // Creates the actual sword itself on the screen.\n        spawnSword();\n        // Informs the game Daur is attacking.\n        attacking = true;\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                // After 0.16875 seconds, sets Daur\'s state idle, unstuns him, informs the game he is no longer attacking\n                // and removes the sword. The state changes only if Daur is still attacking.\n                if (state == ATTACKING) {\n                    setState(IDLE, true);\n                    unStun();\n                }\n                // If jump attacking, sets state to jumping.\n                if (state == JUMPATTACKING)\n                    setState(JUMPING, true);\n                // Sets attacking to false.\n                attacking = false;\n            }\n        }, 0.16875f);\n    }\n\n    // Creates the sword, setting its direction based on Daur\'s direction.\n    private void spawnSword() {\n        int direction = -1;\n        switch (dir) {\n            // Sets the sword\'s direction (0 being to the top, 1 to the bottom, 2 to the right, and 3 to the bottom.\n            case 2:\n                direction = 0;\n                break;\n            case -2:\n                direction = 1;\n                break;\n            case 1:\n                direction = 2;\n                break;\n            case -1:\n                direction = 3;\n                break;\n        }\n        // Creates the sword itself with the direction.\n        sword = new BasicSword(screen, map, atlas, this, direction);\n    }\n\n    // Launches the concussive shot.\n    private void launchShot() {\n        // Causes Daur\'s spells to go on cooldown, renders him immobile, and stuns him.\n        vel.x = 0;\n        vel.y = 0;\n        stun();\n        coolDown(1.2f);\n\n        com.inoculates.fatesreprise.Spells.ConcussiveShot cShot = null;\n        // Sets the concussive shot\'s direction depending on Daur\'s direction.\n        if (dir == RIGHT)\n            cShot = new com.inoculates.fatesreprise.Spells.ConcussiveShot(screen, map, screen.daurAtlases.get(4), this, 0);\n        if (dir == UP)\n            cShot = new com.inoculates.fatesreprise.Spells.ConcussiveShot(screen, map, screen.daurAtlases.get(4), this, 1);\n        if (dir == LEFT)\n            cShot = new com.inoculates.fatesreprise.Spells.ConcussiveShot(screen, map, screen.daurAtlases.get(4), this, 2);\n        if (dir == DOWN)\n            cShot = new com.inoculates.fatesreprise.Spells.ConcussiveShot(screen, map, screen.daurAtlases.get(4), this, 3);\n        // Offsets the concussive shot by a certain amount depending also on direction.\n        cShot.setInitialPosition(dir);\n        // Plays the launch sound.\n        screen.storage.sounds.get("launch1").play(1.0f);\n\n        // Unstuns Daur after 0.5 seconds.\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                setState(IDLE, true);\n                unStun();\n            }\n        }, 0.5f);\n    }\n\n    // Creates a shield that prevents enemies from getting too close and shields Daur from all projectiles.\n    private void shield() {\n        shielding = true;\n        shield = new Shield(screen, map, screen.daurAtlases.get(3), this);\n        screen.effects.add(shield);\n        // Starts the shield loop.\n        shieldSFX.loop(0.2f);\n    }\n\n    // Launches two wind sickles which converge on one point, slicing anything in their paths.\n    private void windSickles() {\n        vel.x = 0;\n        vel.y = 0;\n        stun();\n        coolDown(1.75f);\n\n        WindSickle sickle = new WindSickle(screen, map, screen.daurAtlases.get(4), this, dir, true);\n        screen.spells.add(sickle);\n        WindSickle sickle2 = new WindSickle(screen, map, screen.daurAtlases.get(4), this, dir, false);\n        screen.spells.add(sickle2);\n\n        // Unstuns Daur after 0.5 seconds.\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                setState(IDLE, true);\n                unStun();\n            }\n        }, 0.5f);\n    }\n\n    // Jumps, avoiding collision with grounded enemies, as well as any holes or deep water for 0.85 seconds.\n    private void jump() {\n        // If already in the air, cannot go in the air again.\n        if (!grounded)\n            return;\n        // Breaks channeling.\n        stopChanneling();\n        // Removes slow effect if slowed.\n        if (slowed) {\n            slowed = false;\n            resetModifier(0.35f, 0.35f);\n        }\n        // Starts cooldown.\n        coolDown(0.2f);\n        // Sets state to jumping.\n        setState(JUMPING, true);\n        // Sets grounded to false to avoid any collisions with enemies or holes.\n        grounded = false;\n        // Sets Daur\'s velocity upwards and acceleration downwards so it appears as though he is jumping.\n        jumpVelocity = 2;\n        // Plays the jump sound.\n        storage.sounds.get("jump").play(1.0f);\n        // Adds the shadow below Daur, so that it appears as though he is in the air.\n        shadow.setPosition(getCX() - shadow.getWidth() / 2, getY());\n        screen.effects.add(shadow);\n    }\n\n    // Restores six health (three hearts).\n    private void restoreHealth() {\n        // Increases health by six and updates accordingly.\n        fillHearts(6);\n        // Removes the potion from the game, as it is consumed.\n        if (storage.item1 instanceof MinorHealthPotionItem)\n            storage.setItem1(null);\n        if (storage.item2 instanceof MinorHealthPotionItem)\n            storage.setItem2(null);\n        if (storage.item3 instanceof MinorHealthPotionItem)\n            storage.setItem3(null);\n    }\n\n    // Sets the cooldown, and then resets it after a given amount of seconds.\n    private void coolDown(final float delay) {\n        spellCooldown = true;\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                refresh();\n            }\n        }, delay);\n    }\n\n    // This method is purely for the purpose of running concurrent threads (Timer).\n    private void refresh() {\n        spellCooldown = false;\n    }\n\n    // Returns true if Daur has swim gear; otherwise, returns false.\n    private boolean canSwim() {\n        for (Item item : storage.questItems)\n            if (item instanceof SwimGear)\n                return true;\n        return false;\n    }\n\n    // Overrides super method to prevent unstunning while knocked out, dying, or falling.\n    public void unStun() {\n        if (state != KNOCKOUT && state != FALLING && !dying)\n            stun = false;\n    }\n\n    // Checks if Daur is actually facing the object he is interacting with properly.\n    protected boolean facingObject(Sprite object) {\n        // Gets the center of Daur.\n        float posX = getX() + getWidth() / 2, posY = getY() + getHeight() / 2;\n        // Boolean that basically states that Daur is between the left and right of the interacted object.\n        boolean inBoundsX = posX &gt; object.getX() && posX &lt; object.getX() + object.getWidth(),\n                // Same but for top and bottom.\n                inBoundsY = posY &gt; object.getY() && posY &lt; object.getY() + object.getHeight();\n        // Basically returns if Daur is facing the object.\n        return (dir == RIGHT && object.getX() &gt; getX() && inBoundsY) || (dir == LEFT && getX() &gt; object.getX() && inBoundsY) ||\n                (dir == UP && object.getY() &gt; getY() && inBoundsX) || (dir == DOWN && getY() &gt; object.getY() && inBoundsX);\n    }\n\n    // Checks if Daur is within a certain range of the object.\n    protected boolean inRange(Sprite object) {\n        // Gets the distance between the object and Daur.\n        float dX = Math.abs(object.getX() - getX()), dX2 = Math.abs(object.getX() + object.getWidth() - getX() - getWidth());\n        float dY = Math.abs(object.getY() - getY()), dY2 = Math.abs(object.getY() + object.getHeight() - getY() - getHeight());\n        // Gets the center of Daur.\n        float posX = getX() + getWidth() / 2, posY = getY() + getHeight() / 2;\n        // If Daur is to the left of the object, to the right, to the bottom, or the top.\n        boolean isLeft = getX() &lt; object.getX(), isRight = getX() &gt; object.getX(), isDown = getY() &lt; object.getY(),\n                isUp = getY() &gt; object.getY();\n        // Same as the previous method.\n        boolean inBoundsX = posX &gt; object.getX() && posX &lt; object.getX() + object.getWidth(),\n                inBoundsY = posY &gt; object.getY() && posY &lt; object.getY() + object.getHeight();\n\n        // Checks if Daur is within a close distance from the character.\n        return ((dX &lt; getWidth() && isLeft && inBoundsY) || (dX2 &lt; getWidth() && isRight && inBoundsY) || (dY &lt; getHeight() &&\n                isDown && inBoundsX) || (dY2 &lt; getHeight() && isUp && inBoundsX));\n    }\n\n    public boolean isGrounded() {\n        return grounded;\n    }\n\n    public boolean isDead() {\n        return dying;\n    }\n\n    private void resetPressed() {\n        talkPressed = false;\n    }\n\n}\n    import SidebarContainer from "../containers/SidebarContainer";\n    import SummaryContainer from "../containers/SummaryContainer";\n    import SourceCodeContainer from "../containers/SourceCodeContainer";\n    import "./css/BodyContainer.css"\n\n    class BodyContainer extends React.Component {\n        render() {\n            return (\n                <div className={"container-fluid row"}>\n                    <SidebarContainer/>\n                    <div className="body-container">\n                        <SummaryContainer/>\n                        <SourceCodeContainer/>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    export default connect(null, null)(BodyContainer);')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},'package com.inoculates.fatesreprise.Worlds;\n\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.audio.Music;\nimport com.badlogic.gdx.graphics.OrthographicCamera;\nimport com.badlogic.gdx.graphics.g2d.Sprite;\nimport com.badlogic.gdx.graphics.glutils.ShaderProgram;\nimport com.badlogic.gdx.maps.MapObject;\nimport com.badlogic.gdx.maps.objects.RectangleMapObject;\nimport com.badlogic.gdx.maps.tiled.TiledMap;\nimport com.badlogic.gdx.maps.tiled.TiledMapTileLayer;\nimport com.badlogic.gdx.math.Rectangle;\nimport com.badlogic.gdx.math.Vector2;\nimport com.badlogic.gdx.utils.Timer;\nimport com.inoculates.fatesreprise.Characters.*;\nimport com.inoculates.fatesreprise.Characters.Character;\nimport com.inoculates.fatesreprise.Events.*;\nimport com.inoculates.fatesreprise.Interactables.*;\nimport com.inoculates.fatesreprise.Screens.GameScreen;\nimport com.inoculates.fatesreprise.Storage.Storage;\nimport com.inoculates.fatesreprise.UI.UI;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n\n// This is the superclass for all worlds, and contains valuable methods.\npublic abstract class World {\n\n    protected Storage storage;\n    protected OrthographicCamera camera;\n    protected TiledMap map;\n    protected GameScreen screen;\n    protected TiledMapTileLayer layer;\n    protected ArrayList&lt;RectangleMapObject&gt; triggers = new ArrayList&lt;RectangleMapObject&gt;();\n\n    public int cellX = 0, cellY = 15;\n\n    // Rectangular areas that causes a black fog of varying intensity to display.\n    protected ArrayList&lt;RectangleMapObject&gt; fogIn = new ArrayList&lt;RectangleMapObject&gt;();\n    protected ArrayList&lt;RectangleMapObject&gt; fogOut = new ArrayList&lt;RectangleMapObject&gt;();\n    // Cells of the map, as well as the cells that specifically cause another shader to be used. These are both expressed\n    // as hashmaps. Note that the second utilizes a arraylist of vectors, which are used for the application of shaders.\n    protected Map&lt;String, ArrayList&lt;TiledMapTileLayer.Cell&gt;&gt; cells = new HashMap&lt;String, ArrayList&lt;TiledMapTileLayer.Cell&gt;&gt;();\n    protected Map&lt;String, ArrayList&lt;Vector2&gt;&gt; shaderCells = new HashMap&lt;String, ArrayList&lt;Vector2&gt;&gt;();\n    protected Map&lt;String, ArrayList&lt;Vector2&gt;&gt; musicCells = new HashMap&lt;String, ArrayList&lt;Vector2&gt;&gt;();\n\n    // These are the events that are responsible for the triggers.\n    private FairyMeeting fMeeting;\n\n    public World(Storage storage, OrthographicCamera camera, TiledMap map, GameScreen screen) {\n        this.storage = storage;\n        this.camera = camera;\n        this.map = map;\n        this.screen = screen;\n        layer = (TiledMapTileLayer) map.getLayers().get(0);\n\n        setFog();\n        createMapArrays();\n        setShaderTransitions();\n        setMusicCells();\n        setTriggers();\n        createCellMap();\n    }\n\n    // Main method that creates all aspects of the map, including the characters, interactables, and tile objects (like\n    // bushes).\n    public void createRenewables() {\n        createCharRenewables();\n        createInteractableRenewables();\n        createTileRenewables();\n        createTeleporters();\n    }\n\n    // Creates all characters.\n    private void createCharRenewables() {\n        // Clears all local memory events so that multiple, identical local array elements are not added.\n        screen.clearEvents();\n        // Looks at all rectangular map objects that are in the layer Spawns.\n        for (MapObject object : map.getLayers().get("Spawns").getObjects())\n            if (object instanceof RectangleMapObject) {\n                // Casts the rectangular object into a normal rectangle.\n                RectangleMapObject rectObject = (RectangleMapObject) object;\n                Rectangle rect = rectObject.getRectangle();\n                // Gets the middle of the spawn rectangle.\n                float x = (int) (rect.getX() / layer.getTileWidth()) * layer.getTileWidth() + layer.getTileWidth() / 2;\n                float y = (int) (rect.getY() / layer.getTileHeight()) * layer.getTileHeight() + layer.getTileHeight() / 2;\n                ArrayList&lt;Character&gt; characterList;\n                // The character rendering list is added to depending on the type of world this instance is.\n                if (this instanceof UpperWorld)\n                    characterList = screen.characters1;\n                else if (this instanceof UnderWorld)\n                    characterList = screen.characters2;\n                else\n                    characterList = screen.characters3;\n                // Generic sprite that is used for methods.\n                Enemy enemy = null;\n                // Creates the character based on the spawn.\n                if (object.getProperties().containsKey("beetlespawn")) {\n                    enemy = new Beetle(screen, map, screen.characterAtlases.get(2));\n                    enemy.setSpawn(x - enemy.getWidth() / 2, y - enemy.getHeight() / 2);\n                    characterList.add(enemy);\n                }\n                if (object.getProperties().containsKey("dummyspawn")) {\n                    enemy = new Dummy(screen, map, screen.characterAtlases.get(2));\n                    enemy.setSpawn(x - enemy.getWidth() / 2, y - enemy.getHeight() / 2);\n                    characterList.add(enemy);\n                }\n                if (object.getProperties().containsKey("dollspawn")) {\n                    enemy = new Doll(screen, map, screen.characterAtlases.get(2));\n                    enemy.setSpawn(x - enemy.getWidth() / 2, y - enemy.getHeight() / 2);\n                    characterList.add(enemy);\n                }\n                if (object.getProperties().containsKey("slimespawn")) {\n                    enemy = new Slime(screen, map, screen.characterAtlases.get(2));\n                    enemy.setSpawn(x - enemy.getWidth() / 2, y - enemy.getHeight() / 2);\n                    characterList.add(enemy);\n                }\n                if (object.getProperties().containsKey("wizardspawn")) {\n                    enemy = new Wizard(screen, map, screen.characterAtlases.get(2));\n                    enemy.setSpawn(x - enemy.getWidth() / 2, y - enemy.getHeight() / 2);\n                    characterList.add(enemy);\n                }\n                if (object.getProperties().containsKey("pantomimespawn")) {\n                    enemy = new Pantomime(screen, map, screen.characterAtlases.get(2));\n                    enemy.setSpawn(x - enemy.getWidth() / 2, y - enemy.getHeight() / 2);\n                    characterList.add(enemy);\n                }\n                if (object.getProperties().containsKey("woodenstatuespawn")) {\n                    enemy = new WoodenStatue(screen, map, screen.characterAtlases.get(2));\n                    enemy.setSpawn(x - 8, y - 8);\n                    characterList.add(enemy);\n                }\n                if (object.getProperties().containsKey("batspawn")) {\n                    enemy = new Bat(screen, map, screen.characterAtlases.get(2));\n                    enemy.setSpawn(x - enemy.getWidth() / 2, y - enemy.getHeight() / 2);\n                    characterList.add(enemy);\n                }\n                if (object.getProperties().containsKey("lurkerspawn")) {\n                    enemy = new Lurker(screen, map, screen.characterAtlases.get(2));\n                    enemy.setSpawn(x - enemy.getWidth() / 2, y - enemy.getHeight() / 2);\n                    characterList.add(enemy);\n                }\n                if (object.getProperties().containsKey("plantstalkerspawn")) {\n                    enemy = new PlantStalker(screen, map, screen.characterAtlases.get(2));\n                    enemy.setSpawn(x - enemy.getWidth() / 2, y - enemy.getHeight() / 2);\n                    characterList.add(enemy);\n                }\n                if (object.getProperties().containsKey("slimejumperspawn")) {\n                    enemy = new SlimeJumper(screen, map, screen.characterAtlases.get(2));\n                    enemy.setSpawn(x - enemy.getWidth() / 2, y - enemy.getHeight() / 2);\n                    characterList.add(enemy);\n                }\n                if (object.getProperties().containsKey("ghostspawn")) {\n                    enemy = new Ghost(screen, map, screen.characterAtlases.get(2),\n                            Integer.parseInt(rectObject.getProperties().get("ghostspawn").toString()));\n                    enemy.setSpawn(x - enemy.getWidth() / 2, y - enemy.getHeight() / 2);\n                    characterList.add(enemy);\n                }\n                if (object.getProperties().containsKey("jfishspawn")) {\n                    enemy = new JellyFish(screen, map, screen.characterAtlases.get(2));\n                    enemy.setSpawn(x - enemy.getWidth() / 2, y - enemy.getHeight() / 2);\n                    characterList.add(enemy);\n                }\n                // Checks if the added character is part of any event.\n                checkEvents(object, enemy);\n            }\n    }\n\n    // Same but for interactables.\n    private void createInteractableRenewables() {\n        for (MapObject object : map.getLayers().get("Interactables").getObjects())\n            if (object instanceof RectangleMapObject) {\n                RectangleMapObject rectObject = (RectangleMapObject) object;\n                Rectangle rect = rectObject.getRectangle();\n                float x = (int) (rect.getX() / layer.getTileWidth()) * layer.getTileWidth() + layer.getTileWidth() / 2;\n                float y = (int) (rect.getY() / layer.getTileHeight()) * layer.getTileHeight() + layer.getTileHeight() / 2;\n                // General interactable for methods.\n                Interactable interactable = null;\n\n                // Note that IF the chest does have a trigger, incorporates it. Otherwise, it shall not be considered.\n                if (object.getProperties().containsKey("greenblock")) {\n                    if (!(rectObject.getProperties().get("limited").toString()).equals(""))\n                        interactable = new GreenBlock(screen, map, screen.miscAtlases.get(0), storage,\n                                rectObject.getProperties().get("greenblock").toString(),\n                                object.getProperties().containsKey("limited"),\n                                Integer.parseInt(rectObject.getProperties().get("limited").toString()));\n                    else\n                        interactable = new GreenBlock(screen, map, screen.miscAtlases.get(0), storage,\n                                rectObject.getProperties().get("greenblock").toString(),\n                                object.getProperties().containsKey("limited"));\n                    interactable.setSpawn(x - interactable.getWidth() / 2, y - interactable.getHeight() / 2);\n                    screen.interactables.add(interactable);\n                }\n                if (object.getProperties().containsKey("greenchest")) {\n                    interactable = new GreenChest(screen, map, screen.miscAtlases.get(0), storage,\n                            rectObject.getProperties().get("greenchest").toString(), x, y,\n                            Integer.parseInt(rectObject.getProperties().get("chest").toString()));\n                    interactable.setSpawn(x - interactable.getWidth() / 2, y - interactable.getHeight() / 2);\n                    screen.interactables.add(interactable);\n                }\n                if (object.getProperties().containsKey("woodblock")) {\n                    if (!(rectObject.getProperties().get("limited").toString()).equals(""))\n                        interactable = new WoodBlock(screen, map, screen.miscAtlases.get(0), storage,\n                                rectObject.getProperties().get("woodblock").toString(),\n                                object.getProperties().containsKey("limited"),\n                                Integer.parseInt(rectObject.getProperties().get("limited").toString()));\n                    else\n                        interactable = new WoodBlock(screen, map, screen.miscAtlases.get(0), storage,\n                                rectObject.getProperties().get("woodblock").toString(),\n                                object.getProperties().containsKey("limited"));\n                    interactable.setSpawn(x - interactable.getWidth() / 2, y - interactable.getHeight() / 2);\n                    screen.interactables.add(interactable);\n                }\n                if (object.getProperties().containsKey("GHMS") && storage.mainQuestStage &gt; 2) {\n                    interactable = new WoodChest(screen, map, screen.miscAtlases.get(0), storage,\n                            rectObject.getProperties().get("GHMS").toString(), x, y,\n                            Integer.parseInt(rectObject.getProperties().get("chest").toString()));\n                    interactable.setSpawn(x - interactable.getWidth() / 2, y - interactable.getHeight() / 2);\n                    screen.interactables.add(interactable);\n                }\n                // For the Zephyr\'s Wisp chest.\n                if (object.getProperties().containsKey("woodchest")) {\n                    interactable = new WoodChest(screen, map, screen.miscAtlases.get(0), storage,\n                            rectObject.getProperties().get("woodchest").toString(), x, y,\n                            Integer.parseInt(rectObject.getProperties().get("chest").toString()));\n                    interactable.setSpawn(x - interactable.getWidth() / 2, y - interactable.getHeight() / 2);\n                    screen.interactables.add(interactable);\n                }\n                if (object.getProperties().containsKey("ghlockedh") &&\n                        !storage.lockedDoors[Integer.parseInt(object.getProperties().get("locked").toString())]) {\n                    interactable = new WoodLockedDoorHorizontal(screen, map, screen.miscAtlases.get(0), storage,\n                            x, y, Integer.parseInt(object.getProperties().get("locked").toString()));\n                    interactable.setSpawn(x - interactable.getWidth() / 4, y - interactable.getHeight() / 2);\n                    screen.interactables.add(interactable);\n                }\n                if (object.getProperties().containsKey("ghlockedv") &&\n                        !storage.lockedDoors[Integer.parseInt(object.getProperties().get("locked").toString())]) {\n                    interactable = new WoodLockedDoorVertical(screen, map, screen.miscAtlases.get(0), storage,\n                            x, y, Integer.parseInt(object.getProperties().get("locked").toString()));\n                    interactable.setSpawn(x - interactable.getWidth() / 2, y - interactable.getHeight() / 4);\n                    screen.interactables.add(interactable);\n                }\n                if (object.getProperties().containsKey("ghclosedv")) {\n                    interactable = new WoodClosedDoorVertical(screen, map, screen.miscAtlases.get(0), storage,\n                            x, y, Integer.parseInt(object.getProperties().get("closed").toString()));\n                    interactable.setSpawn(x - interactable.getWidth() / 2, y - interactable.getHeight() / 4);\n                }\n                if (object.getProperties().containsKey("ghclosedh")) {\n                    interactable = new WoodClosedDoorHorizontal(screen, map, screen.miscAtlases.get(0), storage,\n                            x, y, Integer.parseInt(object.getProperties().get("closed").toString()));\n                    interactable.setSpawn(x - interactable.getWidth() / 4, y - interactable.getHeight() / 2);\n                }\n                if (object.getProperties().containsKey("platformspawn")) {\n                    interactable = new Platform(screen, map, screen.miscAtlases.get(0), storage,\n                            Float.parseFloat(object.getProperties().get("velocityX").toString()),\n                            Float.parseFloat(object.getProperties().get("velocityY").toString()));\n                    interactable.setSpawn(x - interactable.getWidth() / 2, y - interactable.getHeight() / 2);\n                    screen.interactables.add(interactable);\n                }\n                if (object.getProperties().containsKey("bossh") &&\n                        !storage.bossDoors[Integer.parseInt(object.getProperties().get("bossdoor").toString())]) {\n                    interactable = new BossDoorHorizontal(screen, map, screen.miscAtlases.get(0), storage);\n                    interactable.setSpawn(x - interactable.getWidth() / 2, y - interactable.getHeight() / 4);\n                    screen.interactables.add(interactable);\n                }\n                if (object.getProperties().containsKey("bossv") &&\n                        !storage.bossDoors[Integer.parseInt(object.getProperties().get("bossdoor").toString())]) {\n                    interactable = new BossDoorVertical(screen, map, screen.miscAtlases.get(0), storage);\n                    interactable.setSpawn(x - interactable.getWidth() / 2, y - interactable.getHeight() / 4);\n                    screen.interactables.add(interactable);\n                }\n                checkEvents(object, interactable);\n            }\n    }\n\n    // Same but for teleporters.\n    private void createTeleporters() {\n        // If not Under World simply return.\n        if (!(this instanceof UnderWorld))\n            return;\n        for (MapObject object : map.getLayers().get("Teleporters").getObjects())\n            if (object instanceof RectangleMapObject) {\n                RectangleMapObject rectObject = (RectangleMapObject) object;\n                Rectangle rect = rectObject.getRectangle();\n                float x = (int) (rect.getX() / layer.getTileWidth()) * layer.getTileWidth() + layer.getTileWidth() / 2;\n                float y = (int) (rect.getY() / layer.getTileHeight()) * layer.getTileHeight() + layer.getTileHeight() / 2;\n                Teleporter tp;\n                if (object.getProperties().containsKey("TP1Spawn") && storage.mainQuestStage &gt; 2) {\n                    tp = new Teleporter(screen, screen.map, screen.miscAtlases.get(0), storage, this);\n                    tp.setSpawn(x - tp.getWidth() / 2, y - tp.getHeight() / 2);\n                    screen.interactables.add(tp);\n                    checkEvents(object, tp);\n                }\n                if (object.getProperties().containsKey("TP2Spawn") && storage.mainQuestStage &gt; 2) {\n                    tp = new Teleporter(screen, screen.map, screen.miscAtlases.get(0), storage, this);\n                    tp.setSpawn(x - tp.getWidth() / 2, y - tp.getHeight() / 2);\n                    screen.interactables.add(tp);\n                    checkEvents(object, tp);\n                }\n            }\n    }\n\n    // Same but for tile objects.\n    private void createTileRenewables() {\n        for (TiledMapTileLayer.Cell cell : cells.get("Spring Bush"))\n            cell.setTile(screen.springBushTile);\n        cells.get("Spring Bush").clear();\n\n        for (TiledMapTileLayer.Cell cell : cells.get("Summer Bush"))\n            cell.setTile(screen.summerBushTile);\n        cells.get("Summer Bush").clear();\n\n        for (TiledMapTileLayer.Cell cell : cells.get("Fall Bush"))\n            cell.setTile(screen.fallBushTile);\n        cells.get("Fall Bush").clear();\n\n        for (TiledMapTileLayer.Cell cell : cells.get("Winter Bush"))\n            cell.setTile(screen.winterBushTile);\n        cells.get("Winter Bush").clear();\n\n        for (TiledMapTileLayer.Cell cell : cells.get("Bramble"))\n            cell.setTile(screen.brambleTile);\n        cells.get("Bramble").clear();\n\n        for (TiledMapTileLayer.Cell cell : cells.get("Spring Grass"))\n            cell.setTile(screen.springGrassTile);\n        cells.get("Spring Grass").clear();\n\n        for (TiledMapTileLayer.Cell cell : cells.get("Summer Grass"))\n            cell.setTile(screen.summerGrassTile);\n        cells.get("Summer Grass").clear();\n\n        for (TiledMapTileLayer.Cell cell : cells.get("Fall Grass"))\n            cell.setTile(screen.fallGrassTile);\n        cells.get("Fall Grass").clear();\n\n        for (TiledMapTileLayer.Cell cell : cells.get("Winter Grass"))\n            cell.setTile(screen.winterGrassTile);\n        cells.get("Winter Grass").clear();\n    }\n\n    // This removes all renewables, depending on certain conditions. Note that this method is launched when the player\n    // enters/leaves a world. Meaning if a character enters a dungeon from the overworld, all renewables in the overworld\n    // shall be erased. This is so that when the renewables are recreated, they are not created over existing renewables.\n    public void cleanRenewables() {\n        ArrayList&lt;Character&gt; characterList = new ArrayList&lt;Character&gt;();\n        // Adds to the separate list to create a temporary copy of the corresponding character arraylist.\n        if (this instanceof UpperWorld)\n            for (Character character : screen.characters1)\n                characterList.add(character);\n        else if (this instanceof UnderWorld)\n            for (Character character : screen.characters2)\n                characterList.add(character);\n        else\n            for (Character character : screen.characters3)\n                characterList.add(character);\n        // If the character is an enemy, deletes it from the corresponding character list.\n        for (Character character : characterList)\n            if (character instanceof Enemy) {\n                if (this instanceof UpperWorld)\n                    screen.characters1.remove(character);\n                else if (this instanceof UnderWorld)\n                    screen.characters2.remove(character);\n                else\n                    screen.characters3.remove(character);\n            }\n        // Same for all interactables.\n        screen.interactables.clear();\n        // Same for all projectiles.\n        screen.projectiles.clear();\n        // Same for all consumables.\n        screen.consumables.clear();\n        // Clears global timer.\n        screen.globalTimer.clear();\n    }\n\n    // This method checks if the cell has a bush tag. If so, creates the bush over the tile and deletes the tag.\n    private void checkCell(TiledMapTileLayer.Cell cell) {\n        for (TiledMapTileLayer.Cell checkCell : cells.get("Spring Bush")) {\n            if (cell.equals(checkCell)) {\n                cell.setTile(screen.springBushTile);\n                cells.get("Spring Bush").remove(cell);\n            }\n        }\n        for (TiledMapTileLayer.Cell checkCell : cells.get("Summer Bush"))\n            if (cell.equals(checkCell)) {\n                cell.setTile(screen.summerBushTile);\n                cells.get("Summer Bush").remove(cell);\n            }\n        for (TiledMapTileLayer.Cell checkCell : cells.get("Fall Bush"))\n            if (cell.equals(checkCell)) {\n                cell.setTile(screen.fallBushTile);\n                cells.get("Fall Bush").remove(cell);\n            }\n        for (TiledMapTileLayer.Cell checkCell : cells.get("Winter Bush"))\n            if (cell.equals(checkCell)) {\n                cell.setTile(screen.winterBushTile);\n                cells.get("Winter Bush").remove(cell);\n            }\n\n    }\n\n    // This triggers an event depending on the trigger given.\n    public void trigger(RectangleMapObject trigger) {\n        Event event;\n        // Player has triggered the fairy meeting start. If the fairy meeting event has not launched yet, launches one.\n        if (trigger.getProperties().containsKey("FS"))\n            if (fMeeting == null)\n                fMeeting = new FairyMeeting(screen.map, screen);\n        // Player has triggered the fairy meeting end. If the fairy meeting has launched, ends it.\n        if (trigger.getProperties().containsKey("FE"))\n            if (fMeeting != null) {\n                fMeeting.proceed();\n                fMeeting = null;\n            }\n        // Player has triggered the bush ambush. Launches the corresponding event.\n        if (trigger.getProperties().containsKey("MAS") && storage.mainQuestStage == 0 && !storage.FDstorage.ambush)\n            event = new BushAmbush(screen.map, screen, storage);\n        // Player has triggered the heart piece bush enemy event. Launches the corresponding event.\n        if (trigger.getProperties().containsKey("BHS") && !storage.heartPiecesObtained[0] && !storage.FDstorage.heartPieceEvent)\n            event = new HeartPieceBushEvent(screen.map, screen, storage);\n        // If the player has entered the Great Hollow Dungeon, initiates the informing dialogue, and sets the dungeon\n        // integer to 0 (which indicates Daur is in the Great Hollow Dungeon).\n        if (trigger.getProperties().containsKey(("GHD")) && storage.dungeon != 0)\n            event = new GreatHollowDialogue(screen.map, screen, storage);\n        // If the player has exited the Great Hollow Dungeon, sets the dungeon integer to read -1 (no dungeon).\n        if (trigger.getProperties().containsKey(("GHE")))\n            storage.setDungeon(-1);\n        // If the player has stepped on the first great hollow trigger, closes the trigger door.\n        if (trigger.getProperties().containsKey("GHT1") && !storage.FDstorage.GHT1)\n            storage.FDstorage.closeDoor1();\n        // If the player has stepped on the second great hollow trigger, closes the trigger door.\n        if (trigger.getProperties().containsKey("GHT2") && !storage.FDstorage.GHT2)\n            storage.FDstorage.closeDoor2();\n        // If the player has stepped on the Great Hollow miniboss trigger, closes the trigger door and creates the\n        // miniboss: the Slime King. Also resets Daur\'s spawn point.\n        if (trigger.getProperties().containsKey("GHMT") && storage.mainQuestStage &lt; 3 && !storage.FDstorage.GHMT &&\n                screen.daur.isGrounded()) {\n            screen.daur.endJump();\n            storage.FDstorage.closeDoor3();\n            storage.FDstorage.createMiniboss();\n            // Sets Daur\'s new spawn point.\n            screen.daur.setSpawnPoint(trigger.getRectangle().getX() + trigger.getRectangle().getWidth() / 2\n                    - screen.daur.getWidth() / 2, trigger.getRectangle().getY() + trigger.getRectangle().getHeight() / 2\n                    - screen.daur.getHeight() / 2);\n        }\n        // Same but for the boss of the Great Hollow Dungeon.\n        if (trigger.getProperties().containsKey("GHBT") && storage.mainQuestStage &lt; 4 && !storage.FDstorage.GHBT\n                && screen.daur.isGrounded()) {\n            storage.FDstorage.closeDoor4();\n            storage.FDstorage.startBossFight();\n            screen.daur.setSpawnPoint(trigger.getRectangle().getX() + trigger.getRectangle().getWidth() / 2\n                    - screen.daur.getWidth() / 2, trigger.getRectangle().getY() + trigger.getRectangle().getHeight() / 2\n                    - screen.daur.getHeight() / 2);\n        }\n    }\n\n    private void createCellMap() {\n\n    }\n\n    // Creates the map array lists for the shader hashmap.\n    private void createMapArrays() {\n        // Create the two shader hashmap array lists.\n        shaderCells.put("fwin", new ArrayList&lt;Vector2&gt;());\n        shaderCells.put("fwout", new ArrayList&lt;Vector2&gt;());\n        // Creates eight new array lists, one for each type of bush/grass.\n        cells.put("Spring Bush", new ArrayList&lt;TiledMapTileLayer.Cell&gt;());\n        cells.put("Summer Bush", new ArrayList&lt;TiledMapTileLayer.Cell&gt;());\n        cells.put("Fall Bush", new ArrayList&lt;TiledMapTileLayer.Cell&gt;());\n        cells.put("Winter Bush", new ArrayList&lt;TiledMapTileLayer.Cell&gt;());\n        cells.put("Bramble", new ArrayList&lt;TiledMapTileLayer.Cell&gt;());\n        cells.put("Spring Grass", new ArrayList&lt;TiledMapTileLayer.Cell&gt;());\n        cells.put("Summer Grass", new ArrayList&lt;TiledMapTileLayer.Cell&gt;());\n        cells.put("Fall Grass", new ArrayList&lt;TiledMapTileLayer.Cell&gt;());\n        cells.put("Winter Grass", new ArrayList&lt;TiledMapTileLayer.Cell&gt;());\n        // Creates the array lists for the different soundtracks.\n        musicCells.put("overworldtheme", new ArrayList&lt;Vector2&gt;());\n        musicCells.put("carthellvillage", new ArrayList&lt;Vector2&gt;());\n        musicCells.put("house", new ArrayList&lt;Vector2&gt;());\n        musicCells.put("shop", new ArrayList&lt;Vector2&gt;());\n        musicCells.put("mayor", new ArrayList&lt;Vector2&gt;());\n        musicCells.put("faronwoods", new ArrayList&lt;Vector2&gt;());\n        musicCells.put("cave", new ArrayList&lt;Vector2&gt;());\n        musicCells.put("greathollow", new ArrayList&lt;Vector2&gt;());\n    }\n\n    // If the player is beyond a certain point (the boundaries of a cell), the camera will pan over to the new cell.\n    public void checkCameraChange() {\n        // Does NOT work if Daur is flying or stunned.\n        if (!screen.daur.isGrounded() || screen.daur.isStunned())\n            return;\n        if (screen.daur.getX() + screen.daur.getWidth() / 2 &gt; layer.getTileWidth() * 10 * (cellX + 1)) {\n            cellX++;\n            setCameraPosition(true, true);\n        } else if (screen.daur.getX() + screen.daur.getWidth() / 2 &lt; layer.getTileWidth() * 10 * cellX) {\n            cellX--;\n            setCameraPosition(true, false);\n        }\n        if (screen.daur.getY() + screen.daur.getHeight() / 2 &gt; layer.getTileWidth() * 10 * (cellY + 1)) {\n            cellY++;\n            setCameraPosition(false, true);\n        } else if (screen.daur.getY() + screen.daur.getHeight() / 2 &lt; layer.getTileWidth() * 10 * cellY) {\n            cellY--;\n            setCameraPosition(false, false);\n        }\n        // If this is the overworld, sets the cell to be explored.\n        if (this instanceof UpperWorld)\n            storage.setExplored(cellX, cellY);\n    }\n\n    // This causes the panning effect when the camera moves a cell.\n    protected void setCameraPosition(boolean onXAxis, boolean plus) {\n        float deltaTime = 0;\n        // Freezes the screen temporarily.\n        screen.freeze();\n        screen.daur.freeze();\n        screen.daur.setTransitioning(true);\n        // After 0.16 seconds sets the camera to a static point. This is to avoid any\n        // different camera positions from occurring.\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                camera.position.set(cellX * 10 * layer.getTileWidth() + camera.viewportWidth / 2,\n                        cellY * 10 * layer.getTileHeight() + camera.viewportHeight / 2, 0);\n                screen.daur.setTransitioning(false);\n            }\n        }, 0.16f);\n\n        if (onXAxis) {\n            if (plus)\n                // Using a delayed for loop, pans the camera to the right.\n                for (float x = camera.position.x; x &lt;= cellX * 10 * layer.getTileWidth() + camera.viewportWidth / 2; x++) {\n                    final float newX = x;\n                    screen.globalTimer.scheduleTask(new Timer.Task() {\n                        @Override\n                        public void run() {\n                            camera.position.set(newX, camera.position.y, 0);\n                            // Ensures that the UI pans with the camera, rather than jumps.\n                            for (UI ui : screen.UIS)\n                                ui.renewPosition();\n                        }\n                    }, deltaTime);\n                    deltaTime += 0.001f;\n                }\n            else\n                for (float x = camera.position.x; x &gt;= cellX * 10 * layer.getTileWidth() + camera.viewportWidth / 2; x--) {\n                    final float newX = x;\n                    screen.globalTimer.scheduleTask(new Timer.Task() {\n                        @Override\n                        public void run() {\n                            camera.position.set(newX, camera.position.y, 0);\n                            for (UI ui : screen.UIS)\n                                ui.renewPosition();\n                        }\n                    }, deltaTime);\n                    deltaTime += 0.001f;\n                }\n        } else {\n            if (plus)\n                for (float y = camera.position.y; y &lt;= cellY * 10 * layer.getTileHeight() + camera.viewportHeight / 2; y++) {\n                    final float newY = y;\n                    screen.globalTimer.scheduleTask(new Timer.Task() {\n                        @Override\n                        public void run() {\n                            camera.position.set(camera.position.x, newY, 0);\n                            for (UI ui : screen.UIS)\n                                ui.renewPosition();\n                        }\n                    }, deltaTime);\n                    deltaTime += 0.001f;\n                }\n            else {\n                for (float y = camera.position.y; y &gt;= cellY * 10 * layer.getTileHeight() + camera.viewportHeight / 2; y--) {\n                    final float newY = y;\n                    screen.globalTimer.scheduleTask(new Timer.Task() {\n                        @Override\n                        public void run() {\n                            camera.position.set(camera.position.x, newY, 0);\n                            for (UI ui : screen.UIS)\n                                ui.renewPosition();\n                        }\n                    }, deltaTime);\n                    deltaTime += 0.001f;\n                }\n            }\n        }\n        // Resets the position of the mask, informs the program which cell the player resides in, checks if a shader\n        // or music transition is needed, and sets Daur\'s new spawn point (if the player should fall down a hole).\n        screen.mask.setPosition(camera.position.x - camera.viewportWidth / 2, camera.position.y - camera.viewportHeight / 2);\n        storage.setCells(cellX, cellY);\n        checkShaderTransition();\n        checkMusicTransition();\n        setSpawnPoint(onXAxis, plus);\n\n        // After 0.1 seconds, unfreezes the screen to allow for movement again.\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                screen.unFreeze();\n            }\n        }, 0.1f);\n    }\n\n    // Sets the spawn point. This is if the player is erased from the map for any reason, including falling down a hole.\n    protected void setSpawnPoint(boolean xAxis, boolean plus) {\n        if (xAxis) {\n            if (plus)\n                screen.daur.setSpawnPoint(screen.daur.getX() + screen.daur.getWidth(), screen.daur.getY());\n            else\n                screen.daur.setSpawnPoint(screen.daur.getX() - screen.daur.getWidth(), screen.daur.getY());\n        } else {\n            if (plus)\n                screen.daur.setSpawnPoint(screen.daur.getX(), screen.daur.getY() + screen.daur.getHeight());\n            else\n                screen.daur.setSpawnPoint(screen.daur.getX(), screen.daur.getY() - screen.daur.getHeight());\n        }\n    }\n\n    // Gets the fog of the cell. If the cell is meant to be a fog in or fog out transition.\n    public Rectangle getFog(int p, boolean in) {\n        if (in)\n            return fogIn.get(p).getRectangle();\n        else\n            return fogOut.get(p).getRectangle();\n    }\n\n    // Checks whether a shader should be used to draw the map and the renewables. This is based on the dictionary shader\n    // cells. If the shader cell indicates a certain transition should be made, it will be made.\n    public void checkShaderTransition() {\n        // Gets the current cells (X and Y component) in a vector.\n        Vector2 cells = new Vector2(cellX, cellY);\n        // Goes through each vector in the fwin hashmap cells to find a match.\n        for (Vector2 shadercells : shaderCells.get("fwin"))\n            if (shadercells.equals(cells))\n                // If a match is found, apply shader accordingly.\n                screen.setCurrentMapShader(new ShaderProgram(Gdx.files.internal("Shaders/faron.vert"),\n                        Gdx.files.internal("Shaders/faron.frag")));\n        // Goes through each vector in the fwout hashmap cells to find a match.\n        for (Vector2 shadercells : shaderCells.get("fwout"))\n            if (shadercells.equals(cells))\n                // If a match is found, remove shader accordingly.\n                screen.setCurrentMapShader(null);\n    }\n\n    // Checks whether a certain soundtrack should be played, depending on the cell. This is used to play the overworld\n    // music and others as well.\n    public void checkMusicTransition() {\n        // Gets the current cells (X and Y component) in a vector.\n        Vector2 cells = new Vector2(cellX, cellY);\n        // Goes through each vector in the fwin hashmap cells to find a match.\n        for (Vector2 musicCell : musicCells.get("overworldtheme"))\n            // Plays only if not already playing.\n            if (musicCell.equals(cells) && !storage.music.get("overworldtheme").isPlaying()) {\n                // If a match is found, plays the music accordingly. First stops the music.\n                storage.stopMusic();\n                storage.music.get("overworldtheme").play();\n                storage.music.get("overworldtheme").setVolume(0.75f);\n                storage.music.get("overworldtheme").setLooping(true);\n            }\n        for (Vector2 musicCell : musicCells.get("carthellvillage"))\n            if (musicCell.equals(cells) && !storage.music.get("carthellvillagemusic").isPlaying()) {\n                // If a match is found, plays the music accordingly. First stops the music.\n                storage.stopMusic();\n                storage.music.get("carthellvillagemusic").play();\n                storage.music.get("carthellvillagemusic").setVolume(0.75f);\n                storage.music.get("carthellvillagemusic").setLooping(true);\n            }\n        for (Vector2 musicCell : musicCells.get("house"))\n            if (musicCell.equals(cells) && !storage.music.get("housemusic").isPlaying()) {\n                // If a match is found, plays the music accordingly. First stops the music.\n                storage.stopMusic();\n                storage.music.get("housemusic").play();\n                storage.music.get("housemusic").setVolume(0.75f);\n                storage.music.get("housemusic").setLooping(true);\n            }\n        for (Vector2 musicCell : musicCells.get("shop"))\n            if (musicCell.equals(cells) && !storage.music.get("shopmusic").isPlaying()) {\n                // If a match is found, plays the music accordingly. First stops the music.\n                storage.stopMusic();\n                storage.music.get("shopmusic").play();\n                storage.music.get("shopmusic").setVolume(0.75f);\n                storage.music.get("shopmusic").setLooping(true);\n            }\n        for (Vector2 musicCell : musicCells.get("mayor"))\n            if (musicCell.equals(cells) && !storage.music.get("strangemusic").isPlaying()) {\n                // If a match is found, plays the music accordingly. First stops the music.\n                storage.stopMusic();\n                storage.music.get("strangemusic").play();\n                storage.music.get("strangemusic").setVolume(0.75f);\n                storage.music.get("strangemusic").setLooping(true);\n            }\n        for (Vector2 musicCell : musicCells.get("faronwoods"))\n            if (musicCell.equals(cells) && !storage.music.get("forestmusic").isPlaying()) {\n                // If a match is found, plays the music accordingly. First stops the music.\n                storage.stopMusic();\n                storage.music.get("forestmusic").play();\n                storage.music.get("forestmusic").setVolume(0.75f);\n                // Sets an oncompletionlistener, so that the forest music plays the looping version once played.\n                storage.music.get("forestmusic").setOnCompletionListener(new Music.OnCompletionListener() {\n                    @Override\n                    public void onCompletion(Music music) {\n                        storage.music.get("forestmusicloop").play();\n                        storage.music.get("forestmusicloop").setVolume(0.75f);\n                        storage.music.get("forestmusicloop").setLooping(true);\n                    }\n                });\n            }\n        for (Vector2 musicCell : musicCells.get("cave"))\n            if (musicCell.equals(cells) && !storage.music.get("cavemusic").isPlaying()) {\n                // If a match is found, plays the music accordingly. First stops the music.\n                storage.stopMusic();\n                storage.music.get("cavemusic").play();\n                storage.music.get("cavemusic").setVolume(0.75f);\n                storage.music.get("cavemusic").setLooping(true);\n            }\n        for (Vector2 musicCell : musicCells.get("greathollow"))\n            if (musicCell.equals(cells) && !storage.music.get("greathollowmusic").isPlaying()) {\n                // If a match is found, plays the music accordingly. First stops the music.\n                storage.stopMusic();\n                storage.music.get("greathollowmusic").play();\n                storage.music.get("greathollowmusic").setVolume(0.75f);\n                storage.music.get("greathollowmusic").setLooping(true);\n            }\n    }\n\n    // Gets all of the triggers in the world.\n    protected void setTriggers() {\n        for (MapObject object : map.getLayers().get("Triggers").getObjects())\n            if (object instanceof RectangleMapObject) {\n                RectangleMapObject rectObject = (RectangleMapObject) object;\n                triggers.add(rectObject);\n            }\n    }\n\n    // Adds the fog to the fog array list.\n    protected void setFog() {\n        for (MapObject object : map.getLayers().get("Fogs").getObjects())\n            if (object instanceof RectangleMapObject) {\n                RectangleMapObject rectObject = (RectangleMapObject) object;\n\n                if (object.getProperties().containsKey("FI"))\n                    fogIn.add(rectObject);\n                if (object.getProperties().containsKey("FO"))\n                    fogOut.add(rectObject);\n            }\n    }\n\n    // Gets the intensity of the fog (alpha of the mask).\n    public float getFogAmount(int p) {\n        return Float.parseFloat(fogIn.get(p).getProperties().get("FI").toString());\n    }\n\n    // Returns the size of the fog arrays.\n    public int getFogSize(boolean in) {\n        if (in)\n            return fogIn.size();\n        else return fogOut.size();\n    }\n\n    // Returns the amount of triggers currently inside the world.\n    public int getTriggerSize() {\n        return triggers.size();\n    }\n\n    public RectangleMapObject getTrigger(int t) {\n        return triggers.get(t);\n    }\n\n    public TiledMap getMap() {\n        return map;\n    }\n\n    public void setCamera(OrthographicCamera camera) {\n        this.camera = camera;\n    }\n\n    public void setCellX(int x) {\n        cellX = x;\n    }\n\n    public void setCellY(int y) {\n        cellY = y;\n    }\n\n    // This sets the camera instantly to a cell, rather than panning to it. This is useful if the player has just left or\n    // entered a world.\n    public void setCameraInstantly() {\n        for (int i = 0; i &lt; 16; i++)\n            if (screen.daur.getX() + screen.daur.getWidth() / 2 &gt; layer.getTileWidth() * 10 * i)\n                cellX = i;\n        for (int i = 0; i &lt; 16; i++)\n            if (screen.daur.getY() + screen.daur.getHeight() / 2 &gt; layer.getTileWidth() * 10 * i)\n                cellY = i;\n        camera.position.set(cellX * 10 * layer.getTileWidth() + camera.viewportWidth / 2,\n                cellY * 10 * layer.getTileHeight() + camera.viewportHeight / 2, 0);\n        screen.mask.setPosition(camera.position.x - camera.viewportWidth / 2, camera.position.y - camera.viewportHeight / 2);\n        // Resets the position of the mask, informs the program which cell the player resides in, checks if a shader\n        // transition is needed, and sets Daur\'s new spawn point (if the player should fall down a hole).\n        storage.setCells(cellX, cellY);\n        screen.daur.setSpawnPoint(screen.daur.getX(), screen.daur.getY());\n        // If this is the overworld, sets the cell to be explored.\n        if (this instanceof UpperWorld)\n            storage.setExplored(cellX, cellY);\n        checkShaderTransition();\n    }\n\n    // This method checks if any triggering events should be fired upon the creation of a character.\n    private void checkEvents(MapObject object, Sprite sprite) {\n        if (sprite == null)\n            return;\n        if (object.getProperties().containsKey("bushheartpiece"))\n            storage.FDstorage.addHeartPieceEnemy((Enemy) sprite);\n        if (object.getProperties().containsKey("greathollowtrigger1"))\n            storage.FDstorage.addGreatHollowTrigger1Sprites(sprite);\n        if (object.getProperties().containsKey("greathollowtrigger2"))\n            storage.FDstorage.addGreatHollowTrigger2Sprites(sprite);\n        if (object.getProperties().containsKey("greathollowtrigger3"))\n            storage.FDstorage.addGreatHollowTrigger3Sprites(sprite);\n        if (object.getProperties().containsKey("greathollowtrigger4"))\n            storage.FDstorage.addGreatHollowTrigger4Sprites(sprite);\n        if (object.getProperties().containsKey("greathollowtrigger5"))\n            storage.FDstorage.addGreatHollowTrigger5Sprites(sprite);\n        if (object.getProperties().containsKey("greathollowtrigger6"))\n            storage.FDstorage.addGreatHollowTrigger6Sprites(sprite);\n        if (object.getProperties().containsKey("greathollowminiboss"))\n            storage.FDstorage.addGreatHollowMinibossDoor((ClosedDoor) sprite);\n        if (object.getProperties().containsKey("greathollowboss"))\n            storage.FDstorage.addGreatHollowBossDoor((ClosedDoor) sprite);\n        if (object.getProperties().containsKey("greathollowboss2"))\n            storage.FDstorage.addGreatHollowBossDoor2((ClosedDoor) sprite);\n    }\n\n    public void addCell(String key, TiledMapTileLayer.Cell value) {\n        cells.get(key).add(value);\n    }\n\n    abstract void createCharacters();\n\n    abstract void setShaderTransitions();\n\n    abstract void setMusicCells();\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},'package com.inoculates.fatesreprise.Storage;\n\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.Input;\nimport com.badlogic.gdx.Preferences;\nimport com.badlogic.gdx.audio.Music;\nimport com.badlogic.gdx.audio.Sound;\nimport com.badlogic.gdx.graphics.g2d.TextureAtlas;\nimport com.badlogic.gdx.maps.tiled.TiledMap;\nimport com.inoculates.fatesreprise.Items.*;\nimport com.inoculates.fatesreprise.Screens.GameScreen;\n\nimport java.lang.reflect.Constructor;\nimport java.util.*;\n\n// This is the storage class that carries persistent data throughout games.\npublic class Storage {\n    // Value that tells the storage class something is uninitialized.\n    public static final int UNINITIALIZED = -1;\n\n    public int soundM = UNINITIALIZED;\n    public int soundE = UNINITIALIZED;\n    public int coins = UNINITIALIZED;\n    public int dungeon = UNINITIALIZED;\n    public int health = UNINITIALIZED;\n    public int maxHealth = UNINITIALIZED;\n    public int heartPieces = UNINITIALIZED;\n\n    public int talk = UNINITIALIZED;\n    public int moveRight = UNINITIALIZED;\n    public int moveLeft = UNINITIALIZED;\n    public int moveUp = UNINITIALIZED;\n    public int moveDown = UNINITIALIZED;\n    public int slotOne = UNINITIALIZED;\n    public int slotTwo = UNINITIALIZED;\n    public int slotThree = UNINITIALIZED;\n    public int pause = UNINITIALIZED;\n    public int secondary = UNINITIALIZED;\n\n    public int cellX = UNINITIALIZED;\n    public int cellY = UNINITIALIZED;\n\n    // Dialogue stages (depending on how far Daur is in the game, sets the dialogue).\n    public int[] villagerStages = new int[27];\n    public int fairyQueenStage = 0;\n    // How far the main quest has progressed.\n    public int mainQuestStage = 0;\n    // How many keys Daur has for the respective dungeons.\n    public int GHKeys = 0;\n    // The respawn X and Y of the respawn point. Used to set Daur\'s beginning position.\n    public float respawnX, respawnY;\n    // Boss doors of the respective dungeons (opened or closed).\n    public boolean[] bossDoors;\n    // Maps of the respective dungeons (obtained or not obtained).\n    public boolean[] maps;\n    // Compasses of the respective dungeons (obtained or not obtained).\n    public boolean[] compasses;\n    // Which sages Daur has rescued.\n    public boolean[] sages;\n    // Which heart pieces Daur has obtained.\n    public boolean[] heartPiecesObtained;\n    // Which chests have been opened.\n    public boolean[] chests;\n    // Which locked doors have been opened.\n    public boolean[] lockedDoors;\n    // Which areas Daur has explored in the Overworld.\n    public boolean[][] explored;\n    // The hashmap of sounds that are played throughout the game.\n    public java.util.Map&lt;String, Sound&gt; sounds;\n    // The hashmap of music that is played throughout the game.\n    public java.util.Map&lt;String, Music&gt; music;\n\n    // Items Daur has as well as quest items.\n    public ArrayList&lt;Item&gt; items = new ArrayList&lt;Item&gt;();\n    public ArrayList&lt;Item&gt; questItems = new ArrayList&lt;Item&gt;();\n    // Items Daur can use currently. These change often.\n    public Item item1, item2, item3;\n\n    public GameScreen mainScreen;\n    // The map on which the game is currently in (overworld, underworld, or houses).\n    public TiledMap map;\n    // The short-term storages.\n    public FirstDungeonStorage FDstorage;\n    // The preferences that keeps consistent data of the storage variables.\n    private Preferences prefs;\n\n    public Storage() {\n        // Sets the preferences, if there is a valid one. If there isn\'t a valid one, creates one anew.\n        prefs = Gdx.app.getPreferences("Fate\'s Reprise");\n        // Initializes all variables. These variables will be overwritten if there is game data to be loaded.\n        setUninitialized();\n    }\n\n    // Gets all the variables stored in the preferences, should they exist.\n    public boolean loadVariables() {\n        // If the preference does not have storage of the first variable, that means that the preference is not pre-existing.\n        // Therefore, it is useless to attempt to load any data.\n        if (!prefs.contains("coins"))\n            return false;\n        // If the storage is being utilized by the beginning input, returns true to avoid going further down in the method.\n        // This is to avoid any null pointer exceptions and avoid useless loading (as the game screen will load the\n        // game anyway).\n        if (mainScreen == null)\n            return true;\n        // Otherwise sets the variable values to the storage data.\n        // Gets all the necessary integer values that tell the state of the game.\n        coins = prefs.getInteger("coins");\n        dungeon = prefs.getInteger("dungeon");\n        health = prefs.getInteger("health");\n        maxHealth = prefs.getInteger("maxhealth");\n        heartPieces = prefs.getInteger("heartpieces");\n        // Integer values that hold the keys for Daur.\n        talk = prefs.getInteger("talk");\n        moveUp = prefs.getInteger("moveup");\n        moveRight = prefs.getInteger("moveright");\n        moveLeft = prefs.getInteger("moveleft");\n        moveDown = prefs.getInteger("movedown");\n        slotOne = prefs.getInteger("slotone");\n        slotTwo = prefs.getInteger("slottwo");\n        slotThree = prefs.getInteger("slotthree");\n        pause = prefs.getInteger("pause");\n        secondary = prefs.getInteger("secondary");\n        // The two cell values of the game.\n        cellX = prefs.getInteger("cellX");\n        cellY = prefs.getInteger("cellY");\n        // Main Quest stage and the Fairy Queen stage.\n        fairyQueenStage = prefs.getInteger("fairyqueenstage");\n        mainQuestStage = prefs.getInteger("mainqueststage");\n        // How many keys Daur has of each dungeon.\n        GHKeys = prefs.getInteger("GHKeys");\n        // The villager stages of the game.\n        for (int i = 0; i &lt; villagerStages.length; i ++)\n            villagerStages[i] = prefs.getInteger("villagerstages" + i);\n        // The boolean arrays that determine if triggers launch.\n        for (int i = 0; i &lt; bossDoors.length; i ++)\n            bossDoors[i] = prefs.getBoolean("bossdoors" + i);\n        for (int i = 0; i &lt; sages.length; i ++)\n            sages[i] = prefs.getBoolean("sages" + i);\n        for (int i = 0; i &lt; heartPiecesObtained.length; i ++)\n            heartPiecesObtained[i] = prefs.getBoolean("heartpiecesobtained" + i);\n        for (int i = 0; i &lt; chests.length; i ++)\n            chests[i] = prefs.getBoolean("chests" + i);\n        for (int i = 0; i &lt; lockedDoors.length; i ++)\n            lockedDoors[i] = prefs.getBoolean("lockeddoors" + i);\n        for (int i = 0; i &lt; maps.length; i ++)\n            maps[i] = prefs.getBoolean("maps" + i);\n        for (int i = 0; i &lt; compasses.length; i ++)\n            compasses[i] = prefs.getBoolean("compasses" + i);\n        for (int x = 0; x &lt; 16; x ++)\n            for (int y = 0; y &lt; 16; y ++)\n                explored[x][y] = prefs.getBoolean("explored" + x + "," + y);\n        // Uses the classname as the string to generate the item when loading a game. getItem method details more.\n        for (int i = 44; i &gt;= 0; i --)\n            items.add(0, getItem(prefs.getString("item" + i)));\n        for (int i = 44; i &gt;= 0; i --)\n            questItems.add(0, getItem(prefs.getString("questitem" + i)));\n        // Gets the items Daur has in the first, second, and third slot.\n        item1 = getItem(prefs.getString("itemone"));\n        item2 = getItem(prefs.getString("itemtwo"));\n        item3 = getItem(prefs.getString("itemthree"));\n        // Gets the map for the game.\n        switch (prefs.getInteger("map")) {\n            case 0:\n                map = mainScreen.world1.getMap();\n                break;\n            case 1:\n                map = mainScreen.world2.getMap();\n                break;\n            case 2:\n                map = mainScreen.world3.getMap();\n                break;\n        }\n        respawnX = prefs.getFloat("respawnX");\n        respawnY = prefs.getFloat("respawnY");\n        return true;\n    }\n\n    // Sets all the variables to their unmodified state.\n    private void setUninitialized() {\n        // Creates all the base keys for movement and such.\n        moveRight = Input.Keys.D;\n        moveLeft = Input.Keys.A;\n        moveUp = Input.Keys.W;\n        moveDown = Input.Keys.S;\n        talk = Input.Keys.F;\n        slotOne = Input.Keys.J;\n        slotTwo = Input.Keys.K;\n        slotThree = Input.Keys.L;\n        pause = Input.Keys.Z;\n        secondary = Input.Keys.X;\n        // Daur starts with zero coins.\n        coins = 0;\n        // Daur starts with 6 health.\n        health = 6;\n        // Daur has a max health of 6 at the beginning of the game.\n        maxHealth = 6;\n        heartPieces = 0;\n        // Initial cell of the game.\n        cellX = 0;\n        cellY = 15;\n        // Initializes all villager stages to zero.\n        for (int i = 0; i &lt; villagerStages.length; i++)\n            villagerStages[i] = 0;\n        // Adds all null items, as Daur does not start with any.\n        for (int i = 0; i &lt; 45; i++)\n            items.add(null);\n        // Adds all null quest items, as Daur does not start with any.\n        for (int i = 0; i &lt; 45; i++)\n            questItems.add(null);\n        // Sets the three item slots to null.\n        item1 = null;\n        item2 = null;\n        item3 = null;\n        // Dialogue stages (depending on how far Daur is in the game, sets the dialogue). There are 27 villagers.\n        villagerStages = new int[27];\n        // How far the Fairy Queen\'s events have progressed. Starts at zero.\n        fairyQueenStage = 0;\n        // How far the main quest has progressed. Starts at zero.\n        mainQuestStage = 0;\n        // How many keys Daur has for the respective dungeons. Starts at zero.\n        GHKeys = 0;\n        // The respawn X and Y of the respawn point. Used to set Daur\'s beginning position. Initializes to his starting\n        // position.\n        respawnX = 1;\n        respawnY = 16;\n        // Boss doors of the respective dungeons (opened or closed). All are initially closed.\n        bossDoors = new boolean[] {false, false, false, false, false, false};\n        // Which sages Daur has rescued.\n        sages = new boolean[] {false, false, false, false, false, false};\n        // Maps and compasses.\n        maps = new boolean[] {false, false, false, false, false, false};\n        compasses = new boolean[] {false, false, false, false, false, false};\n        // Which heart pieces Daur has obtained.\n        heartPiecesObtained = new boolean[] {false, false, false, false, false, false, false, false, false, false};\n        // Which chests have been opened.\n        chests = new boolean[] {false, false, false, false, false, false, false, false, false, false, false, false, false,\n                false, false, false, false, false, false, false, false, false, false};\n        // Which locked doors have been opened.\n        lockedDoors = new boolean[] {false, false, false, false, false, false, false, false, false, false, false, false,\n                false, false, false, false, false, false};\n        // Which areas have been explored.\n        explored = new boolean[16][16];\n        for (int x = 0; x &lt; 16; x ++)\n            for (int y = 0; y &lt; 16; y ++)\n                explored[x][y] = false;\n        // The hashmap of sounds.\n        sounds = new HashMap&lt;String, Sound&gt;();\n        // Adds all the sounds to the hashmap for easy reference.\n        sounds.put("bigboom", Gdx.audio.newSound(Gdx.files.internal("Sounds/bigboom.wav")));\n        sounds.put("bigbounce", Gdx.audio.newSound(Gdx.files.internal("Sounds/bigbounce.wav")));\n        sounds.put("bigeffect", Gdx.audio.newSound(Gdx.files.internal("Sounds/bigeffect.wav")));\n        sounds.put("boom1", Gdx.audio.newSound(Gdx.files.internal("Sounds/boom1.wav")));\n        sounds.put("boom2", Gdx.audio.newSound(Gdx.files.internal("Sounds/boom2.wav")));\n        sounds.put("boom3", Gdx.audio.newSound(Gdx.files.internal("Sounds/boom3.wav")));\n        sounds.put("bossdeath", Gdx.audio.newSound(Gdx.files.internal("Sounds/bossdeath.wav")));\n        sounds.put("bosshurt", Gdx.audio.newSound(Gdx.files.internal("Sounds/bosshurt.wav")));\n        sounds.put("bossminiexplosion", Gdx.audio.newSound(Gdx.files.internal("Sounds/bossminiexplosion.wav")));\n        sounds.put("bounce", Gdx.audio.newSound(Gdx.files.internal("Sounds/bounce.wav")));\n        sounds.put("bushcut1", Gdx.audio.newSound(Gdx.files.internal("Sounds/bushcut1.wav")));\n        sounds.put("bushcut2", Gdx.audio.newSound(Gdx.files.internal("Sounds/bushcut2.wav")));\n        sounds.put("charge", Gdx.audio.newSound(Gdx.files.internal("Sounds/charge.wav")));\n        sounds.put("chargeup", Gdx.audio.newSound(Gdx.files.internal("Sounds/chargeup.wav")));\n        sounds.put("chestappear", Gdx.audio.newSound(Gdx.files.internal("Sounds/chestappear.wav")));\n        sounds.put("chestopen", Gdx.audio.newSound(Gdx.files.internal("Sounds/chestopen.wav")));\n        sounds.put("click1", Gdx.audio.newSound(Gdx.files.internal("Sounds/click1.wav")));\n        sounds.put("click2", Gdx.audio.newSound(Gdx.files.internal("Sounds/click2.wav")));\n        sounds.put("click3", Gdx.audio.newSound(Gdx.files.internal("Sounds/click3.wav")));\n        sounds.put("click4", Gdx.audio.newSound(Gdx.files.internal("Sounds/click4.wav")));\n        sounds.put("click5", Gdx.audio.newSound(Gdx.files.internal("Sounds/click5.wav")));\n        sounds.put("click6", Gdx.audio.newSound(Gdx.files.internal("Sounds/click6.wav")));\n        sounds.put("click7", Gdx.audio.newSound(Gdx.files.internal("Sounds/click7.wav")));\n        sounds.put("click8", Gdx.audio.newSound(Gdx.files.internal("Sounds/click8.wav")));\n        sounds.put("click9", Gdx.audio.newSound(Gdx.files.internal("Sounds/click9.wav")));\n        sounds.put("click10", Gdx.audio.newSound(Gdx.files.internal("Sounds/click10.wav")));\n        sounds.put("coin1", Gdx.audio.newSound(Gdx.files.internal("Sounds/coin1.wav")));\n        sounds.put("coin2", Gdx.audio.newSound(Gdx.files.internal("Sounds/coin2.wav")));\n        sounds.put("coin3", Gdx.audio.newSound(Gdx.files.internal("Sounds/coin3.wav")));\n        sounds.put("confuse", Gdx.audio.newSound(Gdx.files.internal("Sounds/confuse.wav")));\n        sounds.put("daurhurt", Gdx.audio.newSound(Gdx.files.internal("Sounds/daurhurt.wav")));\n        sounds.put("death1", Gdx.audio.newSound(Gdx.files.internal("Sounds/death1.wav")));\n        sounds.put("death2", Gdx.audio.newSound(Gdx.files.internal("Sounds/death2.wav")));\n        sounds.put("defeat1", Gdx.audio.newSound(Gdx.files.internal("Sounds/defeat1.wav")));\n        sounds.put("defeat2", Gdx.audio.newSound(Gdx.files.internal("Sounds/defeat2.wav")));\n        sounds.put("defeat3", Gdx.audio.newSound(Gdx.files.internal("Sounds/defeat3.wav")));\n        sounds.put("dooropen", Gdx.audio.newSound(Gdx.files.internal("Sounds/dooropen.wav")));\n        sounds.put("doorslam1", Gdx.audio.newSound(Gdx.files.internal("Sounds/doorslam1.wav")));\n        sounds.put("doorslam2", Gdx.audio.newSound(Gdx.files.internal("Sounds/doorslam2.wav")));\n        sounds.put("drown", Gdx.audio.newSound(Gdx.files.internal("Sounds/drown.wav")));\n        sounds.put("dungeonopen", Gdx.audio.newSound(Gdx.files.internal("Sounds/dungeonopen.wav")));\n        sounds.put("effect1", Gdx.audio.newSound(Gdx.files.internal("Sounds/effect1.wav")));\n        sounds.put("effect2", Gdx.audio.newSound(Gdx.files.internal("Sounds/effect2.wav")));\n        sounds.put("effect3", Gdx.audio.newSound(Gdx.files.internal("Sounds/effect3.wav")));\n        sounds.put("effect4", Gdx.audio.newSound(Gdx.files.internal("Sounds/effect4.wav")));\n        sounds.put("effect5", Gdx.audio.newSound(Gdx.files.internal("Sounds/effect5.wav")));\n        sounds.put("effect6", Gdx.audio.newSound(Gdx.files.internal("Sounds/effect6.wav")));\n        sounds.put("effect7", Gdx.audio.newSound(Gdx.files.internal("Sounds/effect7.wav")));\n        sounds.put("effect8", Gdx.audio.newSound(Gdx.files.internal("Sounds/effect8.wav")));\n        sounds.put("electricity", Gdx.audio.newSound(Gdx.files.internal("Sounds/electricity.wav")));\n        sounds.put("enterstairs", Gdx.audio.newSound(Gdx.files.internal("Sounds/enterstairs.wav")));\n        sounds.put("error", Gdx.audio.newSound(Gdx.files.internal("Sounds/error.wav")));\n        sounds.put("explode1", Gdx.audio.newSound(Gdx.files.internal("Sounds/explode1.wav")));\n        sounds.put("explode2", Gdx.audio.newSound(Gdx.files.internal("Sounds/explode2.wav")));\n        sounds.put("explode3", Gdx.audio.newSound(Gdx.files.internal("Sounds/explode3.wav")));\n        sounds.put("explode4", Gdx.audio.newSound(Gdx.files.internal("Sounds/explode4.wav")));\n        sounds.put("explode5", Gdx.audio.newSound(Gdx.files.internal("Sounds/explode5.wav")));\n        sounds.put("fairyappear", Gdx.audio.newSound(Gdx.files.internal("Sounds/fairyappear.wav")));\n        sounds.put("fall1", Gdx.audio.newSound(Gdx.files.internal("Sounds/fall1.wav")));\n        sounds.put("fall2", Gdx.audio.newSound(Gdx.files.internal("Sounds/fall2.wav")));\n        sounds.put("fly1", Gdx.audio.newSound(Gdx.files.internal("Sounds/fly1.wav")));\n        sounds.put("fly2", Gdx.audio.newSound(Gdx.files.internal("Sounds/fly2.wav")));\n        sounds.put("grasswalk", Gdx.audio.newSound(Gdx.files.internal("Sounds/grasswalk.wav")));\n        sounds.put("heart", Gdx.audio.newSound(Gdx.files.internal("Sounds/heart.wav")));\n        sounds.put("hop", Gdx.audio.newSound(Gdx.files.internal("Sounds/hop.wav")));\n        sounds.put("hurt1", Gdx.audio.newSound(Gdx.files.internal("Sounds/hurt1.wav")));\n        sounds.put("hurt2", Gdx.audio.newSound(Gdx.files.internal("Sounds/hurt2.wav")));\n        sounds.put("jellyfishattack1", Gdx.audio.newSound(Gdx.files.internal("Sounds/jellyfishattack1.wav")));\n        sounds.put("jellyfishattack2", Gdx.audio.newSound(Gdx.files.internal("Sounds/jellyfishattack2.wav")));\n        sounds.put("jump", Gdx.audio.newSound(Gdx.files.internal("Sounds/jump.wav")));\n        sounds.put("landing", Gdx.audio.newSound(Gdx.files.internal("Sounds/landing.wav")));\n        sounds.put("launch1", Gdx.audio.newSound(Gdx.files.internal("Sounds/launch1.wav")));\n        sounds.put("launch2", Gdx.audio.newSound(Gdx.files.internal("Sounds/launch2.wav")));\n        sounds.put("launch3", Gdx.audio.newSound(Gdx.files.internal("Sounds/launch3.wav")));\n        sounds.put("launch4", Gdx.audio.newSound(Gdx.files.internal("Sounds/launch4.wav")));\n        sounds.put("launch5", Gdx.audio.newSound(Gdx.files.internal("Sounds/launch5.wav")));\n        sounds.put("launch6", Gdx.audio.newSound(Gdx.files.internal("Sounds/launch6.wav")));\n        sounds.put("lose1", Gdx.audio.newSound(Gdx.files.internal("Sounds/lose1.wav")));\n        sounds.put("lose2", Gdx.audio.newSound(Gdx.files.internal("Sounds/lose2.wav")));\n        sounds.put("lose3", Gdx.audio.newSound(Gdx.files.internal("Sounds/lose3.wav")));\n        sounds.put("lose4", Gdx.audio.newSound(Gdx.files.internal("Sounds/lose4.wav")));\n        sounds.put("mysterious", Gdx.audio.newSound(Gdx.files.internal("Sounds/mysterious.wav")));\n        sounds.put("powerup1", Gdx.audio.newSound(Gdx.files.internal("Sounds/powerup1.wav")));\n        sounds.put("powerup2", Gdx.audio.newSound(Gdx.files.internal("Sounds/powerup2.wav")));\n        sounds.put("powerup3", Gdx.audio.newSound(Gdx.files.internal("Sounds/powerup3.wav")));\n        sounds.put("powerup4", Gdx.audio.newSound(Gdx.files.internal("Sounds/powerup4.wav")));\n        sounds.put("powerup5", Gdx.audio.newSound(Gdx.files.internal("Sounds/powerup5.wav")));\n        sounds.put("powerup6", Gdx.audio.newSound(Gdx.files.internal("Sounds/powerup6.wav")));\n        sounds.put("pulse", Gdx.audio.newSound(Gdx.files.internal("Sounds/pulse.wav")));\n        sounds.put("push", Gdx.audio.newSound(Gdx.files.internal("Sounds/push.wav")));\n        sounds.put("refill", Gdx.audio.newSound(Gdx.files.internal("Sounds/refill.wav")));\n        sounds.put("shake", Gdx.audio.newSound(Gdx.files.internal("Sounds/shake.wav")));\n        sounds.put("sickle", Gdx.audio.newSound(Gdx.files.internal("Sounds/sickle.wav")));\n        sounds.put("success1", Gdx.audio.newSound(Gdx.files.internal("Sounds/success1.wav")));\n        sounds.put("success2", Gdx.audio.newSound(Gdx.files.internal("Sounds/success2.wav")));\n        sounds.put("swim", Gdx.audio.newSound(Gdx.files.internal("Sounds/swim.wav")));\n        sounds.put("swordslash1", Gdx.audio.newSound(Gdx.files.internal("Sounds/swordslash1.wav")));\n        sounds.put("swordslash2", Gdx.audio.newSound(Gdx.files.internal("Sounds/swordslash2.wav")));\n        sounds.put("swordslash3", Gdx.audio.newSound(Gdx.files.internal("Sounds/swordslash3.wav")));\n        sounds.put("swordslash4", Gdx.audio.newSound(Gdx.files.internal("Sounds/swordslash4.wav")));\n        sounds.put("teleport", Gdx.audio.newSound(Gdx.files.internal("Sounds/teleport.wav")));\n        sounds.put("textend", Gdx.audio.newSound(Gdx.files.internal("Sounds/textend.wav")));\n        sounds.put("textletter", Gdx.audio.newSound(Gdx.files.internal("Sounds/textletter.wav")));\n        sounds.put("throw", Gdx.audio.newSound(Gdx.files.internal("Sounds/throw.wav")));\n        sounds.put("tremor1", Gdx.audio.newSound(Gdx.files.internal("Sounds/tremor1.wav")));\n        sounds.put("tremor2", Gdx.audio.newSound(Gdx.files.internal("Sounds/tremor2.wav")));\n        sounds.put("tremor3", Gdx.audio.newSound(Gdx.files.internal("Sounds/tremor3.wav")));\n        sounds.put("unlock", Gdx.audio.newSound(Gdx.files.internal("Sounds/unlock.wav")));\n        sounds.put("wade1", Gdx.audio.newSound(Gdx.files.internal("Sounds/wade1.wav")));\n        sounds.put("wade2", Gdx.audio.newSound(Gdx.files.internal("Sounds/wade2.wav")));\n        sounds.put("watercharge", Gdx.audio.newSound(Gdx.files.internal("Sounds/watercharge.wav")));\n        sounds.put("zap1", Gdx.audio.newSound(Gdx.files.internal("Sounds/zap1.wav")));\n        sounds.put("zap2", Gdx.audio.newSound(Gdx.files.internal("Sounds/zap2.wav")));\n        sounds.put("zap3", Gdx.audio.newSound(Gdx.files.internal("Sounds/zap3.wav")));\n        sounds.put("zap4", Gdx.audio.newSound(Gdx.files.internal("Sounds/zap4.wav")));\n        // Adds all the music to the music hashmap.\n        music = new HashMap&lt;String, Music&gt;();\n        // Adds all the music fo easy hashmap reference.\n        music.put("bossmusic", Gdx.audio.newMusic(Gdx.files.internal("Music/Boss.mp3")));\n        music.put("bossvictorymusic", Gdx.audio.newMusic(Gdx.files.internal("Music/BossVictory.mp3")));\n        music.put("carthellvillagemusic", Gdx.audio.newMusic(Gdx.files.internal("Music/CarthellVillage.mp3")));\n        music.put("cavemusic", Gdx.audio.newMusic(Gdx.files.internal("Music/Cave.mp3")));\n        music.put("creepymusic", Gdx.audio.newMusic(Gdx.files.internal("Music/CreepyMusic.mp3")));\n        music.put("fairyfountainmusic", Gdx.audio.newMusic(Gdx.files.internal("Music/FairyFountain.mp3")));\n        music.put("forestmusic", Gdx.audio.newMusic(Gdx.files.internal("Music/ForestMusic.mp3")));\n        music.put("forestmusicloop", Gdx.audio.newMusic(Gdx.files.internal("Music/ForestMusicLoop.mp3")));\n        music.put("gameover", Gdx.audio.newMusic(Gdx.files.internal("Music/GameOver.mp3")));\n        music.put("greathollowmusic", Gdx.audio.newMusic(Gdx.files.internal("Music/GreatHollow.mp3")));\n        music.put("housemusic", Gdx.audio.newMusic(Gdx.files.internal("Music/HouseMusic.mp3")));\n        music.put("minibossmusic", Gdx.audio.newMusic(Gdx.files.internal("Music/Miniboss.mp3")));\n        music.put("mysteriousmusic", Gdx.audio.newMusic(Gdx.files.internal("Music/MysteriousMusic.mp3")));\n        music.put("mysteriousmusicloop", Gdx.audio.newMusic(Gdx.files.internal("Music/MysteriousMusicLoop.mp3")));\n        music.put("overworldtheme", Gdx.audio.newMusic(Gdx.files.internal("Music/OverworldTheme.mp3")));\n        music.put("sagemeetingmusic", Gdx.audio.newMusic(Gdx.files.internal("Music/SageMeeting.mp3")));\n        music.put("shopmusic", Gdx.audio.newMusic(Gdx.files.internal("Music/Shop.mp3")));\n        music.put("strangemusic", Gdx.audio.newMusic(Gdx.files.internal("Music/StrangeMusic.mp3")));\n        music.put("titlescreenmusic", Gdx.audio.newMusic(Gdx.files.internal("Music/TitleScreen.mp3")));\n        music.put("titlescreenmusicloop", Gdx.audio.newMusic(Gdx.files.internal("Music/TitleScreenLoop.mp3")));\n        music.put("trendymusic", Gdx.audio.newMusic(Gdx.files.internal("Music/TrendyMusic.mp3")));\n        music.put("victorymusic", Gdx.audio.newMusic(Gdx.files.internal("Music/Victory.mp3")));\n    }\n\n    // Reinitializes the preferences and all the variables. This is to create a new, fresh game without any previous\n    // variables lurking around.\n    public void wipe() {\n        // Sets all variables to uninitialized.\n        setUninitialized();\n    }\n\n    // Stores all variables under string keys. This is to allow for future loading.\n    public void store() {\n        // Puts all the necessary integer values that tell the state of the game.\n        prefs.putInteger("coins", coins);\n        prefs.putInteger("dungeon", dungeon);\n        prefs.putInteger("health", health);\n        prefs.putInteger("maxhealth", maxHealth);\n        prefs.putInteger("heartpieces", heartPieces);\n        // Integer values that hold the keys for Daur.\n        prefs.putInteger("talk", talk);\n        prefs.putInteger("moveup", moveUp);\n        prefs.putInteger("moveright", moveRight);\n        prefs.putInteger("moveleft", moveLeft);\n        prefs.putInteger("movedown", moveDown);\n        prefs.putInteger("slotone", slotOne);\n        prefs.putInteger("slottwo", slotTwo);\n        prefs.putInteger("slotthree", slotThree);\n        prefs.putInteger("pause", pause);\n        prefs.putInteger("secondary", secondary);\n        // The two cell values of the game.\n        prefs.putInteger("cellX", cellX);\n        prefs.putInteger("cellY", cellY);\n        // Main Quest stage and the Fairy Queen stage.\n        prefs.putInteger("fairyqueenstage", fairyQueenStage);\n        prefs.putInteger("mainqueststage", mainQuestStage);\n        // How many keys Daur has of each dungeon.\n        prefs.putInteger("GHKeys", GHKeys);\n        // The villager stages of the game.\n        for (int i = 0; i &lt; villagerStages.length; i ++)\n            prefs.putInteger("villagerstages" + i, villagerStages[i]);\n        // The boolean arrays that determine if triggers launch.\n        for (int i = 0; i &lt; bossDoors.length; i ++)\n            prefs.putBoolean("bossdoors" + i, bossDoors[i]);\n        for (int i = 0; i &lt; sages.length; i ++)\n            prefs.putBoolean("sages" + i, sages[i]);\n        for (int i = 0; i &lt; heartPiecesObtained.length; i ++)\n            prefs.putBoolean("heartpiecesobtained" + i, heartPiecesObtained[i]);\n        for (int i = 0; i &lt; chests.length; i ++)\n            prefs.putBoolean("chests" + i, chests[i]);\n        for (int i = 0; i &lt; lockedDoors.length; i ++)\n            prefs.putBoolean("lockeddoors" + i, lockedDoors[i]);\n        for (int i = 0; i &lt; maps.length; i ++)\n            prefs.putBoolean("maps" + i, maps[i]);\n        for (int i = 0; i &lt; compasses.length; i ++)\n            prefs.putBoolean("compasses" + i, compasses[i]);\n        for (int x = 0; x &lt; 16; x ++)\n            for (int y = 0; y &lt; 16; y ++)\n                prefs.putBoolean("explored" + x + "," + y, explored[x][y]);\n        // Puts all the items in a string list.\n        // Puts the classname as the string to generate the item when loading a game. If there is no such item, simply\n        // puts a null string.\n        for (int i = 0; i &lt; items.size(); i ++) {\n            if (items.get(i) != null)\n                prefs.putString("item" + i, items.get(i).getClass().toString());\n            else\n                prefs.putString("item" + i, "null");\n        }\n        for (int i = 0; i &lt; questItems.size(); i ++) {\n            if (questItems.get(i) != null)\n                prefs.putString("questitem" + i, questItems.get(i).getClass().toString());\n            else\n                prefs.putString("questitem" + i, "null");\n        }\n        // Puts the items Daur has in the first, second, and third slot.\n        if (item1 != null)\n            prefs.putString("itemone", item1.getClass().toString());\n        else\n            prefs.putString("itemone", "null");\n        if (item2 != null)\n            prefs.putString("itemtwo", item2.getClass().toString());\n        else\n            prefs.putString("itemtwo", "null");\n        if (item3 != null)\n            prefs.putString("itemthree", item3.getClass().toString());\n        else\n            prefs.putString("itemthree", "null");\n        // Saves the map in the form of 0 (overworld), 1 (underworld), or 2 (houses).\n        if (map.equals(mainScreen.world1.getMap()))\n            prefs.putInteger("map", 0);\n        if (map.equals(mainScreen.world2.getMap()))\n            prefs.putInteger("map", 1);\n        if (map.equals(mainScreen.world3.getMap()))\n            prefs.putInteger("map", 2);\n        // Puts the two respawn floats.\n        prefs.putFloat("respawnX", respawnX);\n        prefs.putFloat("respawnY", respawnY);\n        // Saves all the preferences put.\n        prefs.flush();\n    }\n\n    // Returns an item based on the class name given. This is useful for loading items.\n    private Item getItem(String string) {\n        // If there is a null string, returns null.\n        if (string.equals("null"))\n            return null;\n        // Basic Sword Item.\n        if (string.equals("class com.inoculates.fatesreprise.Items.BasicSwordItem"))\n            return new BasicSwordItem(mainScreen.daurAtlases.get(2));\n        // Concussive Shot Item.\n        if (string.equals("class com.inoculates.fatesreprise.Items.ConcussiveShotItem"))\n            return new ConcussiveShotItem(mainScreen.daurAtlases.get(2));\n        // Etc.\n        if (string.equals("class com.inoculates.fatesreprise.Items.FlameGoutItem"))\n            return new FlameGoutItem(mainScreen.daurAtlases.get(2));\n        if (string.equals("class com.inoculates.fatesreprise.Items.GiantsMightItem"))\n            return new GiantsMightItem(mainScreen.daurAtlases.get(2));\n        if (string.equals("class com.inoculates.fatesreprise.Items.GreatHollowBossKey"))\n            return new GreatHollowBossKey(mainScreen.daurAtlases.get(2));\n        if (string.equals("class com.inoculates.fatesreprise.Items.GreatHollowKey"))\n            return new GreatHollowKey(mainScreen.daurAtlases.get(2));\n        if (string.equals("class com.inoculates.fatesreprise.Items.LiveWireItem"))\n            return new LiveWireItem(mainScreen.daurAtlases.get(2));\n        if (string.equals("class com.inoculates.fatesreprise.Items.MinorHealthPotionItem"))\n            return new MinorHealthPotionItem(mainScreen.daurAtlases.get(2));\n        if (string.equals("class com.inoculates.fatesreprise.Items.MinorTeleportItem"))\n            return new MinorTeleportItem(mainScreen.daurAtlases.get(2));\n        if (string.equals("class com.inoculates.fatesreprise.Items.MirrorImageItem"))\n            return new MirrorImageItem(mainScreen.daurAtlases.get(2));\n        if (string.equals("class com.inoculates.fatesreprise.Items.OakStaff"))\n            return new OakStaff(mainScreen.daurAtlases.get(2));\n        if (string.equals("class com.inoculates.fatesreprise.Items.PlanarShiftItem"))\n            return new PlanarShiftItem(mainScreen.daurAtlases.get(2));\n        if (string.equals("class com.inoculates.fatesreprise.Items.PulverizeItem"))\n            return new PulverizeItem(mainScreen.daurAtlases.get(2));\n        if (string.equals("class com.inoculates.fatesreprise.Items.ReflectItem"))\n            return new ReflectItem(mainScreen.daurAtlases.get(2));\n        if (string.equals("class com.inoculates.fatesreprise.Items.ShieldItem"))\n            return new ShieldItem(mainScreen.daurAtlases.get(2));\n        if (string.equals("class com.inoculates.fatesreprise.Items.StoneFistItem"))\n            return new StoneFistItem(mainScreen.daurAtlases.get(2));\n        if (string.equals("class com.inoculates.fatesreprise.Items.SwimGear"))\n            return new SwimGear(mainScreen.daurAtlases.get(2));\n        if (string.equals("class com.inoculates.fatesreprise.Items.WindSickleItem"))\n            return new WindSickleItem(mainScreen.daurAtlases.get(2));\n        if (string.equals("class com.inoculates.fatesreprise.Items.ZephyrsWispItem"))\n            return new ZephyrsWispItem(mainScreen.daurAtlases.get(2));\n        return null;\n    }\n\n    public void setMainScreen(GameScreen screen) {\n        mainScreen = screen;\n        // Initializes the short-term storages.\n        FDstorage = new FirstDungeonStorage(mainScreen, this);\n    }\n\n    // Sets the cell so that the game can persistently know which cell Daur is in.\n    public void setCells(int cellX, int cellY) {\n        this.cellX = cellX;\n        this.cellY = cellY;\n    }\n\n    // Increments the fairy queen stage, for dialogue and story related purposes.\n    public void setFairyQueenStage() {\n        fairyQueenStage ++;\n    }\n\n    // Increments the main quest stage, for dialogue and story related purposes.\n    public void setMainQuestStage() {\n        mainQuestStage ++;\n    }\n\n    // Increments the village state, and saves it, so that Daur will always initiate a different dialogue from then on.\n    public void setVillagerStage(int villager) {\n        for (int i = 0; i &lt; villagerStages.length; i ++)\n            if (i == villager)\n                villagerStages[i] ++;\n    }\n\n    // This sets the village state to a specific value. Useful for regression.\n    public void setVillagerStageSp(int villager, int stage) {\n        for (int i = 0; i &lt; villagerStages.length; i ++)\n            if (i == villager)\n                villagerStages[i] = stage;\n    }\n\n    // This increases or decreases the level Daur is currently on.\n    public void setLevel(int magnitude) {\n        switch (dungeon) {\n            default:\n                FDstorage.setLevel(magnitude);\n                break;\n            case 0:\n                FDstorage.setLevel(magnitude);\n                break;\n        }\n    }\n\n    // This tells the save data that the corresponding chest has been opened.\n    public void setChest(int number) {\n        chests[number] = true;\n    }\n\n    public void setSage(int i) {\n        sages[i] = true;\n    }\n\n    public void setHeartPiece(int i) {\n        heartPiecesObtained[i] = true;\n    }\n\n    public void setHealth(int health) {\n        this.health = health;\n    }\n\n    public void incHeartPiece() {\n        heartPieces ++;\n    }\n\n    // Increments the key based on the item type given.\n    public void addKey(Item key) {\n        if (key instanceof GreatHollowSmallKey)\n            GHKeys ++;\n    }\n\n    // Adds the compass to the proper dungeon so that when Daur uses his map he can see all the chests that could spawn,\n    // as well as where the boss/mini-boss is located.\n    public void addCompass() {\n        compasses[dungeon] = true;\n    }\n\n    // Same but for map. In this case, all areas in the dungeon are illuminated to the player.\n    public void addMap() {\n        maps[dungeon] = true;\n    }\n\n    // Returns true if Daur has the compass for the dungeon he is currently in.\n    public boolean hasCompass() {\n        return compasses[dungeon];\n    }\n\n    // Returns true if Daur has the map for the dungeon he is currently in.\n    public boolean hasMap() {\n        return dungeon &gt;= 0 && maps[dungeon];\n    }\n\n    // Removes the key based on the dungeon Daur is in currently.\n    public void removeKey() {\n        switch (dungeon) {\n            case 0:\n                GHKeys --;\n                break;\n        }\n    }\n\n    // Unlocks the door (sets the door boolean value to false).\n    public void setUnlocked(int dNum) {\n        lockedDoors[dNum] = true;\n    }\n\n    // Unlocks the boss door (with the same reasoning as above).\n    public void setBossUnlocked() {\n        bossDoors[dungeon] = true;\n    }\n\n    // Informs the game which dungeon Daur is in currently.\n    public void setDungeon(int dungeon) {\n        this.dungeon = dungeon;\n    }\n\n    // Sets the volume of the current soundtrack playing.\n    public void setVolume(float volume) {\n        // First finds the music that is currently playing.\n        // If the Boss Music is currently playing.\n        if (music.get("bossmusic").isPlaying())\n            music.get("bossmusic").setVolume(volume);\n        // If the Boss Victory Music is currently playing.\n        if (music.get("bossvictorymusic").isPlaying())\n            music.get("bossvictorymusic").setVolume(volume);\n        // Etc.\n        if (music.get("carthellvillagemusic").isPlaying())\n            music.get("carthellvillagemusic").setVolume(volume);\n        if (music.get("cavemusic").isPlaying())\n            music.get("cavemusic").setVolume(volume);\n        if (music.get("bossvictorymusic").isPlaying())\n            music.get("bossvictorymusic").setVolume(volume);\n        if (music.get("fairyfountainmusic").isPlaying())\n            music.get("fairyfountainmusic").setVolume(volume);\n        if (music.get("forestmusic").isPlaying())\n            music.get("forestmusic").setVolume(volume);\n        if (music.get("forestmusicloop").isPlaying())\n            music.get("forestmusicloop").setVolume(volume);\n        if (music.get("greathollowmusic").isPlaying())\n            music.get("greathollowmusic").setVolume(volume);\n        if (music.get("housemusic").isPlaying())\n            music.get("housemusic").setVolume(volume);\n        if (music.get("minibossmusic").isPlaying())\n            music.get("minibossmusic").setVolume(volume);\n        if (music.get("mysteriousmusic").isPlaying())\n            music.get("mysteriousmusic").setVolume(volume);\n        if (music.get("mysteriousmusicloop").isPlaying())\n            music.get("mysteriousmusicloop").setVolume(volume);\n        if (music.get("overworldtheme").isPlaying())\n            music.get("overworldtheme").setVolume(volume);\n        if (music.get("shopmusic").isPlaying())\n            music.get("shopmusic").setVolume(volume);\n        if (music.get("strangemusic").isPlaying())\n            music.get("strangemusic").setVolume(volume);\n        if (music.get("titlescreenmusic").isPlaying())\n            music.get("titlescreenmusic").setVolume(volume);\n        if (music.get("titlescreenmusicloop").isPlaying())\n            music.get("titlescreenmusicloop").setVolume(volume);\n        if (music.get("trendymusic").isPlaying())\n            music.get("trendymusic").setVolume(volume);\n    }\n\n    // Same as the above method, but stops music instead of setting its volume.\n    public void stopMusic() {\n        // First finds the music that is currently playing.\n        // If the Boss Music is currently playing.\n        if (music.get("bossmusic").isPlaying())\n            music.get("bossmusic").stop();\n        // If the Boss Victory Music is currently playing.\n        if (music.get("bossvictorymusic").isPlaying())\n            music.get("bossvictorymusic").stop();\n        // Etc.\n        if (music.get("carthellvillagemusic").isPlaying())\n            music.get("carthellvillagemusic").stop();\n        if (music.get("cavemusic").isPlaying())\n            music.get("cavemusic").stop();\n        if (music.get("bossvictorymusic").isPlaying())\n            music.get("bossvictorymusic").stop();\n        if (music.get("fairyfountainmusic").isPlaying())\n            music.get("fairyfountainmusic").stop();\n        if (music.get("forestmusic").isPlaying())\n            music.get("forestmusic").stop();\n        if (music.get("forestmusicloop").isPlaying())\n            music.get("forestmusicloop").stop();\n        if (music.get("greathollowmusic").isPlaying())\n            music.get("greathollowmusic").stop();\n        if (music.get("housemusic").isPlaying())\n            music.get("housemusic").stop();\n        if (music.get("minibossmusic").isPlaying())\n            music.get("minibossmusic").stop();\n        if (music.get("mysteriousmusic").isPlaying())\n            music.get("mysteriousmusic").stop();\n        if (music.get("mysteriousmusicloop").isPlaying())\n            music.get("mysteriousmusicloop").stop();\n        if (music.get("overworldtheme").isPlaying())\n            music.get("overworldtheme").stop();\n        if (music.get("shopmusic").isPlaying())\n            music.get("shopmusic").stop();\n        if (music.get("strangemusic").isPlaying())\n            music.get("strangemusic").stop();\n        if (music.get("titlescreenmusic").isPlaying())\n            music.get("titlescreenmusic").stop();\n        if (music.get("titlescreenmusicloop").isPlaying())\n            music.get("titlescreenmusicloop").stop();\n        if (music.get("trendymusic").isPlaying())\n            music.get("trendymusic").stop();\n    }\n\n    // When a new heart piece is obtained increases health and sets heart pieces to zero.\n    public void fillHeart() {\n        heartPieces = 0;\n        maxHealth += 2;\n    }\n\n    // Sets the respawn point.\n    public void setRespawnPoint(float x, float y) {\n        respawnX = x;\n        respawnY = y;\n    }\n\n    // Sets the cell to be explored.\n    public void setExplored(int x, int y) {\n        explored[x][y] = true;\n    }\n\n    public void incMaxHealth() {\n        maxHealth += 2;\n    }\n\n    public void setCoins(int coins) {\n        this.coins = coins;\n    }\n\n    public void setItem1(Item item) {\n        item1 = item;\n    }\n\n    public void setItem2(Item item) {\n        item2 = item;\n    }\n\n    public void setItem3(Item item) {\n        item3 = item;\n    }\n\n    public void setMap(TiledMap map) {\n        this.map = map;\n    }\n\n\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},'package com.inoculates.fatesreprise.Screens;\n\nimport com.badlogic.gdx.Game;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.Screen;\nimport com.badlogic.gdx.assets.AssetManager;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.OrthographicCamera;\nimport com.badlogic.gdx.graphics.Texture;\nimport com.badlogic.gdx.graphics.g2d.*;\nimport com.badlogic.gdx.graphics.glutils.ShaderProgram;\nimport com.badlogic.gdx.maps.tiled.TiledMap;\nimport com.badlogic.gdx.maps.tiled.TiledMapTile;\nimport com.badlogic.gdx.maps.tiled.TiledMapTileLayer;\nimport com.badlogic.gdx.maps.tiled.TmxMapLoader;\nimport com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer;\nimport com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile;\nimport com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile;\nimport com.badlogic.gdx.math.MathUtils;\nimport com.badlogic.gdx.utils.Array;\nimport com.badlogic.gdx.utils.TimeUtils;\nimport com.badlogic.gdx.utils.Timer;\nimport com.inoculates.fatesreprise.Characters.AdvSprite;\nimport com.inoculates.fatesreprise.Characters.*;\nimport com.inoculates.fatesreprise.Characters.Character;\nimport com.inoculates.fatesreprise.Consumables.Consumable;\nimport com.inoculates.fatesreprise.Effects.Effect;\nimport com.inoculates.fatesreprise.Events.MessengerMeeting;\nimport com.inoculates.fatesreprise.Fog.Mask;\nimport com.inoculates.fatesreprise.InputProcessor.DaurInput;\nimport com.inoculates.fatesreprise.Interactables.Interactable;\nimport com.inoculates.fatesreprise.Items.Item;\nimport com.inoculates.fatesreprise.MeleeWeapons.BasicSword;\nimport com.inoculates.fatesreprise.MeleeWeapons.MeleeWeapon;\nimport com.inoculates.fatesreprise.Projectiles.Projectile;\nimport com.inoculates.fatesreprise.Spells.Spell;\nimport com.inoculates.fatesreprise.Storage.Storage;\nimport com.inoculates.fatesreprise.Text.Dialogue;\nimport com.inoculates.fatesreprise.Text.TextBackground;\nimport com.inoculates.fatesreprise.UI.UI;\nimport com.inoculates.fatesreprise.Worlds.Houses;\nimport com.inoculates.fatesreprise.Worlds.UnderWorld;\nimport com.inoculates.fatesreprise.Worlds.UpperWorld;\nimport com.inoculates.fatesreprise.Worlds.World;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\n\n// This is the game screen that is responsible for the rendering and updating of the game.\npublic class GameScreen implements Screen {\n    // These objects are involved in the rendering of the map, except for the storage object, which stores information.\n    public Batch batch;\n    public OrthographicCamera camera;\n    public TiledMap map;\n    public TiledMapTile blankTile, springBushTile, summerBushTile, fallBushTile, winterBushTile, brambleTile, springGrassTile,\n    summerGrassTile, fallGrassTile, winterGrassTile;\n    public OrthogonalTiledMapRenderer renderer;\n    public Storage storage;\n    public UpperWorld world1;\n    public UnderWorld world2;\n    public Houses world3;\n\n    // Daur\'s input processor.\n    private DaurInput interpreter1;\n\n    // The main character of the game.\n    public Daur daur;\n    // Mask that fades the game in and out.\n    public Mask mask;\n    // Defeat mask that is used only if Daur has lost.\n    private Mask defeatMask;\n\n    // All textures used for frames and animations. These are stored as texture atlases for compression and ease of use.\n    public Array&lt;TextureAtlas&gt; daurAtlases = new Array&lt;TextureAtlas&gt;();\n    public Array&lt;TextureAtlas&gt; characterAtlases = new Array&lt;TextureAtlas&gt;();\n    public Array&lt;TextureAtlas&gt; miscAtlases = new Array&lt;TextureAtlas&gt;();\n\n    // These are the rendering lists for the game. Each array list is iterated through to draw the object.\n    public ArrayList&lt;Effect&gt; effects = new ArrayList&lt;Effect&gt;();\n    public ArrayList&lt;Item&gt; items = new ArrayList&lt;Item&gt;();\n    public ArrayList&lt;Spell&gt; spells = new ArrayList&lt;Spell&gt;();\n    public ArrayList&lt;Projectile&gt; projectiles = new ArrayList&lt;Projectile&gt;();\n    public ArrayList&lt;MeleeWeapon&gt; meleeWeapons = new ArrayList&lt;MeleeWeapon&gt;();\n    public ArrayList&lt;Interactable&gt; interactables = new ArrayList&lt;Interactable&gt;();\n    public ArrayList&lt;Consumable&gt; consumables = new ArrayList&lt;Consumable&gt;();\n    public ArrayList&lt;Character&gt; characters1 = new ArrayList&lt;Character&gt;();\n    public ArrayList&lt;Character&gt; characters2 = new ArrayList&lt;Character&gt;();\n    public ArrayList&lt;Character&gt; characters3 = new ArrayList&lt;Character&gt;();\n    public ArrayList&lt;Character&gt; charIterator = new ArrayList&lt;Character&gt;();\n    public ArrayList&lt;Character&gt; drawnSprites = new ArrayList&lt;Character&gt;();\n    public Array&lt;UI&gt; UIS = new Array&lt;UI&gt;();\n\n    // These two objects are drawn to create the dialogue box.\n    public Dialogue currentTextBox;\n    public TextBackground textBackground;\n\n    // The game class, which is what the libgdx program runs.\n    private Game game;\n    // The three shaders that are used in the game rendering. The inverted shader is responsible for rendering\n    // wounded characters by inverting the color of the character. The current map shader is used to change how the\n    // tile map is rendered based on the area Daur is in. The destruct shader is used for bosses or minibosses that\n    // are dying.\n    private ShaderProgram invertedShader;\n    private ShaderProgram destructShader;\n    private ShaderProgram currentMapShader;\n\n    // This is the public timer for all objects that require a timer. The use of a single timer is to freeze it during\n    // pauses.\n    public Timer globalTimer = new Timer();\n    // Delay used to freeze timer tasks.\n    private long timerDelay;\n\n    // This boolean stops the controls screen initiation from occurring too much. The paused boolean dictates whether\n    // objects will update themselves. Paused essentially stops time.\n    private boolean frozen = false, paused = false;\n\n    // These are the layers of the tiledmap.\n    private int[] fog = new int[] {0}, objects = new int[] {1}, foreground = new int[] {2}, background = new int[] {3};\n\n    public GameScreen (Game game, Storage storage) {\n\t\tthis.game = game;\n        this.storage = storage;\n        // Informs the storage object the current screen is the game screen.\n        storage.setMainScreen(this);\n        // Creates the renderer, the camera, and the batch.\n        renderer = new OrthogonalTiledMapRenderer(null);\n        camera = new OrthographicCamera();\n        batch = renderer.getSpriteBatch();\n        // Fills in the details of the world (characters, objects, etc).\n        generateWorld();\n        // Sets the interactable tiles of the world (bush and other things).\n        setTiles();\n        // Initializes the first input processor and the shaders.\n        interpreter1 = new DaurInput(this, storage);\n        // Inverted shader.\n        invertedShader = new ShaderProgram(Gdx.files.internal("Shaders/character.vert"), Gdx.files.internal("Shaders/character.frag"));\n        // Destruct shader (for minibosses and bosses).\n        destructShader = new ShaderProgram(Gdx.files.internal("Shaders/character.vert"), Gdx.files.internal("Shaders/destruct.frag"));\n\n        // Initializes tile map.\n        setTileMap(0);\n        // Get the layer and sets the camera position.\n        TiledMapTileLayer layer = (TiledMapTileLayer) map.getLayers().get(0);\n        camera.position.set(layer.getTileWidth() * ((storage.cellX) * 10) + layer.getTileWidth() * 5,\n                layer.getTileHeight() * ((storage.cellY) * 10) + layer.getTileHeight() * 5, 0);\n\n        // Does NOT allow any shading misspellings to stop the program.\n        ShaderProgram.pedantic = false;\n    }\n\n    public void newGame() {\n        // Sets tile map and then creates the beginning event: the messenger meeting.\n        setTileMap(1);\n        // Wipes all data.\n        storage.wipe();\n        // Beginning event.\n        MessengerMeeting meeting = new MessengerMeeting(map, this);\n        // Creates the quest events. They should all launch as none have been completed as of yet.\n        world1.setQuestEvents();\n        world2.setQuestEvents();\n        world3.setQuestEvents();\n    }\n\n    public void loadGame() {\n        // Makes storage load all the variables from the preferences.\n        storage.loadVariables();\n        // Sets the tile map in accordance with the one given by the storage.\n        if (storage.map.equals(world1.getMap()))\n            setTileMap(0);\n        else if (storage.map.equals(world2.getMap()))\n            setTileMap(1);\n        else\n            setTileMap(3);\n        // Loads Daur into the game via his respawn point.\n        daur = new Daur(this, map, daurAtlases.get(0));\n        daur.setPosition(storage.respawnX, storage.respawnY);\n        daur.setRespawnPoint();\n        daur.setSpawnPoint(storage.respawnX, storage.respawnY);\n        // Sets camera instantly and transitions.\n        getWorld(map).setCameraInstantly();\n        world1.setQuestEvents();\n        world2.setQuestEvents();\n        world3.setQuestEvents();\n        transition(Color.BLACK);\n        // Plays the proper music.\n        getWorld(storage.map).checkMusicTransition();\n    }\n\n    // Sets the input processor and updates the mask.\n\t@Override\n\tpublic void show () {\n        Gdx.input.setInputProcessor(interpreter1);\n        mask.setPosition(camera.position.x - camera.viewportWidth / 2, camera.position.y - camera.viewportHeight / 2);\n        defeatMask.setPosition(camera.position.x - camera.viewportWidth / 2, camera.position.y - camera.viewportHeight / 2);\n    }\n\n    // Renders all objects, and updates them.\n\t@Override\n\tpublic void render (float delta) {\n        update();\n        // Ensures that the camera\'s position rests on an int. This is to ensure that there is no tile shearing.\n        camera.position.set(MathUtils.round(camera.position.x), MathUtils.round(camera.position.y), 0);\n        camera.update();\n\n        // Clears canvas and then renders the art over it.\n        Gdx.gl.glClearColor(0, 0, 0, 1);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        // Sets the camera to the batch.\n        batch.setProjectionMatrix(camera.combined);\n        // Sets the shader of the batch.\n        batch.setShader(currentMapShader);\n        // Sets the view and renders all tile layers.\n        renderer.setView(camera);\n        renderer.render(fog);\n        renderer.render(objects);\n        renderer.render(foreground);\n        renderer.render(background);\n        batch.setShader(null);\n\n        // Draws the sprites, animates the tiles, and gets rid of any stray objects.\n        drawSprites();\n        animateTiles();\n        cleanInstances();\n    }\n\n    // Checks if a camera change is necessary (Daur is on the edge of the screen).\n    private void update() {\n        getWorld(map).checkCameraChange();\n    }\n\n    // Draws each sprite.\n    private void drawSprites() {\n        batch.begin();\n        charIterator = new ArrayList&lt;Character&gt;();\n        drawnSprites = new ArrayList&lt;Character&gt;();\n\n        // Depending upon which world  the player currently is in, the screen adds every relevant character\n        // (characters in the same cell as the player) to an array. This array helps with collision detection\n        // for various sprites.\n        if (getWorld(map).equals(world1))\n            for (Character character : characters1)\n                if (checkDraw(character))\n                    charIterator.add(character);\n        if (getWorld(map).equals(world2))\n            for (Character character : characters2)\n                if (checkDraw(character))\n                    charIterator.add(character);\n        if (getWorld(map).equals(world3))\n            for (Character character : characters3)\n                if (checkDraw(character))\n                    charIterator.add(character);\n        charIterator.add(daur);\n\n        // Gets all sprites on the screen and then adds them to the drawnsprites array.\n        for (Character character : charIterator)\n                if (checkDraw(character))\n                    drawnSprites.add(character);\n\n        // Sets the filter of every tile that is rendered.\n        Iterator&lt;TiledMapTile&gt; tiles = map.getTileSets().getTileSet("Tiles").iterator();\n        while (tiles.hasNext()) {\n            TiledMapTile tile = tiles.next();\n            tile.getTextureRegion().getTexture().setFilter(Texture.TextureFilter.Nearest, Texture.TextureFilter.MipMapNearestLinear);\n        }\n\n        // Draws each consumable, assuming it is in the view of the player. Note that consumables are drawn first so that\n        // everything in the game walks over them.\n        for (Consumable consumable : consumables) {\n            if (checkDraw(consumable)) {\n                consumable.getTexture().setFilter(Texture.TextureFilter.Nearest, Texture.TextureFilter.MipMapNearestLinear);\n                consumable.draw(batch);\n            }\n        }\n        // Does the same for all interactables.\n        for (Interactable interactable : interactables)\n            if (checkDraw(interactable)) {\n                checkSpriteShaded(interactable);\n                interactable.getTexture().setFilter(Texture.TextureFilter.Nearest, Texture.TextureFilter.MipMapNearestLinear);\n                interactable.draw(batch);\n                batch.setShader(null);\n            }\n        // Checks if the character is within the cell Daur is in, and if so draws it. Additionally, checks if the\n        // character needs to inverted. Finally, sets the filter of the character, and then draws it.\n        // This is only for the characters of world 1.\n        for (Character character : characters1)\n            if (checkDraw(character) && getWorld(map).equals(world1)) {\n                checkSpriteShaded(character);\n                character.getTexture().setFilter(Texture.TextureFilter.Nearest, Texture.TextureFilter.MipMapNearestLinear);\n                character.draw(batch);\n                // Sets shader to null so that additional characters are not inverted.\n                batch.setShader(null);\n            }\n        // For world 2.\n        for (Character character : characters2)\n            if (checkDraw(character) && getWorld(map).equals(world2)) {\n                checkSpriteShaded(character);\n                character.getTexture().setFilter(Texture.TextureFilter.Nearest, Texture.TextureFilter.MipMapNearestLinear);\n                character.draw(batch);\n                batch.setShader(null);\n            }\n        // World 3.\n        for (Character character : characters3)\n            if (checkDraw(character) && getWorld(map).equals(world3)) {\n                checkSpriteShaded(character);\n                character.getTexture().setFilter(Texture.TextureFilter.Nearest, Texture.TextureFilter.MipMapNearestLinear);\n                character.draw(batch);\n                batch.setShader(null);\n            }\n        // Checks if Daur himself needs inversion, sets the filter for his texture, and draws him. This occurs only if\n        // Daur is alive.\n        if (!daur.isDead()) {\n            checkSpriteShaded(daur);\n            daur.getTexture().setFilter(Texture.TextureFilter.Nearest, Texture.TextureFilter.MipMapNearestLinear);\n            daur.draw(batch);\n            batch.setShader(null);\n        }\n\n        // Draws all relevant objects.\n\n        for (Item item : items) {\n            if (checkDraw(item)) {\n                item.getTexture().setFilter(Texture.TextureFilter.Nearest, Texture.TextureFilter.MipMapNearestLinear);\n                item.draw(batch);\n            }\n        }\n\n        for (Spell spell : spells)\n            if (checkDraw(spell)) {\n                checkSpriteShaded(spell);\n                spell.getTexture().setFilter(Texture.TextureFilter.Nearest, Texture.TextureFilter.MipMapNearestLinear);\n                spell.draw(batch);\n                batch.setShader(null);\n            }\n\n        for (Projectile projectile : projectiles)\n            if (checkDraw(projectile)) {\n                checkSpriteShaded(projectile);\n                projectile.getTexture().setFilter(Texture.TextureFilter.Nearest, Texture.TextureFilter.MipMapNearestLinear);\n                projectile.draw(batch);\n                batch.setShader(null);\n            }\n\n        for (MeleeWeapon weapon : meleeWeapons)\n            if (checkDraw(weapon) || weapon instanceof BasicSword) {\n                checkSpriteShaded(weapon);\n                weapon.getTexture().setFilter(Texture.TextureFilter.Nearest, Texture.TextureFilter.MipMapNearestLinear);\n                weapon.draw(batch);\n                batch.setShader(null);\n            }\n\n        for (Effect effect : effects)\n            if (checkDraw(effect)) {\n                checkSpriteShaded(effect);\n                effect.getTexture().setFilter(Texture.TextureFilter.Nearest, Texture.TextureFilter.MipMapNearestLinear);\n                effect.draw(batch);\n                batch.setShader(null);\n            }\n\n        for (UI ui : UIS) {\n            ui.getTexture().setFilter(Texture.TextureFilter.Nearest, Texture.TextureFilter.MipMapNearestLinear);\n            ui.draw(batch);\n        }\n\n        // Draws the dialogue box background as well, if it exists.\n        if (textBackground != null) {\n            textBackground.draw(batch);\n            // Also draws the extra line that houses extra information (red square or green arrow).\n            textBackground.addition.draw(batch);\n        }\n\n        // Also displays text if the text box is not null.\n        if (currentTextBox != null)\n            currentTextBox.displayText();\n\n        // Renders the fog layer last. This is so that the layer is drawn ON TOP of any objects, including Daur.\n        renderer.renderTileLayer((TiledMapTileLayer) map.getLayers().get(3));\n\n        // Draws the defeat mask to obscure all but Daur, if necessary.\n        defeatMask.draw(batch);\n\n        // If Daur is dead, draws him above the fog layer and the defeat mask so that he is the only thing visible when\n        // dead.\n        if (daur.isDead()) {\n            checkSpriteShaded(daur);\n            daur.getTexture().setFilter(Texture.TextureFilter.Nearest, Texture.TextureFilter.MipMapNearestLinear);\n            daur.draw(batch);\n            batch.setShader(null);\n        }\n\n        // Draws the mask even above the fog, to obscure everything.\n        mask.draw(batch);\n        batch.end();\n    }\n\n    // Checks if the sprite is inverted or destructing. If not, draws the sprite with the current shader.\n    private void checkSpriteShaded(AdvSprite advSprite) {\n        if (advSprite.getInverted())\n            batch.setShader(invertedShader);\n        else if (advSprite.getDestructing())\n            batch.setShader(destructShader);\n        else\n            batch.setShader(currentMapShader);\n    }\n\n    // Animates all animated tiles.\n    private void animateTiles() {\n        animateTile("springflowers", "Foreground", "Tiles", 0.5f);\n        animateTile("summerflowers", "Foreground", "Tiles", 0.5f);\n        animateTile("autumnflowers", "Foreground", "Tiles", 0.5f);\n        animateTile("winterflowers", "Foreground", "Tiles", 0.5f);\n        animateTile("shallowwater", "Background", "Tiles", 0.125f);\n        animateTile("water", "Background", "Tiles", 0.125f);\n        animateTile("deepwater", "Background", "Tiles", 0.125f);\n        animateTile("fountaintopleft", "Objects", "Tiles", 0.25f);\n        animateTile("fountaintopright", "Objects", "Tiles", 0.25f);\n        animateTile("fountainbottomleft", "Objects", "Tiles", 0.25f);\n        animateTile("fountainbottomright", "Objects", "Tiles", 0.25f);\n        animateTile("torch", "Objects", "Tiles", 0.4f);\n        animateTile("redhead", "Fog", "Tiles", 0.5f);\n        animateTile("bluehead", "Fog", "Tiles", 0.5f);\n        animateTile("yellowhead", "Fog", "Tiles", 0.5f);\n        animateTile("greenhead", "Fog", "Tiles", 0.5f);\n        animateTile("slowtile", "Objects", "Tiles", 0.3333333f);\n    }\n\n\t@Override\n\tpublic void hide () {\n\t}\n\n    // This resizes the camera and window of the game.\n    @Override\n    public void resize (int width, int height) {\n        TiledMapTileLayer layer = (TiledMapTileLayer) map.getLayers().get(0);\n        camera.viewportWidth = layer.getTileWidth() * 10;\n        camera.viewportHeight = layer.getTileHeight() * 11;\n        camera.position.set(MathUtils.round(camera.position.x), MathUtils.round(camera.position.y), 0);\n        camera.update();\n    }\n\n    @Override\n    public void pause () {\n    }\n\n    @Override\n    public void resume () {\n    }\n\n    @Override\n    public void dispose () {\n        map.dispose();\n        renderer.dispose();\n        daur.getTexture().dispose();\n    }\n\n    // This gets the respective tiles for every interactable tile. NOTE: this is the tile type, not each individual\n    // cell.\n    private void setTiles() {\n        Iterator&lt;TiledMapTile&gt; tiles = world1.getMap().getTileSets().getTileSet("Tiles").iterator();\n        // Gets the bush tiles.\n        while (tiles.hasNext()) {\n            TiledMapTile tile = tiles.next();\n            if (tile.getProperties().containsKey("blank"))\n                blankTile = tile;\n            if (tile.getProperties().containsKey("bush")) {\n                if (tile.getProperties().containsKey("spring"))\n                    springBushTile = tile;\n                if (tile.getProperties().containsKey("summer"))\n                    summerBushTile = tile;\n                if (tile.getProperties().containsKey("autumn"))\n                    fallBushTile = tile;\n                if (tile.getProperties().containsKey("winter"))\n                    winterBushTile = tile;\n            }\n            // Gets all other types of tiles.\n            if (tile.getProperties().containsKey("bramble"))\n                brambleTile = tile;\n            if (tile.getProperties().containsKey("springgrass"))\n                springGrassTile = tile;\n            if (tile.getProperties().containsKey("summergrass"))\n                summerGrassTile = tile;\n            if (tile.getProperties().containsKey("fallgrass"))\n                fallGrassTile = tile;\n            if (tile.getProperties().containsKey("wintergrass"))\n                winterGrassTile = tile;\n        }\n    }\n\n    // This loads all the objects in the game, as well as the fonts of the game.\n    public void generateWorld() {\n        loadObjects();\n        createWorlds();\n    }\n\n    // This method finds all non-static tiles and animates them.\n    private void animateTile(String key, String section, String tileset, float time) {\n        Array&lt;StaticTiledMapTile&gt; frameTiles = new Array&lt;StaticTiledMapTile&gt;();\n        Iterator&lt;TiledMapTile&gt; tiles = map.getTileSets().getTileSet(tileset).iterator();\n\n        while (tiles.hasNext()) {\n            TiledMapTile tile = tiles.next();\n            if (tile.getProperties().containsKey(key))\n            frameTiles.add((StaticTiledMapTile) tile);\n        }\n\n        AnimatedTiledMapTile animatedTile = new AnimatedTiledMapTile(time, frameTiles);\n        for (TiledMapTile tile : frameTiles)\n            animatedTile.getProperties().putAll(tile.getProperties());\n\n        TiledMapTileLayer layer = (TiledMapTileLayer) map.getLayers().get(section);\n\n        for (int i = 0; i &lt; layer.getWidth(); i++) {\n            for (int o = 0; o &lt; layer.getHeight(); o++) {\n                TiledMapTileLayer.Cell cell = layer.getCell(i, o);\n                if (cell != null && cell.getTile() != null && cell.getTile().getProperties().containsKey(key))\n                    cell.setTile(animatedTile);\n            }\n        }\n    }\n\n    // Loads all the textures the game requires.\n    private void loadObjects() {\n        AssetManager manager = new AssetManager();\n        manager.load("SpriteSheets/Daur.pack", TextureAtlas.class);\n        manager.load("SpriteSheets/MiscChars.pack", TextureAtlas.class);\n        manager.load("SpriteSheets/Villagers.pack", TextureAtlas.class);\n        manager.load("SpriteSheets/Enemies.pack", TextureAtlas.class);\n        manager.load("UI/UI.pack", TextureAtlas.class);\n        manager.load("Items/Items.pack", TextureAtlas.class);\n        manager.load("Effects/Effects.pack", TextureAtlas.class);\n        manager.load("Spells/Spells.pack", TextureAtlas.class);\n        manager.load("Projectiles/Projectiles.pack", TextureAtlas.class);\n        manager.load("Interactables/Interactables.pack", TextureAtlas.class);\n        manager.load("Consumables/Consumables.pack", TextureAtlas.class);\n        manager.load("Tiles/Tiles.pack", TextureAtlas.class);\n        manager.finishLoading();\n\n        daurAtlases.add((TextureAtlas) manager.get("SpriteSheets/Daur.pack"));\n        daurAtlases.add((TextureAtlas) manager.get("UI/UI.pack"));\n        daurAtlases.add((TextureAtlas) manager.get("Items/Items.pack"));\n        daurAtlases.add((TextureAtlas) manager.get("Effects/Effects.pack"));\n        daurAtlases.add((TextureAtlas) manager.get("Spells/Spells.pack"));\n        daurAtlases.add((TextureAtlas) manager.get("Projectiles/Projectiles.pack"));\n        characterAtlases.add((TextureAtlas) manager.get("SpriteSheets/MiscChars.pack"));\n        characterAtlases.add((TextureAtlas) manager.get("SpriteSheets/Villagers.pack"));\n        characterAtlases.add((TextureAtlas) manager.get("SpriteSheets/Enemies.pack"));\n        miscAtlases.add((TextureAtlas) manager.get("Interactables/Interactables.pack"));\n        miscAtlases.add((TextureAtlas) manager.get("Consumables/Consumables.pack"));\n        miscAtlases.add((TextureAtlas) manager.get("Tiles/Tiles.pack"));\n    }\n\n    public void setDaur(Daur daur) {\n        this.daur = daur;\n    }\n\n    // Checks if the object is in the screen, so that it may be drawn. This reduces lag of the game.\n    private boolean checkDraw(Sprite sprite) {\n        // Checks if the sprite is a character, and is ignoring the camera. If so, returns.\n        if (sprite instanceof Character && ((Character) sprite).isIgnoringCamera())\n            return true;\n\n        float posX = camera.position.x, posY = camera.position.y;\n        float width = camera.viewportWidth / 2, height = camera.viewportHeight / 2;\n        return sprite.getX() + sprite.getWidth() &gt; posX - width && sprite.getX() &lt; posX + width &&\n                sprite.getY() + sprite.getHeight() &gt; posY - height && sprite.getY() &lt; posY + height;\n    }\n\n    // Returns true if object is drawn (is in the camera). Otherwise, returns false\n    public boolean isInView(Sprite sprite) {\n        return checkDraw(sprite);\n    }\n\n    // Cleans up all objects that are not in the current cell and are not persistent. Note that a separate array list\n    // is created for each type to iterate through. This is because the object could not be removed from the list it was\n    // iterating from.\n    public void cleanInstances() {\n        ArrayList&lt;Effect&gt; effectPlaceholder = new ArrayList&lt;Effect&gt;();\n\n        for (Effect effect : effects)\n            effectPlaceholder.add(effect);\n\n        for (Effect effect : effectPlaceholder)\n            if (!checkDraw(effect) && !effect.isPersistent())\n                effects.remove(effect);\n\n        ArrayList&lt;Consumable&gt; consumablePlaceholder = new ArrayList&lt;Consumable&gt;();\n\n        for (Consumable consumable : consumables)\n            consumablePlaceholder.add(consumable);\n\n        for (Consumable consumable : consumablePlaceholder)\n            if (!checkDraw(consumable))\n                consumables.remove(consumable);\n\n        ArrayList&lt;Spell&gt; spellPlaceholder = new ArrayList&lt;Spell&gt;();\n\n        for (Spell spell : spells)\n            spellPlaceholder.add(spell);\n\n        for (Spell spell : spellPlaceholder)\n            if (!checkDraw(spell))\n                spells.remove(spell);\n\n        ArrayList&lt;Projectile&gt; projectilePlaceholder = new ArrayList&lt;Projectile&gt;();\n\n        for (Projectile projectile : projectiles)\n            projectilePlaceholder.add(projectile);\n\n        for (Projectile projectile : projectilePlaceholder)\n            if (!checkDraw(projectile))\n                projectiles.remove(projectile);\n\n        ArrayList&lt;MeleeWeapon&gt; weaponPlaceholder = new ArrayList&lt;MeleeWeapon&gt;();\n\n        for (MeleeWeapon weapon : meleeWeapons)\n            weaponPlaceholder.add(weapon);\n\n        for (MeleeWeapon weapon : weaponPlaceholder)\n            if (!checkDraw(weapon))\n                meleeWeapons.remove(weapon);\n    }\n\n    // Sets the current text box and the background to the given one.\n    public void setText(Dialogue dialogue, TextBackground background) {\n        currentTextBox = dialogue;\n        textBackground = background;\n    }\n\n    // Sets the tile map, which is decided by the given world.\n    public void setTileMap(int world) {\n        // Removes up all refreshable instances (enemies, interactables, etc).\n        world1.cleanRenewables();\n        world2.cleanRenewables();\n        world3.cleanRenewables();\n\n        // Renews the refreshable instances that were just destroyed, depending on the current world. Also checks for\n        // music transitions.\n        if (world == 0) {\n            map = world1.getMap();\n            world1.createRenewables();\n        }\n        else if (world == 1) {\n            map = world2.getMap();\n            world2.createRenewables();\n        }\n        else {\n            map = world3.getMap();\n            world3.createRenewables();\n        }\n\n        // Sets map of the renderer and storage. Also creates a new mask.\n        renderer.setMap(map);\n        storage.setMap(map);\n        mask = new Mask();\n        defeatMask = new Mask();\n\n        // Sets camera for each world.\n        world1.setCamera(camera);\n        world2.setCamera(camera);\n        world3.setCamera(camera);\n\n        // Gets the camera width and height, and updates it.\n        TiledMapTileLayer layer = (TiledMapTileLayer) map.getLayers().get(0);\n        camera.viewportWidth = (int) layer.getTileWidth() * 10;\n        camera.viewportHeight = (int) layer.getTileHeight() * 11;\n        // Ensures that the camera\'s position rests on an int. This is to ensure that there is no tile shearing.\n        camera.position.set(MathUtils.round(camera.position.x), MathUtils.round(camera.position.y), 0);\n        camera.update();\n    }\n\n    // Adds a sprite to the rendering list based on the world the sprite is supposed to be in. This avoids concurrent\n    // modifications of the rendering lists.\n    public void addCharacter(Character character, int world) {\n        switch (world) {\n            case 0:\n                characters1.add(character);\n                break;\n            case 1:\n                characters2.add(character);\n                break;\n            case 2:\n                characters3.add(character);\n                break;\n        }\n    }\n\n    // Creates each world, giving it the tile map, storage, and camera.\n    private void createWorlds() {\n        // Texture filters for the tiles.\n        TmxMapLoader.Parameters params = new TmxMapLoader.Parameters();\n        params.textureMagFilter = Texture.TextureFilter.Nearest;\n        params.textureMinFilter = Texture.TextureFilter.Nearest;\n        // Creates the worlds, along with their maps.\n        world1 = new UpperWorld(storage, camera, new TmxMapLoader().load("TileMaps/Overworld.tmx", params), this);\n        world2 = new UnderWorld(storage, camera, new TmxMapLoader().load("TileMaps/Underworld.tmx", params), this);\n        world3 = new Houses(storage, camera, new TmxMapLoader().load("TileMaps/Houses.tmx", params), this);\n    }\n\n    public void pauseGame() {\n        // Gets the time when the timer is stopped.\n        timerDelay = TimeUtils.nanosToMillis(TimeUtils.nanoTime());\n        // Stops all timed events, to prevent events from firing while the game is paused.\n        globalTimer.stop();\n        // Sets screen to pause.\n        PausedScreenGame screen = new PausedScreenGame(game, storage, this);\n        game.setScreen(screen);\n    }\n\n    // Similar to the pauseGame method, except concerning maps.\n    public void goToMap() {\n        // Gets the time when the timer is stopped.\n        timerDelay = TimeUtils.nanosToMillis(TimeUtils.nanoTime());\n        // Stops all timed events, to prevent events from firing while the game is paused.\n        globalTimer.stop();\n        // Sets screen to the overworld map if in the overworld, or the respective dungeon map. Does not work in a house.\n        if (getWorld(map) instanceof UpperWorld) {\n            OverworldMapScreen screen = new OverworldMapScreen(game, storage, this);\n            game.setScreen(screen);\n        }\n        // For the dungeon map.\n        else if (getWorld(map) instanceof UnderWorld) {\n            UnderworldMapScreen screen = new UnderworldMapScreen(game, storage, this);\n            game.setScreen(screen);\n        }\n    }\n\n    public void unPauseGame() {\n        // Delays all events by the current time - the timerDelay. This is to prevent timed events from starting\n        // immediately.\n        globalTimer.delay(TimeUtils.nanosToMillis(TimeUtils.nanoTime()) - timerDelay);\n        // Restarts all timed events.\n        globalTimer.start();\n        // Sets screen back.\n        game.setScreen(this);\n        // Resets the masks size, regardless if necessary.\n        mask.setSize(160, 176);\n        // Sets mask to current camera position and renews the position of all UI\'s so that they display properly.\n        mask.setPosition(camera.position.x - camera.viewportWidth / 2, camera.position.y - camera.viewportHeight / 2);\n        defeatMask.setPosition(camera.position.x - camera.viewportWidth / 2, camera.position.y - camera.viewportHeight / 2);\n        for (UI ui : UIS)\n            ui.renewPosition();\n    }\n\n    public void defeat() {\n        // Gets the time when the timer is stopped.\n        timerDelay = TimeUtils.nanosToMillis(TimeUtils.nanoTime());\n        // Stops all timed events, to prevent events from firing while the game is paused.\n        globalTimer.stop();\n        // Sets screen to the defeat screen.\n        DefeatScreen screen = new DefeatScreen(game, storage, this);\n        game.setScreen(screen);\n    }\n\n    // Gets the world, depending on the current tile map.\n    public World getWorld(TiledMap map) {\n        if (map.equals(world1.getMap()))\n            return world1;\n        if (map.equals(world2.getMap()))\n            return world2;\n        else\n            return world3;\n    }\n\n    // Shakes the screen by moving the camera back and forth.\n    public void shakeScreen(final float displacement, float time, boolean sound) {\n        // Shakes to the right.\n        globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                camera.position.set(camera.position.x + displacement / 2, camera.position.y, 0);\n            }\n        }, time);\n\n        // Creates a loop that shakes back to the left every x time.\n        for (float i = time * 2; i &lt;= time * 9; i += time * 2)\n            globalTimer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    camera.position.set(camera.position.x - displacement, camera.position.y, 0);\n                }\n            }, i);\n        // Creates a loop that shakes back to the right every x + 1 (other) time.\n        for (float i = time * 3; i &lt;= time * 9; i += time * 2)\n            globalTimer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    camera.position.set(camera.position.x + displacement, camera.position.y, 0);\n                }\n            }, i);\n        // Creates a loop to create remor sounds. Notice the interval is much longer than the previous two loops. This\n        // only occurs if the sound boolean is true.\n        if (sound)\n            for (float i = time * 2; i &lt;= time * 9; i += time * 3)\n                globalTimer.scheduleTask(new Timer.Task() {\n                    @Override\n                    public void run() {\n                        // Plays tremor sound.\n                        storage.sounds.get("tremor2").play(1.0f);\n                    }\n                }, i);\n        // Moves back to the original position.\n        globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                camera.position.set(camera.position.x - displacement / 2, camera.position.y, 0);\n            }\n        }, time * 10);\n    }\n\n    // This method causes the defeat mask to immediately become opaque or transparent, depending on the parameter given.\n    public void defeatMask(boolean in) {\n        defeatMask.setPosition(camera.position.x - camera.viewportWidth / 2, camera.position.y - camera.viewportHeight / 2);\n        if (in)\n            defeatMask.setAlpha(1);\n        else\n            defeatMask.setAlpha(0);\n    }\n\n    // This method causes the screen to fade to the given color, then fade out once again.\n    public void transition(Color color) {\n        // Sets color of the mask, makes it opaque, and sets the position to the camera position.\n        mask.setColor(color);\n        mask.setAlpha(1);\n        mask.setPosition(camera.position.x - camera.viewportWidth / 2, camera.position.y - camera.viewportHeight / 2);\n        daur.freeze();\n        daur.setTransitioning(true);\n        // Creates a globalTimer event that unstuns Daur, breaks the game out of transitioning, sets the mask to be\n        // transparent, and finally renews every UI position.\n        globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                daur.setTransitioning(false);\n                mask.setAlpha(0);\n                for (UI ui : UIS)\n                    ui.renewPosition();\n            }\n        }, 0.4f);\n    }\n\n    // Relays check clears to all short term memory classes.\n    public void checkClear(Sprite sprite) {\n        storage.FDstorage.checkClear(sprite);\n    }\n\n    // Relays clears to all short term memory classes.\n    public void clearEvents() {\n        storage.FDstorage.clearEvents();\n    }\n\n    public void setCurrentMapShader(ShaderProgram shader) {\n        currentMapShader = shader;\n    }\n\n    public void resetProcessor() {\n        Gdx.input.setInputProcessor(interpreter1);\n    }\n\n    public boolean isFrozen() {\n        return frozen;\n    }\n\n    public boolean isPaused() {\n        return paused;\n    }\n\n    public void freeze() {\n        frozen = true;\n    }\n\n    public void pauseScreen() {\n        paused = true;\n    }\n\n    public void unFreeze() {\n        frozen = false;\n    }\n\n    public void unPauseScreen() {\n        paused = false;\n    }\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},'package com.inoculates.fatesreprise.Characters;\n\nimport com.badlogic.gdx.graphics.g2d.Animation;\nimport com.badlogic.gdx.graphics.g2d.TextureAtlas;\nimport com.badlogic.gdx.maps.tiled.TiledMap;\nimport com.inoculates.fatesreprise.Screens.GameScreen;\n\n// The beetle enemy that is found in certain parts of the game.\npublic class Beetle extends Enemy {\n    // Loads the texture regions that comprise the beetle\'s animations.\n    TextureAtlas.AtlasRegion FU1 = atlas.findRegion("beetleU1"), FU2 = atlas.findRegion("beetleU2"),\n            FD1 = atlas.findRegion("beetleD1"), FD2 = atlas.findRegion("beetleD2"), FR1 = atlas.findRegion("beetleR1"),\n            FR2 = atlas.findRegion("beetleR2"), FL1 = atlas.findRegion("beetleL1"), FL2 = atlas.findRegion("beetleL2");\n\n    // The floats that register when the beetle shall move.\n    float moveTime = 0;\n    float checkTime = 0;\n\n    // Direction of movement.\n    int movementDirection;\n\n    // Class constructor that captures the values of the game screen, the map the beetle is on, and the beetle\'s texture\n    // atlas (its texture dictionary). Also begins movement immediately.\n    public Beetle(GameScreen screen, TiledMap map, TextureAtlas atlas) {\n        super(screen, map, atlas, 2);\n        checkMove();\n        move();\n    }\n\n    // This method checks whether the beetle is not moving (thus changing its state to idle), and also checks whether\n    // the beetle needs to move.\n    protected void update(float deltaTime) {\n        if (vel.x == 0 && vel. y == 0)\n            setState(IDLE, false);\n        if (checkTime > 1)\n            checkMove();\n        if (moveTime > 1.5f)\n            move();\n    }\n\n    // Updates the time in accordance with how much time has passed according to Gdx.getDeltaTime().\n    protected void updateTime(float deltaTime) {\n        if (!frozen && state != IDLE)\n            animationTime += deltaTime;\n        moveTime += deltaTime;\n        checkTime += deltaTime;\n    }\n\n    // Randomly picks a path to move. This occurs every ONE second.\n    private void checkMove() {\n        // Gets a random integer from one to four.\n        int random = (int) (Math.random() * 5);\n        // If the integer is zero, there is no movement. Thus there is a 25% chance of no movement, and a 75% chance of\n        // movement.\n        if (random == 0) {\n            vel.x = 0;\n            vel.y = 0;\n            state = IDLE;\n        }\n        else {\n            // Switch and case expression which checks the movement\n            switch (movementDirection) {\n                // If the movement is set to left, sets x component of velocity to 0.5, and the y component to zero.\n                case 0:\n                    SVX(0.5f);\n                    vel.y = 0;\n                    dir = RIGHT;\n                    break;\n                // If left, x = -0.5 and y = 0.\n                case 1:\n                    SVX(-0.5f);\n                    vel.y = 0;\n                    dir = LEFT;\n                    break;\n                // If up, x = 0 and y = 0.5.\n                case 2:\n                    vel.x = 0;\n                    SVY(0.5f);\n                    dir = UP;\n                    break;\n                // If down, x = 0 and y = -0.5.\n                case 3:\n                    vel.x = 0;\n                    SVY(-0.5f);\n                    dir = DOWN;\n                    break;\n            }\n            // Sets state to running, as the beetle is now moving.\n            state = RUNNING;\n        }\n        // Resets the check time.\n        checkTime = 0;\n    }\n\n    // Sets the movement direction of the beetle every 1.5 seconds, regardless of whether the beetle is moving or not.\n    private void move() {\n        // Sets the movement direction to a number between one and four. The reason the random integer is generated this\n        // way is to ensure more randomness.\n        movementDirection = ((int) (Math.random() * 16)) / 4;\n        // Resets move time.\n        moveTime = 0;\n    }\n\n    // This method moves the beetle depending on the x and y components of its velocity. Additionally, it checks for any\n    // collisions, including those with the edge of the screen. The actual methods are in the super class Enemy.\n    protected void tryMove() {\n        checkCollisions();\n        detectConditions();\n    }\n\n    //Creates all the animations of the beetle with their corresponding frames.\n    protected void createAnimations() {\n        // If facing up, makes the run and idle animations consist of the up-facing frames.\n        if (dir == UP) {\n            run = new Animation(0.25f, FU1, FU2);\n            idle = new Animation(0.5f, FU1);\n        }\n        // Same but for the bottom direction.\n        else if (dir == DOWN) {\n            run = new Animation(0.25f, FD1, FD2);\n            idle = new Animation(0.5f, FD1);\n        }\n        // Etc.\n        else if (dir == RIGHT) {\n            run = new Animation(0.25f, FR1, FR2);\n            idle = new Animation(0.5f, FR1);\n        }\n        else if (dir == LEFT) {\n            run = new Animation(0.25f, FL1, FL2);\n            idle = new Animation(0.5f, FL1);\n        }\n    }\n\n    // If returned true, the new state will not override the old.\n    protected boolean overrideCheck() {\n        return state == DEAD;\n    }\n\n    // If returned true, the current state has priority over the new one.\n    protected boolean priorities(int cState) {\n        return (state == DEAD && cState != FALLING && cState != DROWNING) || state == FALLING || state == DROWNING;\n    }\n\n    //This method periodically sets the frame of the beetle depending on both the state and the animationTime.\n    protected void chooseSprite()\n    {\n        Animation anim = idle;\n\n        if (state == IDLE || state == DEAD)\n            anim = idle;\n        if (state == FALLING)\n            anim = fall;\n        if (state == DROWNING)\n            anim = drown;\n        if (state == RUNNING)\n            anim = run;\n\n        // Sets the actual frame.\n        setRegion(anim.getKeyFrame(animationTime, true));\n        // Sets the size of the beetle depending on the animation (to avoid having the same bounding rectangle).\n        setSize(anim.getKeyFrame(animationTime, true).getRegionWidth(), anim.getKeyFrame(animationTime, true).getRegionHeight());\n    }\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},'package com.inoculates.fatesreprise.Characters;\n\nimport com.badlogic.gdx.graphics.g2d.Animation;\nimport com.badlogic.gdx.graphics.g2d.TextureAtlas;\nimport com.badlogic.gdx.maps.tiled.TiledMap;\nimport com.badlogic.gdx.utils.Timer;\nimport com.inoculates.fatesreprise.Interactables.Interactable;\nimport com.inoculates.fatesreprise.Projectiles.FireBall;\nimport com.inoculates.fatesreprise.Screens.GameScreen;\n\n// This is an enemy that fades in and out of combat to attack Daur with a magic bolt.\npublic class Wizard extends Enemy {\n    // The state where the wizard is casting his bolt.\n    protected static final int CASTING = 6;\n    private Animation spell;\n\n    TextureAtlas.AtlasRegion FU = atlas.findRegion("wizardU"), FSU1 = atlas.findRegion("wizardSU1"),\n            FSU2 = atlas.findRegion("wizardSU2"), FR = atlas.findRegion("wizardR"), FSR1 = atlas.findRegion("wizardSR1"),\n            FSR2 = atlas.findRegion("wizardSR2"), FL = atlas.findRegion("wizardL"), FSL1 = atlas.findRegion("wizardSL1"),\n            FSL2 = atlas.findRegion("wizardSL2"), FD = atlas.findRegion("wizardD"), FSD1 = atlas.findRegion("wizardSD1"),\n            FSD2 = atlas.findRegion("wizardSD2");\n\n    float checkTime = 0;\n\n    public Wizard(GameScreen screen, TiledMap map, TextureAtlas atlas) {\n        super(screen, map, atlas, 2);\n        setState(IDLE, false);\n        setAlpha(0);\n        invulnerability = true;\n        transparent = true;\n    }\n\n    protected void update(float deltaTime) {\n        if (checkTime > 1) {\n            // Calls the attack method with NO exclusions. This is to test whether the wizard can attack Daur.\n            attack(new boolean[] {false, false, false, false});\n            checkTime = 0;\n        }\n    }\n\n    protected void tryMove() {\n\n    }\n\n    protected void updateTime(float deltaTime) {\n        if (!frozen && state != IDLE)\n            animationTime += deltaTime;\n        if (state != CASTING) {\n            checkTime += deltaTime;\n        }\n    }\n\n    private void attack(boolean[] exclusions) {\n        // Purpose of the is twofold. One to prevent the wizard from attacking if the player is out of the cell.\n        // The second is to prevent the method from recursively looping infinitely when the player is out of the cell.\n\n        if (!inRange())\n            return;\n\n        // Checks if all directions are blocked. If so, exits the method completely. This ends the recursion of this method.\n        for (int i = 0; i < 4; i ++) {\n            if (!exclusions[i])\n                break;\n            // If the loop reaches the end without breaking, that means that every direction is excluded (exclusions[0] to\n            // exclusions[3] are all true).\n            if (i == 3)\n                return;\n        }\n\n        // Sets the base newX and newY, which will eventually be the new position for the wizard.\n        float newX = getX();\n        float newY = getY();\n\n        // Gets a random integer from zero to three.\n        int random = (int) (Math.random() * 4);\n\n        // Checks to see if the direction is not already registered as blocked by the program before.\n        while (exclusions[random])\n            // Gets another random integer from zero to three. This is to keep the loop iterating.\n            random = (int) (Math.random() * 4);\n\n        // Sets the new x and y position for the wizard. This is dependent upon the randomly generated integer.\n        switch (random) {\n            case 0:\n                // The wizard is placed above Daur.\n                newX = screen.daur.getX() + screen.daur.getWidth() / 2 - getWidth() / 2;\n                newY = screen.daur.getY() + screen.daur.getHeight() + 10;\n                dir = DOWN;\n                break;\n            case 1:\n                // The wizard is placed below Daur.\n                newX = screen.daur.getX() + screen.daur.getWidth() / 2 - getWidth() / 2;\n                newY = screen.daur.getY() - 10 - getHeight();\n                dir = UP;\n                break;\n            case 2:\n                // The wizard is placed to the right of Daur.\n                newX = screen.daur.getX() + screen.daur.getWidth() + 10;\n                newY = screen.daur.getY() + screen.daur.getHeight() / 2 - getHeight() / 2;\n                dir = LEFT;\n                break;\n            case 3:\n                // The wizard is placed to the left of Daur.\n                newX = screen.daur.getX() - 10 - getWidth();\n                newY = screen.daur.getY() + screen.daur.getHeight() / 2 - getHeight() / 2;\n                dir = RIGHT;\n                break;\n        }\n\n        // If the position is valid, sets the wizard\'s position as the new position. Also initiates phasing and casts.\n        if (validPosition(newX, newY)) {\n            setPosition(newX, newY);\n            // Phases in and casts.\n            phase(true);\n            cast();\n        }\n\n        // Updates the exclusion array to include the new direction.\n        else {\n            exclusions[random] = true;\n            // Recursion.\n            attack(exclusions);\n        }\n    }\n\n    // Fires the magic bolt at Daur.\n    private void cast() {\n        // Sets the object for this character. This is necessary for concurrent threading.\n        final Character character = this;\n        // Sets the state to casting.\n        setState(CASTING, false);\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                // Gets angle between Daur and itself.\n                final float angle = (float) Math.atan2(screen.daur.getY() + screen.daur.getHeight() / 2 - getY() - getHeight() / 2,\n                        screen.daur.getX() + screen.daur.getWidth() / 2 - getX() - getWidth() / 2);\n                // Launches the fireball using this angle, and adds it to the rendering list.\n                FireBall ball = new FireBall(screen, map, screen.daurAtlases.get(5), character, angle);\n                screen.projectiles.add(ball);\n                // Plays the launch sound.\n                screen.storage.sounds.get("launch5").play(1.0f);\n            }\n        }, 0.8f);\n        screen.globalTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                // Phases the wizard out.\n                phase(false);\n                // Resets state to idle.\n                setState(IDLE, true);\n            }\n        }, 1.2f);\n        // Plays the appearance sound.\n        screen.storage.sounds.get("pulse").play(1.0f);\n    }\n\n    // Depending on the boolean in, phases the wizard in and out.\n    private void phase(boolean in) {\n        // Note that every task resets the direction, so that the wizard tracks daur, and further increases/decreases\n        // the transparency of the wizard.\n        if (in) {\n            screen.globalTimer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    setAlpha(0.25f);\n                    resetDirection(dir);\n                }\n            }, 0.2f);\n            screen.globalTimer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    setAlpha(0.5f);\n                    resetDirection(dir);\n                }\n            }, 0.4f);\n            screen.globalTimer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    setAlpha(0.75f);\n                    resetDirection(dir);\n                }\n            }, 0.6f);\n            screen.globalTimer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    setAlpha(1);\n                    resetDirection(dir);\n                    invulnerability = false;\n                    transparent = false;\n                }\n            }, 0.8f);\n        }\n        else {\n            screen.globalTimer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    if (isDead()) return;\n                    setAlpha(0.75f);\n                }\n            }, 0.2f);\n            screen.globalTimer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    if (isDead()) return;\n                    setAlpha(0.5f);\n                }\n            }, 0.4f);\n            screen.globalTimer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    if (isDead()) return;\n                    setAlpha(0.25f);\n                }\n            }, 0.6f);\n            screen.globalTimer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    if (isDead()) return;\n                    setAlpha(0);\n                    invulnerability = true;\n                    transparent = true;\n                }\n            }, 0.8f);\n        }\n    }\n\n    private void resetDirection(int direction) {\n        if (direction == RIGHT || direction == LEFT) {\n            if (screen.daur.getX() > getX())\n                dir = RIGHT;\n            else\n                dir = LEFT;\n        }\n        else {\n            if (screen.daur.getY() > getY())\n                dir = UP;\n            else\n                dir = DOWN;\n        }\n    }\n\n    protected void createAnimations() {\n        if (dir == UP) {\n            idle = new Animation(0.5f, FU);\n            spell = new Animation(0.8f, FSU1, FSU2);\n        }\n        else if (dir == DOWN) {\n            idle = new Animation(0.5f, FD);\n            spell = new Animation(0.8f, FSD1, FSD2);\n        }\n        else if (dir == RIGHT) {\n            idle = new Animation(0.5f, FR);\n            spell = new Animation(0.8f, FSR1, FSR2);\n        }\n        else if (dir == LEFT) {\n            idle = new Animation(0.5f, FL);\n            spell = new Animation(0.8f, FSL1, FSL2);\n        }\n    }\n\n    private boolean inRange() {\n        // If Daur is inside the cell.\n        return screen.daur.getX() > getCellX() || screen.daur.getX() < getCellX() - 1 || screen.daur.getY() > getCellY()\n                || screen.daur.getY() < getCellY() - 1;\n    }\n\n    private boolean validPosition(float x, float y) {\n        // Checks if the selected position is blocked by either a tile or a character. Also checks if the position is\n        // outside of the current cell. If any of the above is true, the method returns false.\n        return !checkBlocked(x, y) && x > (getCellX() - 1) * layer.getTileWidth() &&\n                x + getWidth() < getCellX() * layer.getTileWidth() * 10 &&\n                y > (getCellY() - 1) * layer.getTileWidth() * 10 &&\n                y + getHeight() < getCellY() * layer.getTileWidth() * 10 &&\n                !checkCharBlocked(x, y) && !checkInteractableBlocked(x, y);\n    }\n\n    // If a character is blocking the location (such as Daur himself).\n    private boolean checkCharBlocked(float x, float y) {\n        for (float cX = x; cX < x + getWidth(); cX ++)\n            for (float cY = y; cY < y + getHeight(); cY ++)\n                for (Character character : screen.charIterator)\n                    if (character.getBoundingRectangle().contains(x, y))\n                        return true;\n        return false;\n    }\n\n    // If an interactable is blocking the location.\n    private boolean checkInteractableBlocked(float x, float y) {\n        for (float cX = x; cX < x + getWidth(); cX ++)\n            for (float cY = y; cY < y + getHeight(); cY ++)\n                for (Interactable interactable : screen.interactables)\n                    if (interactable.getBoundingRectangle().contains(x, y))\n                        return true;\n        return false;\n    }\n\n    // Checks if a terrain object is blocking Daur.\n    private boolean checkBlocked(float x, float y) {\n        for (float cX = x; cX < x + getWidth(); cX ++)\n            for (float cY = y; cY < y + getHeight(); cY ++)\n                if (isCellBlocked(cX, cY))\n                    return true;\n        return false;\n    }\n\n    protected boolean overrideCheck() {\n        return (state == CASTING || state == DEAD);\n    }\n    //Overrides the current state if necessary.\n    protected boolean priorities(int cState) {\n        return (state == DEAD && cState != FALLING && cState != DROWNING) || state == FALLING || state == DROWNING;\n    }\n\n    //This method periodically sets the frame of the pixelknight dependent on both the state and the animationTime.\n    protected void chooseSprite()\n    {\n        Animation anim = idle;\n\n        if (state == IDLE || state == DEAD)\n            anim = idle;\n        if (state == FALLING)\n            anim = fall;\n        if (state == DROWNING)\n            anim = drown;\n        if (state == CASTING)\n            anim = spell;\n\n        setRegion(anim.getKeyFrame(animationTime, true));\n        setSize(anim.getKeyFrame(animationTime, true).getRegionWidth(), anim.getKeyFrame(animationTime, true).getRegionHeight());\n    }\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-swift"},'//\n//\n//  BuildingViewController.swift\n//  MapBlue\n//\n//  Created by Akshay Subramaniam on 6/3/18.\n//  Copyright \xa9 2018 MediocreAtBest. All rights reserved.\n//\n\nimport UIKit\n\nclass BuildingViewController: UIViewController {\n    @IBOutlet weak var EECSButton: UIButton!\n    @IBOutlet weak var GGButton: UIButton!\n    @IBOutlet weak var EHButton: UIButton!\n    @IBOutlet weak var DBButton: UIButton!\n\n    // Sets the building according to the button.\n    func getBuilding(_ sender: UIButton) -> Int {\n        switch (sender) {\n        case EECSButton:\n            return Building.EECS\n        case GGButton:\n            return Building.GGBrown\n        case EHButton:\n            return Building.EastHall\n        case DBButton:\n            return Building.Dow\n        default:\n            return -1\n        }\n    }\n\n    // Sends data to the next view (Room Controller View).\n    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n        if segue.identifier == "gotoRooms" {\n            // Gets destination view controller as roomview controller and uses the set building function.\n            if let destinationVC = segue.destination as? RoomViewController {\n                // Forcibly casts the sender to UI button to set the building properly.\n                destinationVC.setBuilding(building: getBuilding((sender as? UIButton)!))\n            }\n        }\n    }\n\n    // Button segue for the GG Brown Button.\n    @IBAction func GGBgotoRooms(_ sender: UIButton) {\n        performSegue(withIdentifier: "gotoRooms", sender: sender)\n    }\n\n    // Button segue for the EECS Building Button.\n    @IBAction func EECSgotoRooms(_ sender: UIButton) {\n         performSegue(withIdentifier: "gotoRooms", sender: sender)\n    }\n\n    func setButtonBorder(button : UIButton) {\n        // Color for border.\n        let borderAlpha : CGFloat = 0.7\n        // Sets the background to clear.\n        button.backgroundColor = UIColor.clear\n        // Creates a top border for the button.\n        let topBorder = CALayer()\n        // Sets the color, thickness, and position/dimensions.\n        topBorder.borderColor = UIColor(white: 1.0, alpha: borderAlpha).cgColor\n        topBorder.borderWidth = 1;\n        topBorder.frame = CGRect(x: -button.frame.width, y: -10, width: button.frame.width * 2.5, height: 1)\n        button.layer.addSublayer(topBorder)\n        // Same but for the buttom border.\n        let bottomBorder = CALayer()\n        bottomBorder.borderColor = UIColor(white: 1.0, alpha: borderAlpha).cgColor\n        bottomBorder.borderWidth = 1;\n        bottomBorder.frame = CGRect(x: -button.frame.width, y: button.frame.height + 10, width: button.frame.width * 2.5, height: 1)\n        button.layer.addSublayer(bottomBorder)\n    }\n\n    // Set different button properties (just border for now).\n    func setButtonProperties() {\n        // Sets the borders.\n        self.setButtonBorder(button: EECSButton)\n        self.setButtonBorder(button: GGButton)\n        self.setButtonBorder(button: EHButton)\n        self.setButtonBorder(button: DBButton)\n    }\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view.\n        // Sets button properties.\n        self.setButtonProperties()\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-swift"},'//\n//  MapViewController.swift\n//  MapBlue\n//\n//  Created by Akshay Subramaniam on 14/3/18.\n//  Copyright \xa9 2018 MediocreAtBest. All rights reserved.\n//\n\nimport UIKit\n\nclass PrimaryMapViewController: MapViewController {\n    // Nextmap button.\n    @IBOutlet weak var nextMap: UIButton!\n    // The primary map view controller could need to pass on a second floor.\n    var secondFloor = -1\n\n    // Sends data to the next view (Secondary Map Controller View).\n    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n        if segue.identifier == "gotoSecondaryMap" {\n            // Gets destination view controller as Secondary Map View controller and uses the set building function.\n            if let destinationVC = segue.destination as? SecondaryMapViewController {\n                destinationVC.initialize(building : building, floor1: self.floor, floor2 : self.secondFloor, startRoom: self.getStairsName(), destRoom: self.destRoom, floorStart: self.startRoom)\n            }\n        }\n            // For back button.\n        else if segue.identifier == "gotoBuilding" {\n            // Gets destination view controller as room view controller and uses the initialize function.\n            if let destinationVC = segue.destination as? RoomViewController {\n                destinationVC.setBuilding(building: self.building)\n            }\n        }\n    }\n\n    // Sets relevant variables. This is when the start and end floor are different.\n    func initialize(building : Int, floor1 : Int, floor2: Int, startRoom : String, destRoom : String) {\n        self.building = building\n        self.floor = floor1\n        self.secondFloor = floor2\n        self.startRoom = startRoom\n        self.destRoom = destRoom\n    }\n\n    // Gets the name of the stairs to pass to the secondary map view controller.\n    func getStairsName() -> String {\n        let pointMap = Building.relay.getPointMap(self.building)\n        let stairList = Building.relay.getStairs(building: self.building, floor: self.floor)\n        // Loops through stairs until appropriate stairs is found for destination point.\n        for index in 1...stairList.count {\n            if (self.destPoint == pointMap[Building.relay.getRoomValue(building: building, room: "stairs" + String(self.floor) + String(index))]!) {\n                return "stairs" + String(self.secondFloor) + String(index)\n            }\n        }\n        return ""\n    }\n\n    // Enables the second map button.\n    func enableSecondMapButton() {\n        nextMap.isEnabled = true\n        nextMap.setTitle("Go to Floor " + String(self.secondFloor) + " Map", for: .normal)\n        nextMap.titleLabel?.font = UIFont(name: "HelveticaNeue-Bold", size: 18)\n    }\n\n    // Set position of the markers.\n    override func setMarkerPositions() {\n        // Gets the point map.\n        let pointMap = Building.relay.getPointMap(building)\n        // Sets the starting location of each indicator (start and end).\n        self.startPoint = pointMap[Building.relay.getRoomValue(building: building, room: startRoom)]!\n        // If on the same floor, set as ending point normally, else get the stairs position.\n        if (self.secondFloor == -1) {\n            self.destPoint = pointMap[Building.relay.getRoomValue(building: building, room: destRoom)]!\n        }\n        else {\n            // Creates list of stairs.\n            let stairList = Building.relay.getStairs(building: self.building, floor: self.floor)\n            self.destPoint = Building.relay.getNearestNode(building: self.building, point: self.startPoint, nodes: stairList)\n        }\n\n        self.startIndicatorImageLeading.constant = startPoint.x\n        self.startIndicatorImageTop.constant = startPoint.y\n\n        self.destIndicatorImageLeading.constant = destPoint.x\n        self.destIndicatorImageTop.constant = destPoint.y - destIndicatorImage.frame.height / 2\n        self.view.layoutIfNeeded()\n    }\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // If second room exists, enable button.\n        if (self.secondFloor != -1) {\n            enableSecondMapButton()\n        }\n    }\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-swift"},'//\n//  MapViewController.swift\n//  MapBlue\n//\n//  Created by Akshay Subramaniam on 14/3/18.\n//  Copyright \xa9 2018 MediocreAtBest. All rights reserved.\n//\n\nimport UIKit\nimport CoreMotion\n\nclass MapViewController: UIViewController {\n    internal var building = 0\n    internal var floor = 0\n    internal var startRoom = "0"\n    internal var destRoom = "0"\n\n    @IBOutlet weak var mapTitle: UILabel!\n    @IBOutlet weak var mapImage: UIImageView!\n    // Constraints for Indicator Images.\n    // Top and Leading\n    @IBOutlet weak var startIndicatorImageTop: NSLayoutConstraint!\n    @IBOutlet weak var startIndicatorImageLeading: NSLayoutConstraint!\n    @IBOutlet weak var destIndicatorImageTop: NSLayoutConstraint!\n    @IBOutlet weak var destIndicatorImageLeading: NSLayoutConstraint!\n    // Indicator Images.\n    @IBOutlet weak var startIndicatorImage: UIImageView!\n    @IBOutlet weak var destIndicatorImage: UIImageView!\n    // Indicator Points.\n    internal var startPoint = Point(x: 0, y: 0)\n    internal var destPoint = Point(x: 0, y: 0)\n    // Point Nodes.\n    internal var points : [Point] = []\n    // Point Images.\n    internal var pointNodes : [UIImageView] = []\n    // Point centers.\n    internal var pointCenters : [CGPoint] = []\n    // Scroll view.\n    @IBOutlet weak var scrollView: UIScrollView!\n    // Center of the indicators.\n    internal var startIndicatorViewCenter : CGPoint = CGPoint.zero\n    internal var destIndicatorViewBottom : CGPoint = CGPoint.zero\n\n    // Sets relevant variables. This is when the floor is the same for both start and end rooms.\n    func initialize(building : Int, floor : Int, startRoom : String, destRoom : String) {\n        self.building = building\n        self.floor = floor\n        self.startRoom = startRoom\n        self.destRoom = destRoom\n    }\n\n    // Set position of the markers.\n    func setMarkerPositions() {\n        // Gets the point map.\n        let pointMap = Building.relay.getPointMap(building)\n        // Sets the starting location of each indicator (start and end).\n        self.startPoint = pointMap[Building.relay.getRoomValue(building: building, room: startRoom)]!\n        // If on the same floor, set as ending point normally, else get the stairs position.\n        self.destPoint = pointMap[Building.relay.getRoomValue(building: building, room: destRoom)]!\n\n        self.startIndicatorImageLeading.constant = startPoint.x\n        self.startIndicatorImageTop.constant = startPoint.y\n\n        self.destIndicatorImageLeading.constant = destPoint.x\n        self.destIndicatorImageTop.constant = destPoint.y - destIndicatorImage.frame.height / 2\n        self.view.layoutIfNeeded()\n    }\n\n    // Adds relevant points.\n    func setPoints() {\n        // Gets the points that links starting to destination.\n        startPoint.getFirstNeighbor().getNodeList(dest : destPoint.getFirstNeighbor(), from : startPoint, nodes : &points)\n        for point in self.points {\n            // Creates the image of the point itself and sets frame accordingly.\n            let imageName = "Point.png"\n            let image = UIImage(named: imageName)\n            let imageView = UIImageView(image: image!)\n            imageView.translatesAutoresizingMaskIntoConstraints = false\n            imageView.frame = CGRect(x: 0, y: 0, width: 20, height: 20)\n            // Adds image UI element to the scroll view.\n            self.scrollView.addSubview(imageView)\n            // Sets the constraints of the image. This is important because without these constraints the initial position would be impossible to set.\n            let widthConstraint = NSLayoutConstraint(item: imageView, attribute: NSLayoutAttribute.width, relatedBy: NSLayoutRelation.equal, toItem: nil, attribute: NSLayoutAttribute.width, multiplier: 1.0, constant: 15)\n            let heightConstraint = NSLayoutConstraint(item: imageView, attribute: NSLayoutAttribute.height, relatedBy: NSLayoutRelation.equal, toItem: nil, attribute: NSLayoutAttribute.height, multiplier: 1.0, constant: 15)\n            let leadingConstraint = NSLayoutConstraint(item: imageView, attribute: NSLayoutAttribute.leading, relatedBy: NSLayoutRelation.equal, toItem: self.scrollView, attribute: NSLayoutAttribute.leading, multiplier: 1.0, constant: point.x)\n            let topConstraint = NSLayoutConstraint(item: imageView, attribute: NSLayoutAttribute.top, relatedBy: NSLayoutRelation.equal, toItem: self.scrollView, attribute: NSLayoutAttribute.top, multiplier: 1.0, constant: point.y)\n            NSLayoutConstraint.activate([widthConstraint, heightConstraint, leadingConstraint, topConstraint])\n            // Updates view.\n            self.view.layoutIfNeeded()\n            // Appends the image to the image list, and the center of the image to the center point list.\n            pointNodes.append(imageView)\n            pointCenters.append(imageView.center)\n        }\n    }\n\n    // Initializes all points from the be.\n    func setPointChain() {\n        Building.relay.addMutualNeighbors(building: building, one: startPoint, two: Building.relay.getNearestNode(building: building, point: startPoint, nodes: Building.relay.getNodes(building)))\n        Building.relay.addMutualNeighbors(building: building, one: destPoint, two: Building.relay.getNearestNode(building: building, point: destPoint, nodes: Building.relay.getNodes(building)))\n    }\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Sets the map image itself.\n        mapImage.image = UIImage(named: getImage(building: building, floor: floor))\n        // Initializes all points.\n        Building.relay.initPoints(building: building, floor: floor)\n        // Initializes all nodes.\n        Building.relay.initNodes(building: building, floor: floor)\n        self.mapTitle.text = Building.buildingMap.getBuildingName(building: building) + " Floor " + String(self.floor) + " Map"\n        // Set marker starting positions.\n        self.setMarkerPositions()\n        // Sets indicator centers.\n        self.startIndicatorViewCenter = startIndicatorImage.center\n        self.destIndicatorViewBottom = CGPoint(x: destIndicatorImage.center.x, y: destIndicatorImage.center.y + destIndicatorImage.frame.height / 2)\n        // Sets content size of scroll view.\n        self.scrollView.contentSize = self.mapImage.frame.size\n        // Set neighbors of starting and ending indicator.\n        setPointChain()\n        // Set the point positions.\n        setPoints()\n    }\n\n    // Sets initial constants.\n    override func viewWillLayoutSubviews() {\n        super.viewWillLayoutSubviews()\n        updateMinZoomScaleForSize(scrollView.bounds.size)\n    }\n\n    // Sets the scroll view to have a consistent zoom scale. This is to prevent over or under zooming.\n    fileprivate func updateMinZoomScaleForSize(_ size: CGSize) {\n        let widthScale = size.width / self.mapImage.bounds.width\n        let heightScale = size.height / self.mapImage.bounds.height\n        let minScale = min(widthScale, heightScale)\n\n        scrollView.minimumZoomScale = minScale\n        scrollView.zoomScale = minScale\n\n        // Obtains the offset value.\n        let scaleAffineTransform = scrollView.transform.scaledBy(x: scrollView.zoomScale, y: scrollView.zoomScale)\n\n        // Translates all indicators accordingly.\n        var translatedPoint = startIndicatorViewCenter.applying(scaleAffineTransform)\n        self.startIndicatorImage.transform = scrollView.transform.translatedBy(x: translatedPoint.x - startIndicatorViewCenter.x, y: translatedPoint.y + 100 - startIndicatorViewCenter.y).scaledBy(x: 0.5 + scrollView.zoomScale, y: 0.5 + scrollView.zoomScale)\n\n        translatedPoint = destIndicatorViewBottom.applying(scaleAffineTransform)\n        self.destIndicatorImage.transform = scrollView.transform.translatedBy(x: translatedPoint.x - destIndicatorViewBottom.x, y: translatedPoint.y + 100 - destIndicatorViewBottom.y).scaledBy(x: 0.5 + scrollView.zoomScale, y: 0.5 + scrollView.zoomScale)\n\n        // Translates all points accordingly.\n        if (!pointNodes.isEmpty) {\n            for index in 0...pointNodes.count - 1 {\n                translatedPoint = pointCenters[index].applying(scaleAffineTransform)\n                pointNodes[index].transform = scrollView.transform.translatedBy(x: translatedPoint.x - pointCenters[index].x, y: translatedPoint.y + 100 - pointCenters[index].y).scaledBy(x: 0.5 + scrollView.zoomScale, y: 0.5 + scrollView.zoomScale)\n            }\n        }\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n}\n\n// Various zoom functions.\nextension MapViewController: UIScrollViewDelegate {\n    // Links the map to be zoomed in on.\n    func viewForZooming(in scrollView: UIScrollView) -> UIView? {\n        return mapImage\n    }\n\n    // Called when user zooms and upon initialization.\n    func scrollViewDidZoom(_ scrollView: UIScrollView) {\n        // Gets the offset value.\n        let scaleAffineTransform = scrollView.transform.scaledBy(x: scrollView.zoomScale, y: scrollView.zoomScale)\n\n        // Translates all indicators accordingly.\n        var translatedPoint = startIndicatorViewCenter.applying(scaleAffineTransform)\n        self.startIndicatorImage.transform = scrollView.transform.translatedBy(x: translatedPoint.x - startIndicatorViewCenter.x, y: translatedPoint.y + 100 - startIndicatorViewCenter.y).scaledBy(x: 0.5 + scrollView.zoomScale, y: 0.5 + scrollView.zoomScale)\n\n        translatedPoint = destIndicatorViewBottom.applying(scaleAffineTransform)\n        self.destIndicatorImage.transform = scrollView.transform.translatedBy(x: translatedPoint.x - destIndicatorViewBottom.x, y: translatedPoint.y + 100 - destIndicatorViewBottom.y).scaledBy(x: 0.5 + scrollView.zoomScale, y: 0.5 + scrollView.zoomScale)\n\n        // Translates all points accordingly.\n        if (!pointNodes.isEmpty) {\n            for index in 0...pointNodes.count - 1 {\n                translatedPoint = pointCenters[index].applying(scaleAffineTransform)\n                pointNodes[index].transform = scrollView.transform.translatedBy(x: translatedPoint.x - pointCenters[index].x, y: translatedPoint.y + 100 - pointCenters[index].y).scaledBy(x: 0.5 + scrollView.zoomScale, y: 0.5 + scrollView.zoomScale)\n            }\n        }\n    }\n\n    // Reset content size of scroll view.\n    func scrollViewDidEndZooming(_ scrollView: UIScrollView, with view: UIView?, atScale scale: CGFloat) {\n        let scaleAffineTransform = scrollView.transform.scaledBy(x: scale, y: scale)\n        self.scrollView.contentSize = self.mapImage.bounds.size.applying(scaleAffineTransform)\n        self.scrollView.contentSize.height = self.scrollView.contentSize.height * 1.1 // Account for bottom portion.\n    }\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-swift"},'//\n//  RoomViewController.swift\n//  MapBlue\n//\n//  Created by Akshay Subramaniam on 8/3/18.\n//  Copyright \xa9 2018 MediocreAtBest. All rights reserved.\n//\n\nimport UIKit\n\nclass RoomViewController: UIViewController {\n    // Building label (changed programatically).\n    @IBOutlet weak var buildingTitle: UILabel!\n    // Back button and go button.\n    @IBOutlet weak var backButton: UIButton!\n    @IBOutlet weak var goButton: UIButton!\n    // Different text fields.\n    @IBOutlet weak var startRoomField: UITextField!\n    @IBOutlet weak var destinationRoomField: UITextField!\n    @IBOutlet weak var roomOneError: UILabel!\n    @IBOutlet weak var roomTwoError: UILabel!\n    // The building the controller is concerned with.\n    private var building = 0\n\n    // Sends data to the next view (Map Controller View).\n    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n        if segue.identifier == "gotoMap" {\n            // Gets destination view controller as primary map view controller and uses the initialize function.\n            if let destinationVC = segue.destination as? PrimaryMapViewController {\n                // If start and dest are on same floor.\n                if (getFloor(startRoomField.text!) == getFloor(destinationRoomField.text!)) {\n                    destinationVC.initialize(building : building, floor : self.getFloor(self.startRoomField.text!), startRoom: self.startRoomField.text!, destRoom: self.destinationRoomField.text!)\n                }\n                // Else initialize with two floors.\n                else {\n                    destinationVC.initialize(building : building, floor1 : self.getFloor(self.startRoomField.text!), floor2: self.getFloor(self.destinationRoomField.text!), startRoom: self.startRoomField.text!, destRoom: self.destinationRoomField.text!)\n                }\n            }\n        }\n    }\n\n    // Gets first digit of the room (which is essentially the floor).\n    func getFloor(_ text : String) -> Int {\n        return Int(text[0..<1])!\n    }\n\n    func noErrors() -> Bool {\n        var check = true\n        // Checks if room 1 text is empty.\n        if (startRoomField.text == "") {\n            check = false\n            roomOneError.text = "Please enter a starting room"\n        }\n        // Checks if room does not exist.\n        else if (!Building.relay.roomExists(building: building, room: startRoomField.text!)) {\n            check = false\n            roomOneError.text = "Room does not exist"\n        }\n        // Resets error status.\n        else {\n            roomOneError.text = ""\n        }\n\n        // Checks if room 2 text is empty.\n        if (destinationRoomField.text == "") {\n            check = false\n            roomTwoError.text = "Please enter a destination room"\n        }\n        // Checks if room does not exist.\n        else if (!Building.relay.roomExists(building: building, room: destinationRoomField.text!)) {\n            check = false\n            roomTwoError.text = "Room does not exist"\n        }\n        // Resets error status.\n        else {\n            roomTwoError.text = ""\n        }\n        // Checks if rooms are equivalent.\n        if (check && Building.relay.getRoomValue(building: building, room: startRoomField.text!) == Building.relay.getRoomValue(building: building, room: destinationRoomField.text!) && getFloor(startRoomField.text!) == getFloor(destinationRoomField.text!)) {\n            check = false\n            roomOneError.text = "Rooms are in same location"\n            roomTwoError.text = "Rooms are in the same location"\n        }\n        // Returns check.\n        return check\n    }\n\n    @IBAction func GoMap(_ sender: Any) {\n        // Checks for any errors in room or destination text field. If none, proceed to map screen.\n        if (noErrors()) {\n            performSegue(withIdentifier: "gotoMap", sender: sender)\n        }\n    }\n\n    // Sets building to corresponding integer.\n    func setBuilding(building : Int?) {\n        self.building = building!\n    }\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Sets up the keyboard\'s dismissal upon screen being touched.\n        setupKeyboard()\n        // Sets label of room view controller.\n        self.buildingTitle.text = "You are in " + Building.buildingMap.getBuildingName(building: building)\n        // Initialize building room map.\n        Building.relay.initRooms(building)\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n}\n\n// Extends text field so that typing enter exits keyboard.\nextension RoomViewController: UITextFieldDelegate {\n    // Upon pressing enter key, exit keyboard. Possible due to text field delegation.\n    func textFieldShouldReturn(_ textField: UITextField) -> Bool {\n        self.view.endEditing(true)\n        return false\n    }\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-swift"},"//\n//  Point.swift\n//  MapBlue\n//\n//  Created by James Jiang on 3/23/18.\n//  Copyright \xa9 2018 MediocreAtBest. All rights reserved.\n//\n\nimport Foundation\n\nimport UIKit\n\nclass Point {\n    var x : CGFloat = 0\n    var y : CGFloat = 0\n    var neighbors: [Point] = []\n\n    init(x: CGFloat, y: CGFloat) {\n        self.x = x\n        self.y = y\n    }\n\n    static func getDistance(a : Point, b : Point) -> CGFloat\n    {\n        return sqrt(pow(a.x - b.x, 2) + pow(a.y - b.y, 2)).rounded()\n    }\n\n    func getNodeList(dest : Point, from : Point, nodes : inout [Point]) -> Bool {\n        if (self.neighbors.count == 0) {\n            return false\n        }\n        // This point is the destination point.\n        if (self == dest) {\n            nodes.append(self)\n            return true\n        }\n        // Removes point connection from neighbors to avoid counting it.\n        self.neighbors.remove(at: getPoint(point: from, nodes: self.neighbors))\n        // Check if point no longer has neighbors.\n        while (self.neighbors.count > 0) {\n            // Get the next point (nearest point to destination)\n            let nP = self.nextPoint(dest: dest)\n            // Remove point from neighbors.\n            self.neighbors.remove(at: getPoint(point: nP, nodes: self.neighbors))\n            // If the node does not lead to dead end, add this node the list.\n            if (nP.getNodeList(dest: dest, from: self, nodes: &nodes)) {\n                nodes.append(self)\n                return true\n            }\n        }\n        // This node leads to a dead end every way.\n        return false\n    }\n\n    // Gets the first neighbor of the point. Used for start and end indicators.\n    func getFirstNeighbor() -> Point {\n        return self.neighbors[0]\n    }\n\n    private func nextPoint(dest : Point) -> Point\n    {\n        var bestPoint = neighbors[0]\n        var bestDist = Point.getDistance(a: neighbors[0], b: dest)\n        for point in neighbors\n        {\n            if (Point.getDistance(a: point, b: dest) <  bestDist)\n            {\n                bestPoint = point\n                bestDist = Point.getDistance(a: point, b: dest)\n            }\n        }\n        return bestPoint\n    }\n\n    private func getPoint(point : Point, nodes : [Point]) -> Int {\n        for index in 0...nodes.count - 1 {\n            if (nodes[index] == point) {\n                return index\n            }\n        }\n        return -1\n    }\n}\n\nfunc ==(left: Point, right: Point) -> Bool {\n    return left.x == right.x && left.y == right.y\n}")}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-swift"},"//\n//  EECSHandler.swift\n//  MapBlue\n//\n//  Created by Akshay Subramaniam on 8/4/18.\n//  Copyright \xa9 2018 MediocreAtBest. All rights reserved.\n//\nimport Foundation\n\nimport UIKit\n\nclass EECSHandler : Handler {\n    private var nodeHandler = EECSNodeHandler()\n    private var roomHandler = EECSRoomHandler()\n    private var pointHandler = EECSPointHandler()\n\n    // Init functions.\n    func initNodes(_ floor : Int) {\n        nodeHandler.initNodes(floor)\n    }\n\n    func initRooms() {\n        roomHandler.initbuildingRoomMap()\n    }\n\n    func initPoints(building : Int, floor : Int) {\n        pointHandler.initPointMap(building: building, floor: floor)\n    }\n\n    // Get functions.\n    func getRoomMap() -> [String:Int] {\n        return roomHandler.getRoomMap()\n    }\n\n    func getNodes() -> [Point] {\n        return nodeHandler.getNodes()\n    }\n\n    func getPointMap() -> [Int:Point] {\n        return pointHandler.getPointMap()\n    }\n\n    // Point Map functions.\n    // Get stairs function.\n    func getStairs(building : Int, floor : Int) -> [Point] {\n        return pointHandler.getStairs(building : building, floor: floor)\n    }\n\n    // Get nearest node function.\n    func getNearestNode(point : Point, nodes : [Point]) -> Point {\n        return pointHandler.getNearestNode(point: point, nodes: nodes)\n    }\n\n    // Room Map functions.\n    func roomExists(_ room : String) -> Bool {\n        return roomHandler.roomExists(room)\n    }\n\n    func roomEquals(room1 : String, room2 : String) -> Bool {\n        return roomHandler.roomEquals(room1: room1, room2: room2)\n    }\n\n    func getRoomValue(_ room : String) -> Int {\n        return roomHandler.getRoomValue(room)\n    }\n\n    // Node functions.\n    func addMutualNeighbors(one : Point, two : Point) {\n        nodeHandler.addMutualNeighbors(one: one, two: two)\n    }\n}")}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},"package com.inoculates.dal.Sprites;\n\nimport box2dLight.ConeLight;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.Input;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\nimport com.badlogic.gdx.graphics.g2d.TextureAtlas;\nimport com.badlogic.gdx.math.MathUtils;\nimport com.badlogic.gdx.physics.box2d.*;\nimport com.badlogic.gdx.utils.Timer;\nimport com.inoculates.dal.UI.HealthBar;\nimport com.inoculates.dal.WorldHandlers.GameScreen;\n\nimport java.awt.*;\n\n//Created by akshaysubramaniam on 25/6/15.\n\npublic class Player extends Character {\n    private Body pBody;\n    private int health = 58, healthCounter = 0;\n    private TextureAtlas playerAtlas;\n    private HealthBar bar;\n    private boolean frozen = false;\n\n    // Initializes the body of the player.\n    public Player(GameScreen screen, World world, TextureAtlas atlas, float x, float y) {\n        super(screen, world);\n        this.playerAtlas = atlas;\n        createUI();\n        // Creates the definition for the body of the player, and sets it to dynamic.\n        BodyDef pDef = new BodyDef();\n        pDef.type = BodyDef.BodyType.DynamicBody;\n        // Sets the body's definition to pDef to apply the preceding lines to the body.\n        pBody = world.createBody(pDef);\n\n        // Creates the circular shape and its radius.\n        CircleShape shape = new CircleShape();\n        // Sets the radius to half the sprite's width. Note that it is 0.1 off the actual radius that should be used.\n        // This is to allow the player to squeeze in between blocks.\n        shape.setRadius(7.9f);\n\n        // Defines the shape.\n        FixtureDef fDef = new FixtureDef();\n        fDef.shape = shape;\n        // Sets density and friction for physics-related purposes.\n        fDef.density = 1;\n        fDef.friction = 0.5f;\n        // Makes the ball bounce a little.\n        fDef.restitution = 0.2f;\n        // Sets the fixture definitions that were just created to the body.\n        Fixture fixture = pBody.createFixture(fDef);\n        // Gets rid of unnecessary data.\n        shape.dispose();\n\n        // Sets the frame of the sprite to the player frame.\n        setRegion(playerAtlas.findRegion(\"Player1\"));\n        // Sets sizing of the sprite.\n        setSize(getRegionWidth(), getRegionHeight());\n        // Sets the position of the sprite to the given x and y position.\n        pBody.setTransform(x, y, 0);\n        pBody.setUserData(this);\n\n        // Creates the player head.\n        head = new PlayerHead(screen, this, atlas);\n\n        // Creates the flashlight and sets it to the main rayhandler.\n        fLight = new ConeLight(screen.lHandler.rHandler, 200, Color.GREEN, 100, getX(), getY(), head.getRotation(), 30);\n        fLight.setActive(false);\n        fLight.setSoftnessLength(100);\n    }\n\n    public void draw(SpriteBatch batch) {\n        // If dead, returns to prevent any interaction with the player character.\n        if (frozen)\n            return;\n        // Updates movement of the player.\n        update();\n        // Sets sprite around the physical body position.\n        setPosition(pBody.getPosition().x - getWidth() / 2, pBody.getPosition().y - getHeight() / 2);\n        // Sets origin of the sprite to center so that it can rotate around the center.\n        setOriginCenter();\n        setRotation(MathUtils.radiansToDegrees * pBody.getAngle());\n        super.draw(batch);\n        head.draw(batch);\n\n        // If the player is in lighting mode, rotate cone light.\n        if (lighting) {\n            fLight.setDirection(head.getRotation() + 90);\n            fLight.setPosition(head.getX() + head.getWidth() / 2, head.getY() + head.getHeight() / 2);\n        }\n        // Regenerates health, if able to.\n        regenHealth();\n    }\n\n    private void update() {\n        tryMove();\n        checkBoxLight();\n    }\n\n    private void tryMove() {\n        // Sets the player's linear velocity depending on the input of the player.\n        if (Gdx.input.isKeyPressed(Input.Keys.W) && !Gdx.input.isKeyPressed(Input.Keys.S))\n            pBody.setLinearVelocity(pBody.getLinearVelocity().x, 50);\n        if (Gdx.input.isKeyPressed(Input.Keys.S) && !Gdx.input.isKeyPressed(Input.Keys.W))\n            pBody.setLinearVelocity(pBody.getLinearVelocity().x, -50);\n        if (Gdx.input.isKeyPressed(Input.Keys.D) && !Gdx.input.isKeyPressed(Input.Keys.A))\n            pBody.setLinearVelocity(50, pBody.getLinearVelocity().y);\n        else if (Gdx.input.isKeyPressed(Input.Keys.A) && !Gdx.input.isKeyPressed(Input.Keys.D))\n            pBody.setLinearVelocity(-50, pBody.getLinearVelocity().y);\n\n        if (!Gdx.input.isKeyPressed(Input.Keys.W) && !Gdx.input.isKeyPressed(Input.Keys.S))\n            pBody.setLinearVelocity(pBody.getLinearVelocity().x, 0);\n        if (!Gdx.input.isKeyPressed(Input.Keys.D) && !Gdx.input.isKeyPressed(Input.Keys.A))\n            pBody.setLinearVelocity(0, pBody.getLinearVelocity().y);\n\n        if (pBody.getLinearVelocity().x != 0 || pBody.getLinearVelocity().y != 0) {\n            // Sets frame to active frame.\n            setRegion(playerAtlas.findRegion(\"Player2\"));\n            // Rotates the player when moving. Axis of rotation is based on the direction the player is going.\n            if (pBody.getLinearVelocity().x > 0 || (pBody.getLinearVelocity().y > 0 && pBody.getLinearVelocity().x == 0))\n                pBody.setAngularVelocity(-5);\n            else\n                pBody.setAngularVelocity(5);\n        }\n        else {\n            // Sets frame to inert frame and stops the player from rotating.\n            setRegion(playerAtlas.findRegion(\"Player1\"));\n            pBody.setAngularVelocity(0);\n        }\n\n        // If the player is in the green end square, the player wins the game.\n        if (isCellEnd(getBX(), getBY()))\n            screen.winScreen();\n    }\n\n    // Regenerates health of the player if no damage was taken for five seconds.\n    private void regenHealth() {\n        // If under a light, does not allow regeneration.\n        if (lit || health == 58)\n            return;\n\n        // Increases health.\n        health++;\n        bar.updateHealth(health);\n    }\n\n    // Reduces the health of the player and updates the UI accordingly.\n    public void loseHealth() {\n        // Health is zero, no need to calculate anything.\n        if (health == 0)\n            return;\n\n        // This counter is here to ensure that the player's health does not go down too fast. It takes ten calls of\n        // this method to effect any change in health.\n        healthCounter ++;\n\n        if (healthCounter > 2) {\n            // Informs the program that the player should not be regenerating, removes HP, updates the UI, and resets\n            // the player counter.\n            lit = true;\n            health --;\n            bar.updateHealth(health);\n            healthCounter = 0;\n\n            // If after three seconds the player's health has not been reduced, allows the player to regenerate again.\n            final int oldHealth = health;\n            Timer timer = new Timer();\n            timer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    checkUnlit(oldHealth);\n                }\n            }, 5);\n            timer.start();\n        }\n\n        if (health == 0)\n            die();\n    }\n\n    // Fills in the box if it is within the player's flashlight.\n    private void checkBoxLight() {\n        for (TerrainObject tObject : screen.tObjects)\n            if (tObject instanceof LightBox) {\n                LightBox box = (LightBox) tObject;\n                if (checkLightCollision(box.getX() + box.getWidth() / 2, box.getY() + box.getHeight() / 2))\n                    box.colorIn();\n            }\n    }\n\n    private void checkUnlit(final int oldHealth) {\n        lit = health != oldHealth;\n    }\n\n    private void createUI() {\n        // Creates the UI of the game.\n        bar = new HealthBar(screen, world, screen.spriteAtlases.get(1), 5, 135);\n        screen.UIs.add(bar);\n    }\n\n    // Brings up the lose screen.\n    private void die() {\n        screen.loseScreen();\n        frozen = true;\n    }\n\n    //Gets the body position's x and y.\n    public float getBX() {\n        return pBody.getPosition().x;\n    }\n\n    public float getBY() {\n        return pBody.getPosition().y;\n    }\n}")}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},'package com.inoculates.dal.Sprites;\n\n// Created by akshaysubramaniam on 13/7/15.\n\nimport box2dLight.ConeLight;\nimport com.badlogic.gdx.graphics.g2d.Sprite;\nimport com.badlogic.gdx.maps.tiled.TiledMapTileLayer;\nimport com.badlogic.gdx.math.MathUtils;\nimport com.badlogic.gdx.physics.box2d.World;\nimport com.inoculates.dal.WorldHandlers.GameScreen;\n\npublic class Character extends Sprite {\n    protected GameScreen screen;\n    protected World world;\n    protected Head head;\n    protected ConeLight fLight;\n    protected TiledMapTileLayer layer;\n\n    protected boolean lighting = false, lit = false;\n\n    public Character(GameScreen screen, World world) {\n        this.screen = screen;\n        this.world = world;\n        layer = (TiledMapTileLayer) screen.getMap().getLayers().get("Objects");\n    }\n\n    // Switches on/off the light and the color of the head correspondingly.\n    public void switchLight() {\n        // Resets the position of the flashlight so it draws at the correct position immediately.\n        fLight.setDirection(head.getRotation() + 90);\n        fLight.setPosition(head.getX() + head.getWidth() / 2, head.getY() + head.getHeight() / 2);\n\n        // Switches on/off the flashlight.\n        lighting = !lighting;\n        // Changes the color of the head.\n        head.changeColor(lighting);\n        // Sets the light to active, so that it is rendered.\n        fLight.setActive(lighting);\n    }\n\n    // Checks to see whether the target is in the cone of light.\n    protected boolean checkLightCollision(float tX, float tY) {\n        // Distance of the light.\n        float lightDistance = fLight.getDistance() / 2.5f;\n        // Returns if no flashlight was lit.\n        if (!lighting)\n            return false;\n\n        // Creates a line based on the angle the character is facing. If the target is too close to this line, which\n        // is determined by how far along the line the program has iterated to, the method will return true.\n        for (float i = 0; i < lightDistance; i++) {\n            // Gets the position of the line in the current iteration.\n            float fX = (float) (fLight.getX() + Math.cos((head.getRotation() + 90) * MathUtils.degreesToRadians) * i);\n            float fY = (float) (fLight.getY() + Math.sin((head.getRotation() + 90) * MathUtils.degreesToRadians) * i);\n            // Gets distance.\n            float distance = (float) (Math.sqrt(Math.pow((tX - fX), 2) + Math.pow((tY - fY), 2)));\n            // Minimum distance determined by i, or how far it has iterated. Farther out means more leniency with\n            // distance. This roughly emulates the cone flashlight model. Also checks to see if anything is blocking\n            // the light.\n            if (distance < 25 / lightDistance * i && pathingClear(fX, fY))\n                return true;\n        }\n        return false;\n    }\n\n    // This is the pathing method that checks whether the target is beyond a light-blocking threshold, like a box.\n    // sX and sY are the light points where the character\'s light has overlapped with the target.\n    protected boolean pathingClear(float sX, float sY) {\n        // Angle between the light point and the flash light point.\n        double angle = Math.atan2(fLight.getY() - sY, fLight.getX() - sX);\n        // Distance between the light point and the flash light point.\n        float distance = (float) (Math.sqrt(Math.pow((fLight.getX() - sX), 2) + Math.pow((fLight.getY() - sY), 2)));\n        // Creates a line between the two points and iterates through it.\n        for (float i = 0; i <= distance; i++) {\n            float fX = (float) (sX + Math.cos(angle) * i);\n            float fY = (float) (sY + Math.sin(angle) * i);\n            // If area is blocked, that means the light does not pierce through the threshold, therefore return false.\n            if (isCellBlocked(fX, fY))\n                return false;\n        }\n\n        return true;\n    }\n\n    // Checks whether the cell at the x and y point is blocked or not.\n    protected boolean isCellBlocked(float x, float y) {\n        // Gets the cell by dividing the x position of the character by the tile width (16) and casting to an int. The\n        // same is done for the y position. This will essentially acquire the cell position, which will then be checked\n        // for its properties.\n        TiledMapTileLayer.Cell cell = layer.getCell((int) (x / layer.getTileWidth()), (int) (y / layer.getTileHeight()));\n        // Checks if one of the cell properties is blocked.\n        return cell != null && cell.getTile() != null && (cell.getTile().getProperties().containsKey("block") ||\n                cell.getTile().getProperties().containsKey("lbox"));\n    }\n\n    // Checks whether the cell at the x and y point is the end tile.\n    protected boolean isCellEnd(float x, float y) {\n        // Gets the cell by dividing the x position of the character by the tile width (16) and casting to an int. The\n        // same is done for the y position. This will essentially acquire the cell position, which will then be checked\n        // for its properties.\n        TiledMapTileLayer.Cell cell = layer.getCell((int) (x / layer.getTileWidth()), (int) (y / layer.getTileHeight()));\n        // Checks if one of the cell properties is blocked.\n        return cell != null && cell.getTile() != null && (cell.getTile().getProperties().containsKey("end"));\n    }\n\n    // Gets the distance using the basic formula.\n    protected float getDistance(float x1, float y1, float x2, float y2) {\n        return (float) Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n    }\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},'package com.inoculates.dal.WorldHandlers;\n\nimport box2dLight.Light;\nimport box2dLight.PointLight;\nimport box2dLight.RayHandler;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.maps.MapObject;\nimport com.badlogic.gdx.maps.objects.RectangleMapObject;\nimport com.badlogic.gdx.maps.tiled.TiledMap;\nimport com.badlogic.gdx.maps.tiled.TiledMapTileLayer;\nimport com.badlogic.gdx.math.*;\nimport com.badlogic.gdx.physics.box2d.World;\n\nimport java.util.ArrayList;\n\n// Created by akshaysubramaniam on 30/6/15.\npublic class LightHandler {\n    private GameScreen screen;\n    private TiledMap map;\n    private TiledMapTileLayer layer;\n    public RayHandler rHandler;\n\n    public LightHandler(GameScreen screen, World world, TiledMap map) {\n        this.screen = screen;\n        this.map = map;\n\n        // Gets one layer of the map for layer purposes.\n        layer = (TiledMapTileLayer) map.getLayers().get("Objects");\n        // Creates the ray handler, which draws and updates all lights.\n        rHandler = new RayHandler(world);\n        // Sets ambient light so that the game is barely lit.\n        rHandler.setAmbientLight(0, 0, 0, 0.1f);\n        // Creates all the point lights.\n        createLights();\n    }\n\n    public void createLights() {\n        // Gets every object in the spawns layer.\n        for (MapObject object : map.getLayers().get("Lights").getObjects())\n            // If object is rectangle.\n            if (object instanceof RectangleMapObject) {\n                RectangleMapObject rectObject = (RectangleMapObject) object;\n                Rectangle rect = rectObject.getRectangle();\n                // Gets the middle of the tile the rectangle is in.\n                float x = (int) (rect.getX() / layer.getTileWidth()) * layer.getTileWidth() + layer.getTileWidth() / 2;\n                float y = (int) (rect.getY() / layer.getTileHeight()) * layer.getTileHeight() + layer.getTileHeight() / 2;\n\n                // If player spawn, creates player.\n                if (object.getProperties().containsKey("pl")) {\n                    Color color = getColor(object);\n                    PointLight light = new PointLight(rHandler, 100, color, 100, x, y);\n                    light.setSoftnessLength(100);\n                }\n            }\n    }\n\n    // Gets the color object based on the string that the map object has.\n    private Color getColor(MapObject object) {\n        if (object.getProperties().containsKey("white"))\n            return Color.LIGHT_GRAY;\n        if (object.getProperties().containsKey("red"))\n            return Color.RED;\n        if (object.getProperties().containsKey("green"))\n            return Color.GREEN;\n        if (object.getProperties().containsKey("blue"))\n            return Color.BLUE;\n        if (object.getProperties().containsKey("yellow"))\n            return Color.YELLOW;\n        return null;\n    }\n\n    public void light() {\n        // Renders the lights, depending on what the orthographic camera is currently viewing.\n        rHandler.setCombinedMatrix(screen.camera.combined);\n        rHandler.updateAndRender();\n    }\n\n    public void dispose() {\n        rHandler.dispose();\n    }\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},'package com.inoculates.dal.Sprites;\n\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.g2d.TextureAtlas;\nimport com.badlogic.gdx.physics.box2d.*;\nimport com.inoculates.dal.WorldHandlers.GameScreen;\n\n//Created by akshaysubramaniam on 25/6/15.\n\npublic class LightBox extends TerrainObject {\n    float color = 0;\n    boolean lit = false;\n\n    // Initializes a light box that serves as a switch. Look at the block class for a sufficient explanation on what occurs\n    // in this constructor.\n    public LightBox(GameScreen screen, World world, TextureAtlas atlas, TerrainObject link, float x, float y) {\n        super(screen, world, atlas, link);\n        BodyDef tDef = new BodyDef();\n        tDef.type = BodyDef.BodyType.StaticBody;\n        tBody = world.createBody(tDef);\n\n        PolygonShape shape = new PolygonShape();\n        shape.setAsBox(8, 8);\n\n        FixtureDef fDef = new FixtureDef();\n        fDef.shape = shape;\n        Fixture fixture = tBody.createFixture(fDef);\n        shape.dispose();\n\n        tBody.setTransform(x, y, 0);\n        setRegion(terrainAtlas.findRegion("LightBox"));\n        setSize(getRegionWidth(), getRegionHeight());\n        setPosition(tBody.getPosition().x - getWidth() / 2, tBody.getPosition().y - getHeight() / 2);\n        color = getColor().b;\n        setAlpha(0.5f);\n    }\n\n    // Incrementally fills in the color of the box, to indicate how close it is to activating its link.\n    public void colorIn() {\n        // Box already lit and has activated the link.\n        if (lit)\n            return;\n        // Otherwise color in by increasing the color float and then setting that as the blue pixel value.\n        color += 2;\n        setColor(getColor().r, getColor().g, color, getColor().a);\n        setAlpha(0.5f + color / 510f);\n        // If fully yellow, activates link and sets itself to lit. Additionally, sets the color to be green.\n        if (color == 255) {\n            link.activate();\n            lit = true;\n            setColor(Color.GREEN);\n        }\n    }\n\n    // Does not activate.\n    public void activate() {\n\n    }\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},'package com.inoculates.dal.Sprites;\n\nimport box2dLight.ConeLight;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\nimport com.badlogic.gdx.graphics.g2d.TextureAtlas;\nimport com.badlogic.gdx.math.MathUtils;\nimport com.badlogic.gdx.physics.box2d.*;\nimport com.badlogic.gdx.utils.Timer;\nimport com.inoculates.dal.WorldHandlers.GameScreen;\n\n//Created by akshaysubramaniam on 25/6/15.\n\npublic class YellowLighter extends Enemy {\n    private float moveTime = 0, spawnX, spawnY;\n    protected boolean following = false, returning = false;\n    private Timer unfollowTimer = new Timer();\n\n    // The Yellow Lighter is an enemy that can move around freely, and will pursue the player if it sees him/her. The\n    // class itself is very similar to the player class.\n    public YellowLighter(GameScreen screen, World world, TextureAtlas atlas, float x, float y) {\n        super(screen, world, atlas);\n\n        BodyDef eDef = new BodyDef();\n        eDef.type = BodyDef.BodyType.DynamicBody;\n        eBody = world.createBody(eDef);\n\n        // Creates the circular shape and its radius.\n        CircleShape shape = new CircleShape();\n        shape.setRadius(7.9f);\n\n        FixtureDef fDef = new FixtureDef();\n        fDef.shape = shape;\n        fDef.density = 1;\n        fDef.friction = 0.5f;\n        fDef.restitution = 0.2f;\n        Fixture fixture = eBody.createFixture(fDef);\n        shape.dispose();\n\n        setRegion(enemyAtlas.findRegion("YellowLighter1"));\n        setSize(getRegionWidth(), getRegionHeight());\n        eBody.setTransform(x, y, 0);\n        spawnX = eBody.getPosition().x;\n        spawnY = eBody.getPosition().y;\n        eBody.setUserData(this);\n\n        head = new YellowLighterHead(screen, this, atlas);\n\n        // Creates the flashlight and sets it to the main rayhandler.\n        fLight = new ConeLight(screen.lHandler.rHandler, 300, Color.YELLOW, 85, getX(), getY(), head.getRotation(), 20);\n        fLight.setSoftnessLength(100);\n        fLight.setActive(false);\n    }\n\n    public void draw(SpriteBatch batch) {\n        update();\n        super.draw(batch);\n        head.draw(batch);\n    }\n\n    protected void update() {\n        updateTime(Gdx.graphics.getDeltaTime());\n\n        // Sets sprite around the physical body position.\n        setPosition(eBody.getPosition().x - getWidth() / 2, eBody.getPosition().y - getHeight() / 2);\n        // Sets origin of the sprite to center so that it can rotate around the center.\n        setOriginCenter();\n        setRotation(MathUtils.radiansToDegrees * eBody.getAngle());\n\n        // If the player is in lighting mode, set position of cone light.\n        if (lighting) {\n            fLight.setDirection(head.getRotation() + 90);\n            fLight.setPosition(head.getX() + head.getWidth() / 2, head.getY() + head.getHeight() / 2);\n\n            // If player is inside flashlight, makes him/her lose health. Also begins following the player.\n            if (checkLightCollision(screen.player.getBX(), screen.player.getBY()) && !returning) {\n                screen.player.loseHealth();\n                following = true;\n                // Clears timer so that it is effectively reset.\n                unfollowTimer.clear();\n            }\n            // Otherwise checks if it\'s necessary to unfollow the player.\n            else\n                checkUnfollow();\n        }\n\n        if (moveTime > 2) {\n            // Starts normal movement.\n            if (!following && !returning)\n                checkMove();\n        }\n\n        // Follows the player, attempting to continuously shine light on him.\n        if (following)\n            follow();\n        // Returns to the spawn point, deactivating its light.\n        if (returning)\n            returnSpawn();\n\n        if (!following && !returning && isMoving())\n            rotateHead();\n\n        // Ensures that the yellow lighter is moving in the correct direction at all times (or not moving if immobile).\n        if (lighting && !following)\n            eBody.setLinearVelocity((float) Math.cos(rotateAngle) * 25, (float) Math.sin(rotateAngle) * 25);\n\n        tryMove();\n    }\n\n    private void tryMove() {\n        if (eBody.getLinearVelocity().x != 0 || eBody.getLinearVelocity().y != 0) {\n            setRegion(enemyAtlas.findRegion("YellowLighter2"));\n            if (eBody.getLinearVelocity().x > 0 || (eBody.getLinearVelocity().y > 0 && eBody.getLinearVelocity().x == 0))\n                eBody.setAngularVelocity(-5);\n            else\n                eBody.setAngularVelocity(5);\n        }\n        else {\n            // Sets frame to inert frame and stops the player from rotating.\n            setRegion(enemyAtlas.findRegion("YellowLighter1"));\n            eBody.setAngularVelocity(0);\n        }\n    }\n\n    // Checks whether or not the Yellow Lighter should move.\n    private void checkMove() {\n        // If the yellow lighter is currently out of bounds, moves the yellow lighter in the opposite velocity that\n        // got it here.\n        if (screen.bHandler.isOutOfBounds(getBX(), getBY()) && !returning) {\n            switchLight();\n            eBody.setLinearVelocity((float) Math.cos(head.getRotation()) * 25, (float) Math.sin(head.getRotation()) * 25);\n            moveTime = 0;\n            returning = true;\n            return;\n        }\n\n        // Randomly selects a direction to move.\n        int random = (int) (Math.random() * 5);\n        // If zero, remain still and turn off light.\n        if (random == 0) {\n            eBody.setLinearVelocity(0, 0);\n            // Switches light off if on.\n            if (lighting)\n                switchLight();\n        }\n        // Else sets the direction accordingly.\n        else {\n            // Switches light on if off.\n            if (!lighting)\n                switchLight();\n\n            float angle = (float) Math.random() * 360;\n            eBody.setLinearVelocity((float) Math.cos(angle) * 25, (float) Math.sin(angle) * 25);\n            head.setRotation(angle);\n            rotateAngle = angle;\n        }\n        moveTime = 0;\n    }\n\n    // Constantly acquires an angle and uses it to set the velocity.\n    public void follow() {\n        // If the yellow lighter is currently out of bounds, moves the yellow lighter in the opposite velocity that\n        // got it here.\n        if (screen.bHandler.isOutOfBounds(getBX(), getBY())) {\n            following = false;\n            checkMove();\n            return;\n        }\n\n        // If for whatever reason the light is not on while following, turns it on.\n        if (!lighting)\n            switchLight();\n\n        // Gets angle between the Yellow Lighter and the player.\n        float angle = (float) Math.atan2(screen.player.getBY() - getBY(),\n                screen.player.getBX() - getBX());\n        // Sets the velocity based on the cosine and sine of the angle.\n        eBody.setLinearVelocity((float) Math.cos(angle) * 25, (float) Math.sin(angle) * 25);\n        head.setRotation(angle * MathUtils.radiansToDegrees - 90);\n    }\n\n    private void checkUnfollow() {\n        unfollowTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                if (!checkLightCollision(screen.player.getBX(), screen.player.getBY()))\n                    following = false;\n            }\n        }, 2);\n        unfollowTimer.start();\n    }\n\n    private void returnSpawn() {\n        // Gets angle between the Yellow Lighter and the spawn point.\n        float angle = (float) Math.atan2(spawnY - getBY(),\n                spawnX - getBX());\n        // Sets the velocity based on the cosine and sine of the angle.\n        eBody.setLinearVelocity((float) Math.cos(angle) * 25, (float) Math.sin(angle) * 25);\n        head.setRotation(angle * MathUtils.radiansToDegrees - 90);\n\n        // If the yellow lighter is near enough to the spawn point, stops returning.\n        if (getDistance(getBX(), getBY(), spawnX, spawnY) < 0.25f) {\n            eBody.setLinearVelocity(0, 0);\n            head.setRotation(0);\n            setRotation(0);\n            returning = false;\n        }\n    }\n\n    // Increments the time based on Gdx.graphics.getDeltaTime().\n    protected void updateTime(float deltaTime) {\n        if (!returning && !following)\n            moveTime += deltaTime;\n    }\n\n    public boolean getReturning() {\n        return returning;\n    }\n\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},'/*\n * Copyright (C) 2007 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.example.android.circlegame;\n\nimport android.app.Activity;\nimport android.content.pm.ActivityInfo;\nimport android.graphics.Typeface;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.media.AudioManager;\nimport android.media.SoundPool;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.MotionEvent;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.TextView;\n\nimport com.example.android.circlegame.CircleGameView.CircleGameThread;\n\npublic class CircleGame extends Activity {\n    private static final int MENU_EASY = 1;\n\n    private static final int MENU_HARD = 2;\n\n    private static final int MENU_MEDIUM = 3;\n\n    private static final int MENU_PAUSE = 4;\n\n    private static final int MENU_RESUME = 5;\n\n    private static final int MENU_START = 6;\n\n    private static final int MENU_STOP = 7;\n\n    Button nextLevel;\n    Button returnMenu;\n    Button tryAgain;\n    Button play;\n    Button levelSelect;\n    Button credits;\n    Button highScores;\n    Button back;\n    Button nextPage;\n    Button prevPage;\n    Button[] levels;\n\n\n    /**\n     * A handle to the thread that\'s actually running the animation.\n     */\n    private CircleGameThread mCircleGameThread;\n\n    /**\n     * Invoked during init to give the Activity a chance to set up its Menu.\n     *\n     * @param menu the Menu to which entries may be added\n     * @return true\n     */\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        super.onCreateOptionsMenu(menu);\n\n\n        return true;\n    }\n\n    /**\n     * Invoked when the user selects an item from the Menu.\n     *\n     * @param item the Menu entry which was selected\n     * @return true if the Menu item was legit (and we consumed it), false\n     * otherwise\n     */\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n            case MENU_START:\n                mCircleGameThread.doDraw(null);\n                return true;\n            case MENU_STOP:\n                mCircleGameThread.doDraw(null);\n                return true;\n            case MENU_PAUSE:\n                mCircleGameThread.doDraw(null);\n                return true;\n            case MENU_RESUME:\n                return true;\n            case MENU_EASY:\n                return true;\n            case MENU_MEDIUM:\n                return true;\n            case MENU_HARD:\n                return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Invoked when the Activity is created.\n     *\n     * @param savedInstanceState a Bundle containing state saved from a previous\n     *                           execution, or null if this is a new execution\n     */\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        levels = new Button[10];\n        //Audio player for when a button is pressed\n        final SoundPool sp = new SoundPool(5, AudioManager.STREAM_MUSIC, 0);\n\n        CircleGameView mCircleGameView;\n\n        super.onCreate(savedInstanceState);\n\n        setContentView(R.layout.circle_game);\n\n        //Sets the view and thread\n        mCircleGameView = (CircleGameView) findViewById(R.id.circle);\n        mCircleGameThread = mCircleGameView.getThread();\n        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\n\n        //Creates all the fonts\n        Typeface sText = Typeface.createFromAsset(this.getAssets(), "fonts/pixel_coleco.otf");\n        Typeface lText = Typeface.createFromAsset(this.getAssets(), "fonts/ringmatrix3d.ttf");\n        Typeface mText = Typeface.createFromAsset(this.getAssets(), "fonts/ringmatrix.ttf");\n        Typeface altText = Typeface.createFromAsset(this.getAssets(), "fonts/lcd_solid.ttf");\n        Typeface altText2 = Typeface.createFromAsset(this.getAssets(), "fonts/glasstown_nbp.ttf");\n        Typeface altText3 = Typeface.createFromAsset(this.getAssets(), "fonts/cymopxl.ttf");\n        Typeface altText4 = Typeface.createFromAsset(this.getAssets(), "fonts/pixel_nes.otf");\n        Typeface altText5 = Typeface.createFromAsset(this.getAssets(), "fonts/prstartk.ttf");\n\n        //All buttons and fonts are assigned their respective ID\'s\n        play = (Button) findViewById(R.id.play);\n        play.setTypeface(lText);\n        levelSelect = (Button) findViewById(R.id.levelSelect);\n        levelSelect.setTypeface(lText);\n        credits = (Button) findViewById(R.id.credits);\n        credits.setTypeface(lText);\n        highScores = (Button) findViewById(R.id.highScores);\n        highScores.setTypeface(lText);\n        TextView gameBegins = (TextView) findViewById(R.id.gameBegins);\n        TextView gameOver = (TextView) findViewById(R.id.gameOver);\n        gameBegins.setTypeface(altText3);\n        nextLevel = (Button) findViewById(R.id.nextLevel);\n        nextLevel.setTypeface(altText2);\n        returnMenu = (Button) findViewById(R.id.returnMenu);\n        returnMenu.setTypeface(altText2);\n        tryAgain = (Button) findViewById(R.id.tryAgain);\n        tryAgain.setTypeface(altText2);\n        back = (Button) findViewById(R.id.back);\n        back.setTypeface(altText);\n        nextPage = (Button) findViewById(R.id.nextPage);\n        nextPage.setTypeface(altText);\n        prevPage = (Button) findViewById(R.id.prevPage);\n        prevPage.setTypeface(altText);\n        gameOver.setTypeface(altText4);\n\n        levels[0] = (Button) findViewById(R.id.level1);\n        levels[1] = (Button) findViewById(R.id.level2);\n        levels[2] = (Button) findViewById(R.id.level3);\n        levels[3] = (Button) findViewById(R.id.level4);\n        levels[4] = (Button) findViewById(R.id.level5);\n        levels[5] = (Button) findViewById(R.id.level6);\n        levels[6] = (Button) findViewById(R.id.level7);\n        levels[7] = (Button) findViewById(R.id.level8);\n        levels[8] = (Button) findViewById(R.id.level9);\n        levels[9] = (Button) findViewById(R.id.level10);\n\n\n        TextView screen = (TextView) findViewById(R.id.screen);\n        TextView score = (TextView) findViewById(R.id.score);\n        score.setTypeface(sText);\n        TextView chooseLevel = (TextView) findViewById(R.id.chooseLevel);\n        chooseLevel.setTypeface(altText5);\n        TextView highScoreList = (TextView) findViewById(R.id.highScoreList);\n        highScoreList.setTypeface(altText5);\n        TextView scores[] = new TextView[10];\n        TextView creditTitle = (TextView) findViewById(R.id.creditTitle);\n        creditTitle.setTypeface(altText5);\n        TextView creditList = (TextView) findViewById(R.id.creditList);\n        creditList.setTypeface(mText);\n        TextView title = (TextView) findViewById(R.id.memori);\n        title.setTypeface(lText);\n\n        scores[0] = (TextView) findViewById(R.id.score1);\n        scores[1] = (TextView) findViewById(R.id.score2);\n        scores[2] = (TextView) findViewById(R.id.score3);\n        scores[3] = (TextView) findViewById(R.id.score4);\n        scores[4] = (TextView) findViewById(R.id.score5);\n        scores[5] = (TextView) findViewById(R.id.score6);\n        scores[6] = (TextView) findViewById(R.id.score7);\n        scores[7] = (TextView) findViewById(R.id.score8);\n        scores[8] = (TextView) findViewById(R.id.score9);\n        scores[9] = (TextView) findViewById(R.id.score10);\n\n        for (int i = 0; i < 10; i ++)\n        {\n            levels[i].setTypeface(sText);\n            scores[i].setTypeface(mText);\n        }\n\n        mCircleGameView.setGameOver((TextView) findViewById(R.id.gameOver));\n        mCircleGameView.setGameBegins((TextView) findViewById(R.id.gameBegins));\n        mCircleGameView.setReturnMenu(returnMenu);\n        mCircleGameView.setNextLevel(nextLevel);\n        mCircleGameView.setTryAgain(tryAgain);\n        mCircleGameView.setPlay(play);\n        mCircleGameView.setLevelSelect(levelSelect);\n        mCircleGameView.setCredits(credits);\n        mCircleGameView.setHighScores(highScores);\n        mCircleGameView.setScoreView(score);\n        mCircleGameView.setChooseLevel(chooseLevel);\n        mCircleGameView.setLevels(levels);\n        mCircleGameView.setBack(back);\n        mCircleGameView.setNextPage(nextPage);\n        mCircleGameView.setPrevPage(prevPage);\n        mCircleGameView.setHighScoreList(highScoreList);\n        mCircleGameView.setScores(scores);\n        mCircleGameView.setCreditTitle(creditTitle);\n        mCircleGameView.setCreditList(creditList);\n        mCircleGameView.setTitle(title);\n\n        //Sets the events that occur when a button is pressed\n        screen.setOnTouchListener(new View.OnTouchListener() {\n            @Override\n            public boolean onTouch(View v, MotionEvent event) {\n                if (event.getAction() == MotionEvent.ACTION_DOWN)\n                    mCircleGameThread.isInCircle(event);\n                return true;\n            }\n        });\n\n        play.setOnClickListener(new View.OnClickListener() {\n            public void onClick(View v) {\n                titleButtons();\n                sp.play(sp.load(getApplicationContext(), R.raw.main_menu_sound, 1), 1, 1, 0, 0, 1);\n                mCircleGameThread.play();            }\n        });\n\n\n        levelSelect.setOnClickListener(new View.OnClickListener() {\n            public void onClick(View v) {\n                titleButtons();\n                sp.play(sp.load(getApplicationContext(), R.raw.main_menu_sound, 1), 1, 1, 0, 0, 1);\n                mCircleGameThread.chooseLevel();\n            }\n        });\n\n        credits.setOnClickListener(new View.OnClickListener() {\n            public void onClick(View v) {\n                titleButtons();\n                sp.play(sp.load(getApplicationContext(), R.raw.main_menu_sound, 1), 1, 1, 0, 0, 1);\n                mCircleGameThread.credits();\n            }\n        });\n\n        highScores.setOnClickListener(new View.OnClickListener() {\n            public void onClick(View v) {\n                titleButtons();\n                sp.play(sp.load(getApplicationContext(), R.raw.main_menu_sound, 1), 1, 1, 0, 0, 1);\n                mCircleGameThread.highScores();\n            }\n        });\n\n        returnMenu.setOnClickListener(new View.OnClickListener() {\n            public void onClick(View v) {\n                endButtons();\n                sp.play(sp.load(getApplicationContext(), R.raw.leave_game_sounds, 1), 1, 1, 0, 0, 1);\n                mCircleGameThread.returnMenu();\n            }\n        });\n\n        nextLevel.setOnClickListener(new View.OnClickListener() {\n            public void onClick(View v) {\n                endButtons();\n                sp.play(sp.load(getApplicationContext(), R.raw.leave_game_sounds, 1), 1, 1, 0, 0, 1);\n                mCircleGameThread.nextLevel();\n            }\n        });\n\n\n        tryAgain.setOnClickListener(new View.OnClickListener() {\n            public void onClick(View v) {\n                endButtons();\n                sp.play(sp.load(getApplicationContext(), R.raw.leave_game_sounds, 1), 1, 1, 0, 0, 1);\n                mCircleGameThread.tryAgain();\n        }\n        });\n\n        back.setOnClickListener(new View.OnClickListener() {\n            public void onClick(View v) {\n                insideButtons();\n                sp.play(sp.load(getApplicationContext(), R.raw.button_sounds, 1), 1, 1, 0, 0, 1);\n                mCircleGameThread.titleScreen();\n            }\n        });\n\n        nextPage.setOnClickListener(new View.OnClickListener() {\n            public void onClick(View v) {\n                sp.play(sp.load(getApplicationContext(), R.raw.button_sounds, 1), 1, 1, 0, 0, 1);\n                if (mCircleGameThread.getMode() == 3)\n                mCircleGameThread.changeCPage(true);\n                else mCircleGameThread.changeSPage(true);\n\n            }\n        });\n\n        prevPage.setOnClickListener(new View.OnClickListener() {\n            public void onClick(View v) {\n                sp.play(sp.load(getApplicationContext(), R.raw.button_sounds, 1), 1, 1, 0, 0, 1);\n                if (mCircleGameThread.getMode() == 3)\n                    mCircleGameThread.changeCPage(false);\n                else mCircleGameThread.changeSPage(false);            }\n        });\n\n\n\n        for (int i = 0; i < 10; i++)\n        {\n            final int o = i;\n            levels[i].setOnClickListener(new View.OnClickListener() {\n                public void onClick(View v) {\n                    for (int i = 0; i < 10; i++)\n                    {\n                        levels[i].setClickable(false);\n                    }\n                    sp.play(sp.load(getApplicationContext(), R.raw.level_select, 1), 1, 1, 0, 0, 1);\n                    mCircleGameThread.levelSelect(o);\n                }\n            });\n        }\n\n        if (savedInstanceState == null) {\n            // we were just launched: set up a new game\n            mCircleGameThread.titleScreen();\n            mCircleGameView.setFresh(true);\n            Log.w(this.getClass().getName(), "SIS is null");\n        } else {\n            // we are being restored: resume a previous game\n            Log.w(this.getClass().getName(), "SIS is nonnull");\n            mCircleGameView.setFresh(false);\n        }\n\n    }\n\n    private void titleButtons()\n    {\n        //Ensures that only certain buttons are clickable on the title screen\n        play.setClickable(false);\n        levelSelect.setClickable(false);\n        credits.setClickable(false);\n        highScores.setClickable(false);\n        back.setClickable(true);\n        nextPage.setClickable(true);\n        prevPage.setClickable(true);\n        back.setClickable(true);\n        returnMenu.setClickable(true);\n        nextLevel.setClickable(true);\n        for (int i = 0; i < 10; i++)\n        {\n            levels[i].setClickable(true);\n        }\n    }\n\n    private void insideButtons()\n    {\n        //Ensures that only certain buttons are clickable inside any of the submenus\n        back.setClickable(false);\n        nextPage.setClickable(false);\n        prevPage.setClickable(false);\n        play.setClickable(true);\n        levelSelect.setClickable(true);\n        credits.setClickable(true);\n        highScores.setClickable(true);\n    }\n\n    private void endButtons()\n    {\n        //Ensures that only certain buttons are clickable on the game end screen\n        tryAgain.setClickable(false);\n        nextLevel.setClickable(false);\n        returnMenu.setClickable(false);\n        play.setClickable(true);\n        levelSelect.setClickable(true);\n        credits.setClickable(true);\n        highScores.setClickable(true);\n    }\n\n    @Override\n    protected void onPause() {\n        super.onPause();\n    }\n\n    /**\n     * Notification that something is about to happen, to give the Activity a\n     * chance to save state.\n     *\n     * @param outState a Bundle into which this Activity should save its state\n     */\n    @Override\n    protected void onSaveInstanceState(Bundle outState) {\n        // just have the View\'s thread save its state into our Bundle\n        super.onSaveInstanceState(outState);\n        Log.w(this.getClass().getName(), "SIS called");\n    }\n\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},'package com.example.android.circlegame;\n\nimport android.annotation.SuppressLint;\nimport android.content.Context;\nimport android.content.res.Resources;\nimport android.graphics.Bitmap;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.graphics.Color;\nimport android.graphics.Canvas;\nimport android.graphics.Point;\nimport android.graphics.PorterDuff;\nimport android.media.AudioManager;\nimport android.media.SoundPool;\nimport android.os.Handler;\nimport android.os.Message;\nimport android.util.AttributeSet;\nimport android.view.Display;\nimport android.view.WindowManager;\nimport android.view.MotionEvent;\nimport android.view.SurfaceHolder;\nimport android.view.SurfaceView;\nimport android.view.View;\nimport android.view.ViewGroup.LayoutParams;\nimport android.widget.Button;\nimport android.widget.TextView;\nimport android.widget.RelativeLayout;\n\nimport java.util.ArrayList;\n\n@SuppressLint("HandlerLeak")\npublic class CircleGameView extends SurfaceView implements SurfaceHolder.Callback {\n    class CircleGameThread extends Thread {\n        private int xValue[] = new int[55];\n        private int yValue[] = new int[55];\n        private int chosen[];\n\n        private SoundPool sp;\n\n        private int position = 0;\n        private int levelSet = 0;\n        private int levelType = 0;\n        private int repeats;\n        private int sLevels;\n        private int gSize;\n        private int circles;\n\n        private double rate = 1;\n        private final long MILLI = 1000;\n\n        private final BitmapManager manager;\n        private final SoundManager sm;\n        private Bitmap background;\n\n        private final SurfaceHolder mSurfaceHolder;\n        private Handler mHandler;\n\n        private boolean running = true;\n        private boolean selected[] = new boolean[54];\n        private boolean isReady = true;\n        private boolean checkable = true;\n\n        public CircleGameThread(SurfaceHolder surfaceHolder, Context context,\n                                Handler handler) {\n\n            mSurfaceHolder = surfaceHolder;\n            mHandler = handler;\n            mContext = context;\n\n            sp = new SoundPool(5, AudioManager.STREAM_MUSIC, 0);\n            sm = new SoundManager();\n            //Gets the size of the display to properly scale\n            WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);\n            Display display = wm.getDefaultDisplay();\n            Point size = new Point();\n            display.getSize(size);\n\n            //Gets the width, height, and area of the display\n            CANVASWIDTH = size.x;\n            CANVASHEIGHT = size.y;\n            CANVASAREA = CANVASWIDTH * CANVASHEIGHT;\n            HEIGHTRATIO = CANVASHEIGHT / SOURCEHEIGHT;\n            WIDTHRATIO = CANVASWIDTH / SOURCEWIDTH;\n            AREARATIO = CANVASAREA / SOURCEAREA;\n            RADIUS = (int) Math.sqrt(4900 * AREARATIO);\n            DIAMETER = RADIUS * 2;\n\n            for (int i = 0; i &lt; 51; i ++)\n            {\n                //Sets the score of all levels to 0\n                gScore[i] = 0;\n            }\n\n            manager = new BitmapManager(mContext, CANVASWIDTH, CANVASHEIGHT);\n            background = manager.getTitleScreen();\n        }\n\n        protected void doDraw(Canvas canvas) {\n            //Renders the background\n            canvas.drawBitmap(background, 0, 0, null);\n\n            //Renders all the circles\n            for (int i = 0; i &lt; order.size(); i++)\n            {\n                BitmapDrawable circle = order.get(i);\n                circle.setBounds(xValue[i], yValue[i], xValue[i] + DIAMETER, yValue[i] + DIAMETER);\n                circle.draw(canvas);\n            }\n        }\n\n        protected void titleScreen() {\n            //Serves as a transition to the game by setting isReady to true, which prevents multiple intializations\n            background = manager.getTitleScreen();\n            isReady = true;\n            setState(INITIALIZING);\n        }\n\n        protected void beginGame() {\n            //Begins the game and initializes important variables\n            if (!isReady)\n                return;\n            setIsReady(false);\n            endGame();\n            setState(STARTING);\n            setFresh(false);\n            won = false;\n        }\n\n        protected void gameStart(int level) {\n            //This is where the game actually starts\n            background = manager.getBackground();\n            score = 100;\n            circles = 0;\n\n            for (int i = 0; i &lt; 18; i++) {\n                xValue[i] = 0;\n                yValue[i] = 0;\n                selected[i] = false;\n            }\n\n            //Initializes important variables by using the initializer class\n            Initializer init = new Initializer(HEIGHTRATIO, WIDTHRATIO);\n            init.setLevel(level);\n            xValue = init.getX();\n            yValue = init.getY();\n            int[] values = init.getValues();\n            levelType = values[0];\n            repeats = values[1];\n            sLevels = values[2];\n            rate = values[3];\n            mScore = values[4];\n            dScore = values[5];\n            circles = values[6];\n            order = getRandomOrder(values[7]);\n            setState(RUNNING);\n\n        }\n\n        private ArrayList&lt;BitmapDrawable&gt; getRandomOrder(int limit) {\n            //Conjures random circle from list of circles\n            final ArrayList&lt;BitmapDrawable&gt; determine = new ArrayList&lt;BitmapDrawable&gt;();\n            int i = 1;\n            boolean unequal;\n            BitmapDrawable test;\n            final Resources res = mContext.getResources();\n\n            test = new BitmapDrawable(res, manager.getCircle());\n\n            for (int p = 0; p &lt; limit; p++)\n                determine.add(test);\n\n            while (i &lt; limit) {\n                unequal = true;\n                test = new BitmapDrawable(res, manager.getCircle());\n\n                for (BitmapDrawable circle : determine)\n                {\n                    if (test.getBitmap().sameAs(circle.getBitmap()))\n                    {\n                        unequal = false;\n                    }\n                }\n\n                 determine.set(i, test);\n                 if (unequal)\n                 i++;\n\n                            }\n            return determine;\n        }\n\n\n        @SuppressWarnings("unchecked")\n        protected void gameRun() {\n            //Starts the game by randomly selecting circles\n            int base = 1000;\n            setState(BUSY);\n            selectOrder = (ArrayList&lt;BitmapDrawable&gt;) order.clone();\n            gameOrder = new ArrayList&lt;BitmapDrawable&gt;();\n            chosen = new int[order.size()];\n\n            for (int i = 0; i &lt; order.size(); i ++)\n            {\n                chosen[i] = 0;\n            }\n\n            checkable = true;\n            mHandler.postDelayed(new Runnable() {\n                public void run() {\n                    circleRun();\n                }\n            }, base);\n\n        }\n\n        private void circleRun() {\n            //Chooses a certain amount of circles based on the level\n            final int size = circles + repeats;\n            gSize = size;\n            long base = 500;\n            int count = 1;\n            for (int i = size; i &gt; 0; i--) {\n                final int p = count;\n                mHandler.postDelayed(new Runnable() {\n                    public void run() {\n                        chooseCircle();\n                        if (p == size) {\n                            mHandler.postDelayed(new Runnable() {\n                                public void run() {\n                                    setState(INTERIM);\n                                }\n                            }, MILLI);\n                            mHandler.postDelayed(new Runnable() {\n                                public void run() {\n                                    setState(WAITING);\n                                    position = 0;\n                                }\n                            },(int) (MILLI * 1.5));\n                        }\n                    }\n                }, base);\n                base += (long) ((MILLI / rate));\n                count++;\n            }\n        }\n\n        private void chooseCircle() {\n            //Randomly selects a circle\n            BitmapDrawable circle = selectOrder.get((int) (Math.random() * selectOrder.size()));\n            sp.play(sp.load(mContext, sm.findSound(circle), 1), 1, 1, 0, 0, 1);\n            doSelected(circle);\n            gameOrder.add(circle);\n            int i = findCircle(circle);\n            //Ensures that the same circle is not selected more times than its allocated repeats\n            if (chosen[i] &lt;= (levelType + 1) && repeats &gt; 0)\n            {\n                if (chosen[i] &gt; 0)\n                {\n                repeats --;\n                }\n                chosen[i] ++;\n            }\n            if (chosen[i] == (levelType + 1) || repeats == 0)\n            {\n            selectOrder.remove(circle);\n            }\n        }\n\n        private void doSelected(final BitmapDrawable circle) {\n            //Highlights the circle for half a second\n            changeCircle(circle, false);\n            mHandler.postDelayed(new Runnable() {\n                public void run() {\n                    changeCircle(circle, false);\n                }\n            }, 500);\n\n        }\n\n        private void changeCircle(BitmapDrawable circle, boolean isCorrect) {\n            //This is the method that actually changes the color of the circle\n            for (int i = 0; i &lt; order.size(); i++)\n            {\n                if (circle.equals(order.get(i)))\n                {\n                    if (selected[i])\n                    {\n                        circle.clearColorFilter();\n                        selected[i] = false;\n                    }\n                    else\n                    {\n                        //Changes color based on whether the circle is correct, or whether the player has selected it\n                        if (mMode == BUSY)\n                        {\n                            circle.setColorFilter(0xAA00FFFF, PorterDuff.Mode.SRC_ATOP);\n                        }\n                        else if (isCorrect)\n                        {\n                            circle.setColorFilter(0xAA00FF00, PorterDuff.Mode.SRC_ATOP);\n                        }\n                        else\n                        {\n                            circle.setColorFilter(0xAAFF0000, PorterDuff.Mode.SRC_ATOP);\n                        }\n\n                        selected[i] = true;\n                    }\n                }\n            }\n        }\n\n        public int findCircle(BitmapDrawable circle)\n        {\n            //Checks if the selected circle is chosen correctly\n            for (int i = 0; i &lt; order.size(); i ++)\n                if (circle.getBitmap().sameAs(order.get(i).getBitmap()))\n                    return i;\n            return -500;\n        }\n\n        public void isInCircle(MotionEvent event) {\n            int xCoordinate = (int) event.getX();\n            int yCoordinate = (int) event.getY();\n            int xCenter;\n            int yCenter;\n            double distance;\n\n            if (mMode != WAITING)\n                return;\n\n            //Using the distance formula, this detects whether the clicked point is inside the circle\n            for (int i = 0; i &lt; order.size(); i++) {\n                xCenter = xValue[i] + RADIUS;\n                yCenter = yValue[i] + RADIUS;\n                distance = Math.sqrt(Math.pow(xCoordinate - xCenter, 2) + Math.pow(yCoordinate - yCenter, 2));\n\n                    if (distance &lt; RADIUS)\n                    {\n                        checkCircle(order.get(i));\n                        break;\n                    }\n                 }\n            }\n\n        public void checkCircle(final BitmapDrawable circle) {\n            if (!checkable)\n                return;\n            if (circle.equals(gameOrder.get(position)))\n            {\n                /* If the circle is the correct one, the game checks for the next circle, and it highlights the circle\n                and plays the correct sound\n                 */\n                position++;\n                sp.play(sp.load(mContext, sm.findSound(circle), 1), 1, 1, 0, 0, 1);\n                changeCircle(circle, true);\n                mHandler.postDelayed(new Runnable() {\n                    public void run() {\n                        changeCircle(circle, true);\n                    }\n                }, 200);\n                if (position == gSize)\n                {\n                    checkable = false;\n                    mHandler.postDelayed(new Runnable() {\n                        public void run() {\n                            if (sLevels &gt; 0)\n                            {\n                                gameRun();\n                                sLevels --;\n                            }\n                            else\n                            {\n                            sp.play(sp.load(mContext, R.raw.victory_sound, 1), 1, 1, 0, 0, 1);\n                            if (levelSet + 1 == maxLevel)\n                            maxLevel++;\n                            won = true;\n                            if (gScore[levelSet] &lt; score)\n                                gScore[levelSet] = score;\n                            setState(FINISHED);\n                            }\n                        }\n                    }, (int) (MILLI*0.25));\n                }\n            }\n\n            else\n            {\n                //If the circle selected is the wrong one, an incorrect sound will play\n                sp.play(sp.load(mContext, R.raw.wrong_sound, 1), 1, 1, 0, 0, 1);\n                changeCircle(circle, false);\n                mHandler.postDelayed(new Runnable() {\n                    public void run() {\n                        changeCircle(circle, false);\n                    }\n                }, 200);\n                setScore(mScore);\n            }\n\n        }\n\n        public void setScore(int i)\n        {\n            //This decreases the score every interval\n            if (!checkable)\n                return;\n\n                score -= i;\n\n            if (score &lt;= 0)\n            {\n                //If the score reaches or is below zero, the game ends. This also prevents negative scores\n                checkable = false;\n                setState(FINISHED);\n                sp.play(sp.load(mContext, R.raw.defeat_sound, 1), 1, 1, 0, 0, 1);\n                score = 0;\n                won = false;\n            }\n            else\n            {\n                setState(WAITING);\n            }\n\n        }\n\n        public void nextLevel() {\n            //Increases the level, as well as playing a basic sound\n            sp.play(sp.load(mContext, R.raw.leave_game_sounds, 1), 1, 1, 0, 0, 1);\n            endGame();\n            levelSet++;\n            setIsReady(true);\n            beginGame();\n        }\n\n        public void tryAgain()\n        {\n            //Activates methods necessary for reinitialization\n            setIsReady(true);\n            beginGame();\n        }\n\n        public void returnMenu()\n        {\n            //Returns to the menu by clearing the game and then setting the mode to initializing\n            if (won)\n                levelSet++;\n            setState(CLEAR);\n            endGame();\n            background = manager.getTitleScreen();\n            mHandler.postDelayed(new Runnable() {\n                public void run() {\n                    setState(INITIALIZING);\n                }\n            }, (int) (MILLI * 0.25));\n        }\n\n        public void levelSelect(int i)\n        {\n            //When a level is clicked on the levelselect screen, this method sets the game to the level\n            levelSet = i + cPage;\n            beginGame();\n        }\n\n        public void credits() {\n            //Simply goes to the credits\n            if (!isReady)\n                return;\n            setIsReady(false);\n            setState(CREDITS);\n        }\n\n        protected void highScores() {\n            //Goes to the highscore screen\n            if (!isReady)\n                return;\n            setIsReady(false);\n            setState(HIGHSCORES);\n        }\n\n        public void endGame()\n        {\n            //This resets the order to ensure that the old game instance is completely cleared\n            order = new ArrayList&lt;BitmapDrawable&gt;();\n            gameOrder = new ArrayList&lt;BitmapDrawable&gt;();\n        }\n\n        public void changeCPage(boolean way)\n        {\n            //If the levelselect page is increased, each level button increases or decreases by 10\n            if (way)\n                cPage+=10;\n            else\n                cPage -=10;\n            setState(CHOOSING);\n        }\n\n        public void changeSPage(boolean way)\n        {\n            //Same as the levelselect method except it modifies scores\n            if (way)\n                sPage+=10;\n            else\n                sPage -=10;\n            setState(HIGHSCORES);\n        }\n\n        public void chooseLevel()\n        {\n            //Checks if the game is ready to reinitialize, and goes to the chooselevel screen if it is.\n            if (!isReady)\n                return;\n            setIsReady(false);\n            setState(CHOOSING);\n        }\n\n        public void play()\n        {\n            //Sets level to the max level (maxLevel - 1 as maxLevel starts at 0) and begins the game\n            levelSet = maxLevel - 1;\n            beginGame();\n        }\n\n        public int getMode()\n        {\n            return mMode;\n        }\n\n        public void setState(int mode) {\n            synchronized (mSurfaceHolder) {\n                mMode = mode;\n                Message msg = mHandler.obtainMessage();\n                mHandler.sendMessage(msg);\n            }\n        }\n\n        public void setIsReady(boolean ready)\n        {\n            isReady = ready;\n        }\n\n        public void setRunning(boolean b) {\n            running = b;\n        }\n\n        //This method, which runs every interval, is the method that drives the game. It does this based on the game state.\n        @Override\n        public void run() {\n            while (running) {\n                Canvas c = null;\n                try {\n                    c = mSurfaceHolder.lockCanvas(null);\n                    doDraw(c);\n                    synchronized (mSurfaceHolder) {\n                        switch (mMode) {\n                            case INITIALIZING:\n                                titleScreen();\n                                break;\n                            case STARTING:\n                                gameStart(levelSet);\n                                break;\n                            case RUNNING:\n                                gameRun();\n                                break;\n                            case WAITING:\n                                sCount ++;\n                                if (sCount == 20)\n                                {\n                                    setScore(dScore);\n                                    sCount = 0;\n                                }\n                                break;\n                        }\n                    }\n                } finally {\n                    // do this in a finally so that if an exception is thrown\n                    // during the above, we don\'t leave the Surface in an\n                    // inconsistent state\n                    if (c != null) {\n                        mSurfaceHolder.unlockCanvasAndPost(c);\n                    }\n                }\n            }\n\n\n        }\n\n        public void setSurfaceSize(int width, int height) {\n            // synchronized to make sure these all change automically\n            synchronized (mSurfaceHolder) {\n                background = Bitmap.createScaledBitmap(background, width, height, true);\n            }\n        }\n    }\n\n\n    private CircleGameThread thread;\n    private TextView gameOver;\n    private TextView gameBegins;\n    private TextView vScore;\n    private TextView chooseLevel;\n    private TextView highScoreList;\n    private TextView creditTitle;\n    private TextView creditList;\n    private TextView title;\n\n    private Context mContext;\n    private Button returnMenu;\n    private Button nextLevel;\n    private Button play;\n    private Button levelSelect;\n    private Button credits;\n    private Button highScores;\n    private Button tryAgain;\n    private Button back;\n    private Button nextPage;\n    private Button prevPage;\n\n    private Button[] levels;\n    private TextView[] scores;\n\n    private boolean fresh = false;\n    private int mMode;\n    private int score = 0;\n    private int sCount = 0;\n    private int mScore = 0;\n    private int maxLevel = 12;\n    private int cPage = 0;\n    private int sPage = 0;\n    private int dScore = 0;\n    private int[] gScore = new int[51];\n    private boolean won = false;\n\n    private ArrayList&lt;BitmapDrawable&gt; order = new ArrayList&lt;BitmapDrawable&gt;();\n    private ArrayList&lt;BitmapDrawable&gt; gameOrder = new ArrayList&lt;BitmapDrawable&gt;();\n    private ArrayList&lt;BitmapDrawable&gt; selectOrder = new ArrayList&lt;BitmapDrawable&gt;();\n\n    public static final int INITIALIZING = 0;\n    public static final int STARTING = 1;\n    public static final int CLEAR = 2;\n    public static final int CHOOSING = 3;\n    public static final int HIGHSCORES = 4;\n    public static final int CREDITS = 5;\n    public static final int RUNNING = 6;\n    public static final int BUSY = 7;\n    public static final int INTERIM = 8;\n    public static final int WAITING = 9;\n    public static final int PAUSED = 10;\n    public static final int FINISHED = 11;\n\n    private final double SOURCEHEIGHT = 1135;\n    private final double SOURCEWIDTH = 720;\n    private final double SOURCEAREA = SOURCEHEIGHT * SOURCEWIDTH;\n    private double CANVASHEIGHT;\n    private double CANVASWIDTH;\n    private double CANVASAREA;\n    private double HEIGHTRATIO;\n    private double WIDTHRATIO;\n    private double AREARATIO;\n    private int DIAMETER;\n    private int RADIUS;\n\n    public CircleGameThread getThread() {\n        return thread;\n    }\n\n    @Override\n    public void surfaceChanged(SurfaceHolder holder, int format, int width,\n                               int height) {\n        thread.setSurfaceSize(width, height);\n    }\n\n    public void surfaceCreated(SurfaceHolder holder) {\n        // start the thread here so that we don\'t busy-wait in run()\n        // waiting for the surface to be created\n        thread.setRunning(true);\n        thread.start();\n    }\n\n    @Override\n    public void surfaceDestroyed(SurfaceHolder holder) {\n        // we have to tell thread to shut down & wait for it to finish, or else\n        // it might touch the Surface after we return and explode\n        boolean retry = true;\n        thread.setRunning(false);\n        while (retry) {\n            try {\n                thread.join();\n                retry = false;\n            } catch (InterruptedException e) {\n                return;\n            }\n        }\n    }\n\n    public void setGameOver(TextView view) {\n        gameOver = view;\n    }\n\n    public void setGameBegins(TextView view) {\n        gameBegins = view;\n    }\n\n    public void setScoreView(TextView view)\n    {\n       vScore = view;\n    }\n\n    public void setChooseLevel(TextView view)\n    {\n        chooseLevel = view;\n    }\n\n    public void setHighScoreList(TextView view)\n    {\n        highScoreList = view;\n    }\n\n    public void setCreditTitle(TextView view)\n    {\n        creditTitle = view;\n    }\n\n    public void setCreditList(TextView view)\n    {\n        creditList = view;\n    }\n\n    public void setTitle(TextView view)\n    {\n        title = view;\n    }\n\n    public void setReturnMenu(Button button) {\n        returnMenu = button;\n    }\n\n    public void setNextLevel(Button button) {\n        nextLevel = button;\n    }\n\n    public void setTryAgain(Button button)\n    {\n        tryAgain = button;\n    }\n\n    public void setPlay(Button button) {\n        play = button;\n    }\n\n    public void setLevelSelect(Button button) {\n        levelSelect = button;\n    }\n\n    public void setCredits(Button button) {\n        credits = button;\n    }\n\n    public void setHighScores(Button button) {\n        highScores = button;\n    }\n\n    public void setBack(Button button) {\n        back = button;\n    }\n\n    public void setNextPage(Button button) {\n        nextPage = button;\n    }\n\n    public void setPrevPage(Button button) {\n        prevPage = button;\n    }\n\n    public void setLevels(Button[] buttons)\n    {\n        levels = buttons;\n    }\n\n    public void setScores(TextView[] textviews)\n    {\n        scores = textviews;\n    }\n\n    public void setFresh(boolean isFresh) {\n        fresh = isFresh;\n    }\n\n    public CircleGameView(Context context) {\n        super(context);\n    }\n\n    public CircleGameView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n\n\n        // register our interest in hearing about changes to our surface\n        SurfaceHolder holder = getHolder();\n        holder.addCallback(this);\n\n        // create thread only; it\'s started in surfaceCreated()\n        thread = new CircleGameThread(holder, context, new Handler() {\n            @Override\n            public void handleMessage(Message m) {\n                //Makes all the buttons invisible until they are needed\n                returnMenu.setVisibility(View.GONE);\n                gameOver.setVisibility(View.GONE);\n                tryAgain.setVisibility(View.GONE);\n                vScore.setVisibility(View.GONE);\n                play.setVisibility(View.GONE);\n                highScores.setVisibility(View.GONE);\n                levelSelect.setVisibility(View.GONE);\n                credits.setVisibility(View.GONE);\n                nextLevel.setVisibility(View.GONE);\n                returnMenu.setVisibility(View.GONE);\n                gameOver.setVisibility(View.GONE);\n                tryAgain.setVisibility(View.GONE);\n                vScore.setVisibility(View.GONE);\n                chooseLevel.setVisibility(View.GONE);\n                back.setVisibility(View.GONE);\n                nextPage.setVisibility(View.GONE);\n                prevPage.setVisibility(View.GONE);\n                gameBegins.setVisibility(View.GONE);\n                highScoreList.setVisibility(View.GONE);\n                creditTitle.setVisibility(View.GONE);\n                creditList.setVisibility(View.GONE);\n                title.setVisibility(View.GONE);\n\n                for (int i = 0; i &lt; 10; i ++)\n                {\n                    levels[i].setVisibility(View.GONE);\n                    scores[i].setVisibility(View.GONE);\n                }\n\n                //Creates the object in charge of positioning the buttons on the screen\n                RelativeLayout.LayoutParams params[] = new RelativeLayout.LayoutParams[10];\n                for (int i = 0; i &lt; 10; i ++)\n                    params[i] = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);\n\n                int wBase = 164;\n                int hBase = 250;\n\n                //Sets up the three rows of buttons in the level select page\n                for (int i = 0; i &lt; 3; i ++)\n                    params[i].topMargin = (int) (hBase * HEIGHTRATIO + 0.5);\n                for (int i = 3; i &lt; 6; i ++)\n                    params[i].topMargin = (int) ((hBase+150) * HEIGHTRATIO + 0.5);\n                for (int i = 6; i &lt; 9; i ++)\n                    params[i].topMargin = (int) ((hBase+300) * HEIGHTRATIO + 0.5);\n\n                for (int i = 0; i &lt; 9; i += 3)\n                {\n                    params[i].addRule(RelativeLayout.ALIGN_PARENT_LEFT);\n                    params[i].leftMargin = (int) (wBase * WIDTHRATIO + 0.5);\n                    params[i].rightMargin = (int) (wBase * WIDTHRATIO + 0.5);\n                }\n                for (int i = 1; i &lt; 9; i += 3)\n                    params[i].addRule(RelativeLayout.CENTER_HORIZONTAL);\n                for (int i = 2; i &lt; 9; i += 3)\n                {\n                    params[i].addRule(RelativeLayout.ALIGN_PARENT_RIGHT);\n                    params[i].rightMargin = (int) (wBase * WIDTHRATIO + 0.5);\n                }\n\n                params[9].topMargin = (int) ((hBase+450) * HEIGHTRATIO + 0.5);\n                params[9].addRule(RelativeLayout.CENTER_HORIZONTAL);\n\n                //Sets each button for the levels to the position given by the index of the param array\n                for (int i = 0; i &lt; 10; i ++)\n                    levels[i].setLayoutParams(params[i]);\n\n                //Creates a new relativelayout params for title buttons\n                RelativeLayout.LayoutParams params2[] = new RelativeLayout.LayoutParams[4];\n                for (int i = 0; i &lt; 4; i ++)\n                {\n                    params2[i] = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);\n                    params2[i].addRule(RelativeLayout.CENTER_HORIZONTAL);\n                }\n\n                double hBase2 = 42.610864;\n                params2[0].topMargin = (int) ((hBase2 + 200) * HEIGHTRATIO + 0.5);\n                params2[1].topMargin = (int) ((hBase2 + 400) * HEIGHTRATIO + 0.5);\n                params2[2].topMargin = (int) ((hBase2 + 600) * HEIGHTRATIO + 0.5);\n                params2[3].topMargin = (int) ((hBase2 + 800) * HEIGHTRATIO + 0.5);\n\n                //Sets the positioning of the title buttons\n                play.setLayoutParams(params2[0]);\n                levelSelect.setLayoutParams(params2[1]);\n                highScores.setLayoutParams(params2[2]);\n                credits.setLayoutParams(params2[3]);\n\n                //Creates a new layoutparams for the score texts\n                RelativeLayout.LayoutParams params3[] = new RelativeLayout.LayoutParams[10];\n                for (int i = 0; i &lt; 10; i ++)\n                {\n                    params3[i] = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);\n                    params3[i].addRule(RelativeLayout.CENTER_HORIZONTAL);\n                }\n\n                int hBase3 = 200;\n\n                for (int i = 0; i &lt; 10; i ++)\n                {\n                    params3[i].topMargin = (int) ((hBase3 * HEIGHTRATIO + 0.5));\n                    hBase3 += 70;\n                }\n\n                for (int i = 0; i &lt; 10; i ++)\n                    scores[i].setLayoutParams(params3[i]);\n\n                //Sets button visibility based on current status of the game, as well as text colors\n                switch (mMode) {\n                    case INITIALIZING:\n                       play.setVisibility(View.VISIBLE);\n                       levelSelect.setVisibility(View.VISIBLE);\n                       highScores.setVisibility(View.VISIBLE);\n                       credits.setVisibility(View.VISIBLE);\n                       title.setVisibility(View.VISIBLE);\n                       break;\n                    case STARTING:\n                        tryAgain.setClickable(true);\n                        returnMenu.setClickable(true);\n                        nextLevel.setClickable(true);\n                        break;\n                    case CHOOSING:\n                    for (int i = 0; i &lt; 10; i ++)\n                        {\n                            levels[i].setVisibility(View.VISIBLE);\n                            if ((i + cPage + 1) &lt; 10)\n                                levels[i].setText(Integer.toString(0)+Integer.toString(i+1));\n                            else\n                            levels[i].setText(Integer.toString(i + cPage + 1));\n                            if (i + cPage &lt; maxLevel)\n                            {\n                                levels[i].setTextColor(0xFF0000FF);\n                                levels[i].setClickable(true);\n                            }\n                            else\n                            {\n                                levels[i].setTextColor(Color.GRAY);\n                                levels[i].setClickable(false);\n                            }\n                        }\n\n                        if (cPage == 0)\n                        {\n                            prevPage.setClickable(false);\n                            prevPage.setTextColor(Color.GRAY);\n                        }\n                        else\n                        {\n                            prevPage.setClickable(true);\n                            prevPage.setTextColor(0xFFFFFFFF);\n                        }\n                        if (cPage == 40)\n                        {\n                            nextPage.setClickable(false);\n                            nextPage.setTextColor(Color.GRAY);\n                        }\n                        else\n                        {\n                            nextPage.setClickable(true);\n                            nextPage.setTextColor(0xFFFFFFFF);\n                        }\n                        back.setVisibility(View.VISIBLE);\n                        prevPage.setVisibility(View.VISIBLE);\n                        nextPage.setVisibility(View.VISIBLE);\n                        chooseLevel.setVisibility(View.VISIBLE);\n                        break;\n                    case HIGHSCORES:\n                        for (int i = 0; i &lt; 10; i ++)\n                        {\n                            scores[i].setVisibility(View.VISIBLE);\n                            scores[i].setText("Level " + Integer.toString(i + sPage + 1) + ": " + Integer.toString(gScore[i+sPage]));\n                        }\n\n                        if (sPage == 0)\n                        {\n                            prevPage.setClickable(false);\n                            prevPage.setTextColor(Color.GRAY);\n                        }\n                        else\n                        {\n                            prevPage.setClickable(true);\n                            prevPage.setTextColor(0xFFFFFFFF);\n                        }\n\n                        if (sPage == 40)\n                        {\n                            nextPage.setClickable(false);\n                            nextPage.setTextColor(Color.GRAY);\n                        }\n                        else\n                        {\n                            nextPage.setClickable(true);\n                            nextPage.setTextColor(0xFFFFFFFF);\n                        }\n\n                        back.setVisibility(View.VISIBLE);\n                        prevPage.setVisibility(View.VISIBLE);\n                        nextPage.setVisibility(View.VISIBLE);\n                        highScoreList.setVisibility(View.VISIBLE);\n                        break;\n                    case CREDITS:\n                        creditTitle.setVisibility(View.VISIBLE);\n                        creditList.setVisibility(View.VISIBLE);\n                        back.setVisibility(View.VISIBLE);\n                        break;\n                    case BUSY:\n                        gameBegins.setTextColor(0xFFFF0077);\n                        gameBegins.setText("READY!");\n                        gameBegins.setVisibility(View.VISIBLE);\n                        vScore.setVisibility(View.VISIBLE);\n                        vScore.setText(Integer.toString(score));\n                        break;\n                    case INTERIM:\n                        gameBegins.setTextColor(0xAAFF00C3);\n                        gameBegins.setText("GO!");\n                        gameBegins.setVisibility(View.VISIBLE);\n                        vScore.setVisibility(View.VISIBLE);\n                        break;\n                    case WAITING:\n                        vScore.setVisibility(View.VISIBLE);\n                        vScore.setText(Integer.toString(score));\n                        break;\n                    case FINISHED:\n                        if (won)\n                        {\n                            gameOver.setText("You Won");\n                            gameOver.setTextColor(0xFF00FF00);\n                            nextLevel.setVisibility(View.VISIBLE);\n                        }\n                        else\n                        {\n                            gameOver.setText("You Lost");\n                            gameOver.setTextColor(0xFFFF0000);\n                        }\n                        vScore.setText(Integer.toString(score));\n                        vScore.setVisibility(View.VISIBLE);\n                        gameOver.setVisibility(View.VISIBLE);\n                        returnMenu.setVisibility(View.VISIBLE);\n                        tryAgain.setVisibility(View.VISIBLE);\n                        score = 0;\n                        break;\n                }\n\n            }\n\n\n        });\n        setFocusable(true);\n    }\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},">package com.example.android.circlegame;\n\npublic class Initializer {\n    private int[] xValue;\n    private int[] yValue;\n    private int levelType;\n    private int repeats;\n    private int rate;\n    private int sLevels;\n    private int mScore;\n    private int dScore;\n    private int circles;\n    private int order;\n    LevelSelect selector;\n\n    public Initializer(double hRatio, double wRatio)\n    {\n        selector = new LevelSelect(hRatio, wRatio);\n    }\n\n    public void setLevel(int level)\n    {\n        //Determines which level will play\n        circles = 0;\n        switch (level) {\n            case 0:\n                level1();\n                break;\n            case 1:\n                level2();\n                break;\n            case 2:\n                level3();\n                break;\n            case 3:\n                level4();\n                break;\n            case 4:\n                level5();\n                break;\n            case 5:\n                level6();\n                break;\n            case 6:\n                level7();\n                break;\n            case 7:\n                level8();\n                break;\n            case 8:\n                level9();\n                break;\n            case 9:\n                level10();\n                break;\n            case 10:\n                level11();\n                break;\n            case 11:\n                level12();\n                break;\n        }\n    }\n\n    private void level1() {\n        selector.levelOne();\n        xValue = selector.getX();\n        yValue = selector.getY();\n        levelType = 0;\n        repeats = 0;\n        sLevels = 0;\n        rate = 1;\n        mScore = 10;\n        dScore = 1;\n        circles = 5;\n        order = 5;\n    }\n\n    private void level2() {\n        selector.levelTwo();\n        xValue = selector.getX();\n        yValue = selector.getY();\n        levelType = 1;\n        repeats = 4;\n        sLevels = 0;\n        rate = 2;\n        mScore = 10;\n        dScore = 1;\n        circles = 4;\n        order = 4;\n    }\n\n    private void level3() {\n        selector.levelThree();\n        xValue = selector.getX();\n        yValue = selector.getY();\n        levelType = 1;\n        repeats = 2;\n        sLevels = 0;\n        rate = 1;\n        mScore = 10;\n        dScore = 1;\n        circles = 6;\n        order = 8;\n    }\n\n    private void level4() {\n        selector.levelFour();\n        xValue = selector.getX();\n        yValue = selector.getY();\n        levelType = 1;\n        repeats = 3;\n        sLevels = 0;\n        rate = 2;\n        mScore = 20;\n        dScore = 2;\n        circles = 4;\n        order = 6;\n    }\n\n    private void level5() {\n        selector.levelFive();\n        xValue = selector.getX();\n        yValue = selector.getY();\n        levelType = 2;\n        repeats = 4;\n        sLevels = 5;\n        rate = 2;\n        mScore = 20;\n        dScore = 1;\n        circles = 3;\n        order = 3;\n    }\n\n    private void level6() {\n        selector.levelSix();\n        xValue = selector.getX();\n        yValue = selector.getY();\n        levelType = 1;\n        repeats = 4;\n        sLevels = 1;\n        rate = 2;\n        mScore = 8;\n        dScore = 2;\n        circles = 4;\n        order = 6;\n    }\n\n    private void level7() {\n        selector.levelSeven();\n        xValue = selector.getX();\n        yValue = selector.getY();\n        levelType = 1;\n        repeats = 2;\n        sLevels = 1;\n        rate = 2;\n        mScore = 10;\n        dScore = 2;\n        circles = 6;\n        order = 7;\n    }\n\n    private void level8() {\n        selector.levelEight();\n        xValue = selector.getX();\n        yValue = selector.getY();\n        levelType = 2;\n        repeats = 3;\n        sLevels = 2;\n        rate = 2;\n        mScore = 15;\n        dScore = 2;\n        circles = 6;\n        order = 9;\n    }\n\n    private void level9() {\n        selector.levelNine();\n        xValue = selector.getX();\n        yValue = selector.getY();\n        levelType = 1;\n        repeats = 4;\n        sLevels = 2;\n        rate = 2;\n        mScore = 10;\n        dScore = 1;\n        circles = 4;\n        order = 12;\n    }\n\n    private void level10() {\n        selector.levelTen();\n        xValue = selector.getX();\n        yValue = selector.getY();\n        levelType = 1;\n        repeats = 4;\n        sLevels = 2;\n        rate = 2;\n        mScore = 20;\n        dScore = 1;\n        circles = 4;\n        order = 11;\n    }\n\n    private void level11() {\n        selector.levelEleven();\n        xValue = selector.getX();\n        yValue = selector.getY();\n        levelType = 1;\n        repeats = 4;\n        sLevels = 1;\n        rate = 2;\n        mScore = 20;\n        dScore = 1;\n        circles = 9;\n        order = 9;\n    }\n\n    private void level12() {\n        selector.levelTwelve();\n        xValue = selector.getX();\n        yValue = selector.getY();\n        levelType = 1;\n        repeats = 6;\n        sLevels = 1;\n        rate = 2;\n        mScore = 20;\n        dScore = 1;\n        circles = 5;\n        order = 9;\n    }\n\n    public int[] getValues()\n    {\n        //Sends all the set values to the game itself\n        int[] values = new int[10];\n        values[0] = levelType;\n        values[1] = repeats;\n        values[2] = sLevels;\n        values[3] = rate;\n        values[4] = mScore;\n        values[5] = dScore;\n        values[6] = circles;\n        values[7] = order;\n        return values;\n    }\n\n    public int[] getX()\n    {\n        return xValue;\n    }\n\n    public int[] getY()\n    {\n        return yValue;\n    }\n}")}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},"package com.example.android.circlegame;\n\npublic class LevelSelect\n{\n    private int xValue[] = new int[55];\n    private int yValue[] = new int[55];\n    private int xGrid[] = new int[100];\n    private int yGrid[] = new int[100];\n\n    public LevelSelect (double hRatio, double wRatio)\n    {\n        //Grid is created for consistent placing of circles (ensures that no circle is too distant or too close)\n            for (int i = 0; i < 100; i ++)\n            {\n                xGrid[i] = (int) (i * 10 * wRatio);\n                yGrid[i] = (int) (i * 10 * hRatio);\n            }\n    }\n\n    public void levelOne()\n    {\n        xValue[0] = xGrid[30];\n        yValue[0] = yGrid[40];\n\n        xValue[1] = xGrid[30];\n        yValue[1] = yGrid[60];\n\n        xValue[2] = xGrid[10];\n        yValue[2] = yGrid[40];\n\n        xValue[3] = xGrid[50];\n        yValue[3] = yGrid[40];\n\n        xValue[4] = xGrid[30];\n        yValue[4] = yGrid[20];\n    }\n\n    public void levelTwo()\n    {\n        xValue[0] = xGrid[20];\n        yValue[0] = yGrid[30];\n\n        xValue[1] = xGrid[20];\n        yValue[1] = yGrid[50];\n\n        xValue[2] = xGrid[40];\n        yValue[2] = yGrid[30];\n\n        xValue[3] = xGrid[40];\n        yValue[3] = yGrid[50];\n    }\n\n    public void levelThree()\n    {\n        xValue[0] = xGrid[10];\n        yValue[0] = yGrid[30];\n\n        xValue[1] = xGrid[10];\n        yValue[1] = yGrid[45];\n\n        xValue[2] = xGrid[25];\n        yValue[2] = yGrid[30];\n\n        xValue[3] = xGrid[25];\n        yValue[3] = yGrid[45];\n\n        xValue[4] = xGrid[40];\n        yValue[4] = yGrid[30];\n\n        xValue[5] = xGrid[40];\n        yValue[5] = yGrid[45];\n\n        xValue[6] = xGrid[55];\n        yValue[6] = yGrid[30];\n\n        xValue[7] = xGrid[55];\n        yValue[7] = yGrid[45];\n    }\n\n    public void levelFour()\n    {\n        xValue[0] = xGrid[20];\n        yValue[0] = yGrid[20];\n\n        xValue[1] = xGrid[40];\n        yValue[1] = yGrid[20];\n\n        xValue[2] = xGrid[20];\n        yValue[2] = yGrid[35];\n\n        xValue[3] = xGrid[40];\n        yValue[3] = yGrid[35];\n\n        xValue[4] = xGrid[20];\n        yValue[4] = yGrid[50];\n\n        xValue[5] = xGrid[40];\n        yValue[5] = yGrid[50];\n    }\n\n    public void levelFive()\n    {\n        xValue[0] = xGrid[30];\n        yValue[0] = yGrid[35];\n\n        xValue[1] = xGrid[40];\n        yValue[1] = yGrid[55];\n\n        xValue[2] = xGrid[20];\n        yValue[2] = yGrid[55];\n    }\n\n    public void levelSix()\n    {\n        xValue[0] = xGrid[10];\n        yValue[0] = yGrid[30];\n\n        xValue[1] = xGrid[30];\n        yValue[1] = yGrid[10];\n\n        xValue[2] = xGrid[50];\n        yValue[2] = yGrid[30];\n\n        xValue[3] = xGrid[10];\n        yValue[3] = yGrid[50];\n\n        xValue[4] = xGrid[50];\n        yValue[4] = yGrid[50];\n\n        xValue[5] = xGrid[30];\n        yValue[5] = yGrid[70];\n    }\n\n    public void levelSeven()\n    {\n        xValue[0] = xGrid[30];\n        yValue[0] = yGrid[45];\n\n        xValue[1] = xGrid[15];\n        yValue[1] = yGrid[60];\n\n        xValue[2] = xGrid[45];\n        yValue[2] = yGrid[60];\n\n        xValue[3] = xGrid[45];\n        yValue[3] = yGrid[30];\n\n        xValue[4] = xGrid[15];\n        yValue[4] = yGrid[30];\n\n        xValue[5] = xGrid[30];\n        yValue[5] = yGrid[30];\n\n        xValue[6] = xGrid[30];\n        yValue[6] = yGrid[60];\n    }\n\n    public void levelEight()\n    {\n        xValue[0] = xGrid[30];\n        yValue[0] = yGrid[30];\n\n        xValue[1] = xGrid[30];\n        yValue[1] = yGrid[50];\n\n        xValue[2] = xGrid[40];\n        yValue[2] = yGrid[40];\n\n        xValue[3] = xGrid[50];\n        yValue[3] = yGrid[50];\n\n        xValue[4] = xGrid[40];\n        yValue[4] = yGrid[60];\n\n        xValue[5] = xGrid[30];\n        yValue[5] = yGrid[70];\n\n        xValue[6] = xGrid[20];\n        yValue[6] = yGrid[60];\n\n        xValue[7] = xGrid[10];\n        yValue[7] = yGrid[50];\n\n        xValue[8] = xGrid[20];\n        yValue[8] = yGrid[40];\n    }\n\n    public void levelNine()\n    {\n        xValue[0] = xGrid[5];\n        yValue[0] = yGrid[25];\n\n        xValue[1] = xGrid[20];\n        yValue[1] = yGrid[25];\n\n        xValue[2] = xGrid[5];\n        yValue[2] = yGrid[40];\n\n        xValue[3] = xGrid[20];\n        yValue[3] = yGrid[40];\n\n        xValue[4] = xGrid[40];\n        yValue[4] = yGrid[25];\n\n        xValue[5] = xGrid[55];\n        yValue[5] = yGrid[25];\n\n        xValue[6] = xGrid[40];\n        yValue[6] = yGrid[40];\n\n        xValue[7] = xGrid[55];\n        yValue[7] = yGrid[40];\n\n        xValue[8] = xGrid[20];\n        yValue[8] = yGrid[55];\n\n        xValue[9] = xGrid[40];\n        yValue[9] = yGrid[55];\n\n        xValue[10] = xGrid[20];\n        yValue[10] = yGrid[70];\n\n        xValue[11] = xGrid[40];\n        yValue[11] = yGrid[70];\n\n\n    }\n\n    public void levelTen()\n    {\n        xValue[0] = xGrid[15];\n        yValue[0] = yGrid[10];\n\n        xValue[1] = xGrid[30];\n        yValue[1] = yGrid[10];\n\n        xValue[2] = xGrid[45];\n        yValue[2] = yGrid[10];\n\n        xValue[3] = xGrid[20];\n        yValue[3] = yGrid[25];\n\n        xValue[4] = xGrid[40];\n        yValue[4] = yGrid[25];\n\n        xValue[5] = xGrid[30];\n        yValue[5] = yGrid[40];\n\n        xValue[6] = xGrid[20];\n        yValue[6] = yGrid[55];\n\n        xValue[7] = xGrid[40];\n        yValue[7] = yGrid[55];\n\n        xValue[8] = xGrid[15];\n        yValue[8] = yGrid[70];\n\n        xValue[9] = xGrid[30];\n        yValue[9] = yGrid[70];\n\n        xValue[10] = xGrid[45];\n        yValue[10] = yGrid[70];\n    }\n\n    public void levelEleven()\n    {\n        xValue[0] = xGrid[30];\n        yValue[0] = yGrid[40];\n\n        xValue[1] = xGrid[30];\n        yValue[1] = yGrid[60];\n\n        xValue[2] = xGrid[10];\n        yValue[2] = yGrid[40];\n\n        xValue[3] = xGrid[50];\n        yValue[3] = yGrid[40];\n\n        xValue[4] = xGrid[30];\n        yValue[4] = yGrid[20];\n\n        xValue[5] = xGrid[50];\n        yValue[5] = yGrid[20];\n\n        xValue[6] = xGrid[50];\n        yValue[6] = yGrid[60];\n\n        xValue[7] = xGrid[10];\n        yValue[7] = yGrid[20];\n\n        xValue[8] = xGrid[10];\n        yValue[8] = yGrid[60];\n    }\n\n    public void levelTwelve()\n    {\n        xValue[0] = xGrid[30];\n        yValue[0] = yGrid[45];\n\n        xValue[1] = xGrid[30];\n        yValue[1] = yGrid[15];\n\n        xValue[2] = xGrid[40];\n        yValue[2] = yGrid[30];\n\n        xValue[3] = xGrid[50];\n        yValue[3] = yGrid[45];\n\n        xValue[4] = xGrid[40];\n        yValue[4] = yGrid[60];\n\n        xValue[5] = xGrid[30];\n        yValue[5] = yGrid[75];\n\n        xValue[6] = xGrid[20];\n        yValue[6] = yGrid[60];\n\n        xValue[7] = xGrid[10];\n        yValue[7] = yGrid[45];\n\n        xValue[8] = xGrid[20];\n        yValue[8] = yGrid[30];\n    }\n\n    public int[] getX()\n    {\n        return xValue;\n    }\n\n    public int[] getY()\n    {\n        return yValue;\n    }\n}")}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},"package com.example.android.circlegame;\n\nimport android.content.Context;\nimport android.content.res.Resources;\nimport android.graphics.Bitmap;\nimport android.graphics.BitmapFactory;\nimport android.util.LruCache;\n\n//This manages the bitamp to ensure that not too much memory is used up\npublic class BitmapManager {\n\n    private int canvasHeight = 50;\n    private int canvasWidth = 50;\n    private final LruCache&lt;String, Bitmap&gt; cache;\n    private final Resources res;\n\n    public static Bitmap red;\n    public static Bitmap blue;\n    public static Bitmap black;\n    public static Bitmap darkgreen;\n    public static Bitmap gray;\n    public static Bitmap lavender;\n    public static Bitmap magenta;\n    public static Bitmap maroon;\n    public static Bitmap midnight;\n    public static Bitmap orange;\n    public static Bitmap olive;\n    public static Bitmap plum;\n    public static Bitmap purple;\n    public static Bitmap seafoam;\n    public static Bitmap teal;\n    public static Bitmap turquoise;\n    public static Bitmap yellow;\n    public static Bitmap white;\n\n\n    public BitmapManager(Context context, double width, double height) {\n        //Creates a cache that uses up a quarter of max memory at all times\n        int memorySize = (int) Runtime.getRuntime().maxMemory();\n        int cacheSize = memorySize / 4;\n        res = context.getResources();\n        canvasWidth = (int) width;\n        canvasHeight = (int) height;\n        BitmapFactory.Options opt = new BitmapFactory.Options();\n        opt.inMutable = true;\n\n        cache = new LruCache&lt;String, Bitmap&gt;((int) (cacheSize)) {\n            @Override\n            protected int sizeOf(String key, Bitmap bitmap) {\n                return bitmap.getByteCount() / 1024;\n            }\n        };\n\n        //This creates all of the circles using their textures\n        red = BitmapFactory.decodeResource(res, R.drawable.red_circle, opt);\n        blue = BitmapFactory.decodeResource(res, R.drawable.blue_circle, opt);\n        black = BitmapFactory.decodeResource(res, R.drawable.black_circle, opt);\n        darkgreen = BitmapFactory.decodeResource(res, R.drawable.dark_green_circle, opt);\n        gray = BitmapFactory.decodeResource(res, R.drawable.gray_circle, opt);\n        lavender = BitmapFactory.decodeResource(res, R.drawable.lavender_circle, opt);\n        magenta = BitmapFactory.decodeResource(res, R.drawable.magenta_circle, opt);\n        maroon = BitmapFactory.decodeResource(res, R.drawable.maroon_circle, opt);\n        midnight = BitmapFactory.decodeResource(res, R.drawable.midnight_circle, opt);\n        orange = BitmapFactory.decodeResource(res, R.drawable.orange_circle, opt);\n        plum = BitmapFactory.decodeResource(res, R.drawable.plum_circle, opt);\n        purple = BitmapFactory.decodeResource(res, R.drawable.purple_circle, opt);\n        seafoam = BitmapFactory.decodeResource(res, R.drawable.sea_foam_circle, opt);\n        teal = BitmapFactory.decodeResource(res, R.drawable.teal_circle, opt);\n        turquoise = BitmapFactory.decodeResource(res, R.drawable.turquoise_circle, opt);\n        yellow = BitmapFactory.decodeResource(res, R.drawable.yellow_circle, opt);\n        white = BitmapFactory.decodeResource(res, R.drawable.white_circle, opt);\n        olive = BitmapFactory.decodeResource(res, R.drawable.olive_circle, opt);\n\n    }\n\n    public void setTitleScreen() {\n        //This cleans all the circles off the screen and creates the title background\n        cleanLists();\n        addBitmapToMemoryCache((0), Bitmap.createScaledBitmap(BitmapFactory.decodeResource(res, R.drawable.titlescreen), canvasWidth, canvasHeight, true));\n    }\n\n    private void setABackground(int i)\n    {\n        cleanLists();\n        switch (i)\n        {\n            //This creates the background corresponding to the random number that is generated by getBackground\n            case 0:\n                addBitmapToMemoryCache((0), Bitmap.createScaledBitmap(BitmapFactory.decodeResource(res, R.drawable.background1), canvasWidth, canvasHeight, true));\n                break;\n            case 1:\n                addBitmapToMemoryCache((0), Bitmap.createScaledBitmap(BitmapFactory.decodeResource(res, R.drawable.background2), canvasWidth, canvasHeight, true));\n                break;\n            case 2:\n                addBitmapToMemoryCache((0), Bitmap.createScaledBitmap(BitmapFactory.decodeResource(res, R.drawable.background3), canvasWidth, canvasHeight, true));\n                break;\n            case 3:\n                addBitmapToMemoryCache((0), Bitmap.createScaledBitmap(BitmapFactory.decodeResource(res, R.drawable.background4), canvasWidth, canvasHeight, true));\n                break;\n            case 4:\n                addBitmapToMemoryCache((0), Bitmap.createScaledBitmap(BitmapFactory.decodeResource(res, R.drawable.background5), canvasWidth, canvasHeight, true));\n                break;\n            case 5:\n                addBitmapToMemoryCache((0), Bitmap.createScaledBitmap(BitmapFactory.decodeResource(res, R.drawable.background6), canvasWidth, canvasHeight, true));\n                break;\n            case 6:\n                addBitmapToMemoryCache((0), Bitmap.createScaledBitmap(BitmapFactory.decodeResource(res, R.drawable.background7), canvasWidth, canvasHeight, true));\n                break;\n            case 7:\n                addBitmapToMemoryCache((0), Bitmap.createScaledBitmap(BitmapFactory.decodeResource(res, R.drawable.background8), canvasWidth, canvasHeight, true));\n                break;\n            case 8:\n                addBitmapToMemoryCache((0), Bitmap.createScaledBitmap(BitmapFactory.decodeResource(res, R.drawable.background9), canvasWidth, canvasHeight, true));\n                break;\n            case 9:\n                addBitmapToMemoryCache((0), Bitmap.createScaledBitmap(BitmapFactory.decodeResource(res, R.drawable.background10), canvasWidth, canvasHeight, true));\n                break;\n        }\n    }\n\n    private void setACircle(int i)\n    {\n        cleanLists();\n        switch (i)\n        {\n            //This creates the circle depending on the number randomly generated by getCircle\n            case 0:\n                addBitmapToMemoryCache((0), red);\n                break;\n            case 1:\n                addBitmapToMemoryCache((0), blue);\n                break;\n            case 2:\n                addBitmapToMemoryCache((0), black);\n                break;\n            case 3:\n                addBitmapToMemoryCache((0), darkgreen);\n                break;\n            case 4:\n                addBitmapToMemoryCache((0), gray);\n                break;\n            case 5:\n                addBitmapToMemoryCache((0), lavender);\n                break;\n            case 6:\n                addBitmapToMemoryCache((0), magenta);\n                break;\n            case 7:\n                addBitmapToMemoryCache((0), maroon);\n                break;\n            case 8:\n                addBitmapToMemoryCache((0), midnight);\n                break;\n            case 9:\n                addBitmapToMemoryCache((0), orange);\n                break;\n            case 10:\n                addBitmapToMemoryCache((0), plum);\n                break;\n            case 11:\n                addBitmapToMemoryCache((0), purple);\n                break;\n            case 12:\n                addBitmapToMemoryCache((0), seafoam);\n                break;\n            case 13:\n                addBitmapToMemoryCache((0), teal);\n                break;\n            case 14:\n                addBitmapToMemoryCache((0), turquoise);\n                break;\n            case 15:\n                addBitmapToMemoryCache((0), white);\n                break;\n            case 16:\n                addBitmapToMemoryCache((0), yellow);\n                break;\n            case 17:\n                addBitmapToMemoryCache((0), olive);\n                break;\n        }\n    }\n\n    public Bitmap getTitleScreen() {\n        //Simply calls the method that creates the titlescreen background\n        setTitleScreen();\n        return getBitmap(0);\n    }\n\n    public Bitmap getBackground() {\n        //Creates a random number for setABackground and then calls it\n        int random = (int) (Math.random() * 10);\n        setABackground(random);\n        return getBitmap(0);\n    }\n\n    public Bitmap getCircle() {\n        //Creates a random number for setACircle and then calls it\n        int random = (int) (Math.random() * 18);\n        setACircle(random);\n        return getBitmap(0);\n    }\n\n    private void cleanLists() {\n        removeBitmap(0);\n    }\n\n    private void addBitmapToMemoryCache(int key, Bitmap bitmap) {\n        cache.put(Integer.toString(key), bitmap);\n    }\n\n    private void removeBitmap(int key) {\n        cache.remove(Integer.toString(key));\n    }\n\n    private Bitmap getBitmap(int key) {\n        return cache.get(Integer.toString(key));\n    }\n}")}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},"package com.example.android.circlegame;\n\nimport android.graphics.drawable.BitmapDrawable;\n\npublic class SoundManager {\n\npublic int findSound(BitmapDrawable circle)\n{\n    //Finds and returns the sound that is needed for the circle. Prevents overuse of memory.\n   if (circle.getBitmap().sameAs(BitmapManager.red))\n       return R.raw.ai_sound1;\n    if (circle.getBitmap().sameAs(BitmapManager.blue))\n        return R.raw.ai_sound2;\n    if (circle.getBitmap().sameAs(BitmapManager.black))\n        return R.raw.ai_sound3;\n    if (circle.getBitmap().sameAs(BitmapManager.darkgreen))\n        return R.raw.ai_sound4;\n    if (circle.getBitmap().sameAs(BitmapManager.gray))\n        return R.raw.ai_sound5;\n    if (circle.getBitmap().sameAs(BitmapManager.lavender))\n        return R.raw.ai_sound6;\n    if (circle.getBitmap().sameAs(BitmapManager.magenta))\n        return R.raw.ai_sound7;\n    if (circle.getBitmap().sameAs(BitmapManager.maroon))\n        return R.raw.ai_sound8;\n    if (circle.getBitmap().sameAs(BitmapManager.midnight))\n        return R.raw.ai_sound9;\n    if (circle.getBitmap().sameAs(BitmapManager.orange))\n        return R.raw.ai_sound10;\n    if (circle.getBitmap().sameAs(BitmapManager.plum))\n        return R.raw.ai_sound11;\n    if (circle.getBitmap().sameAs(BitmapManager.purple))\n        return R.raw.ai_sound12;\n    if (circle.getBitmap().sameAs(BitmapManager.teal))\n        return R.raw.ai_sound13;\n    if (circle.getBitmap().sameAs(BitmapManager.turquoise))\n        return R.raw.ai_sound14;\n    if (circle.getBitmap().sameAs(BitmapManager.yellow))\n        return R.raw.ai_sound15;\n    if (circle.getBitmap().sameAs(BitmapManager.white))\n        return R.raw.ai_sound16;\n    if (circle.getBitmap().sameAs(BitmapManager.seafoam))\n        return R.raw.ai_sound17;\n    return R.raw.ai_sound18;\n}\n\n\n}")}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},'\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.Input;\nimport com.badlogic.gdx.InputProcessor;\nimport com.badlogic.gdx.audio.Sound;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.g2d.*;\nimport com.badlogic.gdx.maps.objects.RectangleMapObject;\nimport com.badlogic.gdx.maps.tiled.TiledMap;\nimport com.badlogic.gdx.maps.tiled.TiledMapTileLayer;\nimport com.badlogic.gdx.math.Rectangle;\nimport com.badlogic.gdx.math.Vector2;\nimport com.badlogic.gdx.utils.Array;\nimport com.badlogic.gdx.utils.Timer;\nimport com.inoculates.knight.Storage;\nimport com.inoculates.knight.effects.RollingMud;\nimport com.inoculates.knight.gems.*;\nimport com.inoculates.knight.objects.*;\nimport com.inoculates.knight.platforms.Platform;\nimport com.inoculates.knight.projectiles.Projectile;\nimport com.inoculates.knight.enemies.*;\nimport com.inoculates.knight.screens.GameScreen;\n\n//Pixelknight class responsible for every action of the main character, the pixel knight.\n\npublic class PixelKnight extends Sprite implements InputProcessor {\n    //All of these static integers represent the various states the pixel knight goes through.\n    //Each state the pixel knight is set to will cause the knight to have a different animation.\n    public static final int SPAWN = 0;\n    public static final int IDLE = 1;\n    public static final int ATTACKING = 2;\n    public static final int SPECATTACKING = 3;\n    public static final int RUNNING = 4;\n    public static final int RUNATTACKING = 5;\n    public static final int RUNSPECATTACKING = 6;\n    public static final int JUMPING = 7;\n    public static final int JUMPATTACKING = 8;\n    public static final int JUMPSPECATTACKING = 9;\n    public static final int FALLING = 10;\n    public static final int FALLATTACKING = 11;\n    public static final int FALLSPECATTACKING = 12;\n    public static final int CLIDLE = 13;\n    public static final int CLIMBING = 14;\n    public static final int CLATTACKING = 15;\n    public static final int CLSPECATTACKING = 16;\n    public static final int SWIMMING = 17;\n    public static final int SWATTACKING = 18;\n    public static final int SWSPECATTACKING = 19;\n    public static final int CHARGING = 20;\n    public static final int FLYING = 21;\n    public static final int REBOUNDING = 22;\n    public static final int GLIDING = 23;\n    public static final int ROLLING = 24;\n    public static final int UNROLLING = 25;\n    public static final int DEAD = 26;\n\n    //These are the directions the pixelknight can face, and it affects the orientation of the knight\'s sprite.\n    public static final int LEFT = -1;\n    public static final int RIGHT = 1;\n\n    //These two floats are involved in jumping and falling. The JUMP_VELOCITY is the starting jump velocity, while\n    //the gravity is the number the velocity of the knight is periodically subtracted by.\n    public static final float JUMP_VELOCITY = 2.8f;\n    public static final float GRAVITY = 0.11f;\n\n    //These static integers represent the special power the pixel knight holds, and tells the game which power the\n    //knight currently has.\n    public static final int NOTHING = 0;\n    public static final int MUD = 1;\n    public static final int CHARGE = 2;\n    public static final int GLIDE = 3;\n    public static final int HJUMP = 4;\n    public static final int ROLL = 5;\n\n    //These are the velocity and acceleration vectors of the knight, which contain both x and y components.\n    //They are continually added to either the position vector (in the case of the velocity) and the velocity vector.\n    Vector2 vel = new Vector2();\n    Vector2 acel = new Vector2();\n\n    //The layer which the pixel knight is drawn on.\n    TiledMapTileLayer layer;\n\n    //Animations of the pixel knight, which as mentioned are determined by the state\n    Animation idle, run, attack, specAttack, runAttack, runSpecAttack, jump, jumpAttack, jumpSpecAttack,\n            fall, fallAttack, fallSpecAttack, climbIdle, climbRun, climbAttack, climbSpecAttack, swimRun, swimAttack,\n            swimSpecAttack, charge, roll, unRoll, ball;\n\n    //The screen is the game screen responsible for drawing the knight as well as the world, while the atlas is a\n    //reference to all of the knight\'s textures. The map is the object which contains the information of the pixel\n    //knight\'s surroundings, e.g. the tiles the pixel knight interacts with. Storage is the object that stores\n    //persistent data such as the lives and gems the play currently has.\n    GameScreen screen;\n    TextureAtlas atlas;\n    TiledMap map;\n    Storage storage;\n\n    //These arrays represent all slopes currently on the map.\n    Array&lt;RectangleMapObject&gt; rSlopes = new Array&lt;RectangleMapObject&gt;();\n    Array&lt;RectangleMapObject&gt; lSlopes = new Array&lt;RectangleMapObject&gt;();\n\n    //This object handles the knight\'s powers.\n    Powers powers;\n    //The timer for the glide power, which needs to expire and renew at certain intervals.\n    Timer glideTimer = new Timer();\n    //The effect generated by rolling.\n    RollingMud rMud;\n\n    //The state of the knight, which determines the current animation.\n    int state = SPAWN;\n    //The direction of the knight, which determines the orientation. The attackDir supersedes the normal dir in case the\n    //pixel knight is attacking. This allows the player to attack and move..\n    int dir = LEFT, attackDir;\n    int health = 10;\n    int armor = 0;\n    int dmg = 1;\n    public int gems = 0;\n    public int lives = 0;\n    //What power the knight currently has.\n    int power = NOTHING;\n    //The animationTime tells the game how far along the knight is in each frame.\n    float animationTime = 0;\n    //These modifiers influence the velocity of the pixel knight for a short time.\n    float modifierX = 0, modifierY = 0;\n    //These origins are involved in rotating the sprite, and are used to help determine collision as well.\n    float originX, originY;\n    //Various booleans which describe the state of the knight.\n    public boolean attacking = false;\n    public boolean climbable = false;\n    public boolean climbing = false;\n    public boolean cooldown = false;\n    public boolean flickering = false;\n    public boolean dJumpable = true;\n    public boolean glidable = true;\n    public boolean grounded = true;\n    public boolean invulnerability = false;\n    public boolean onPlatform = false;\n    public boolean rolling = false;\n    public boolean onSlopeRight = false;\n    public boolean onSlopeLeft = false;\n    public boolean pX = false;\n    public boolean stun = false;\n    public boolean swimming = false;\n    public boolean transparent = false;\n    public boolean unlatchable = false;\n\n    //The regions that serve as frames for the animations of the knight.\n    TextureAtlas.AtlasRegion idle1, idle2;\n    TextureAtlas.AtlasRegion run1, run2, run3, run4, run5, run6;\n    TextureAtlas.AtlasRegion charge1, charge2, charge3, charge4, charge5, charge6;\n    TextureAtlas.AtlasRegion rolling1, rolling2, rolling3, rolling4, rolling5, rolling6, rollingball;\n    TextureAtlas.AtlasRegion attack1, attack2, attack3, attack4, attack5, attack6, attack7, attack8;\n    TextureAtlas.AtlasRegion specAttack1, specAttack2, specAttack3, specAttack4, specAttack5, specAttack6, specAttack7, specAttack8;\n    TextureAtlas.AtlasRegion runAttack1, runAttack2, runAttack3, runAttack4;\n    TextureAtlas.AtlasRegion runSpecAttack1, runSpecAttack2, runSpecAttack3, runSpecAttack4;\n    TextureAtlas.AtlasRegion jump1, jump2, jump3, jump4;\n    TextureAtlas.AtlasRegion jumpAttack1, jumpAttack2, jumpAttack3, jumpAttack4;\n    TextureAtlas.AtlasRegion jumpSpecAttack1, jumpSpecAttack2, jumpSpecAttack3, jumpSpecAttack4;\n    TextureAtlas.AtlasRegion fall1, fall2, fall3, fall4;\n    TextureAtlas.AtlasRegion fallAttack1, fallAttack2, fallAttack3, fallAttack4;\n    TextureAtlas.AtlasRegion fallSpecAttack1, fallSpecAttack2, fallSpecAttack3, fallSpecAttack4;\n    TextureAtlas.AtlasRegion climbingIdle1, climbingIdle2, climbing1, climbing2;\n    TextureAtlas.AtlasRegion climbingAttack1, climbingAttack2, climbingAttack3, climbingAttack4;\n    TextureAtlas.AtlasRegion climbingSpecAttack1, climbingSpecAttack2, climbingSpecAttack3, climbingSpecAttack4;\n    TextureAtlas.AtlasRegion swimming1, swimming2, swimming3, swimming4;\n    TextureAtlas.AtlasRegion swimmingAttack1, swimmingAttack2, swimmingAttack3, swimmingAttack4;\n    TextureAtlas.AtlasRegion swimmingSpecAttack1, swimmingSpecAttack2, swimmingSpecAttack3, swimmingSpecAttack4;\n\n    //Sounds for the various actions of the pixel knight.\n    private Sound attackS1 = Gdx.audio.newSound(Gdx.files.internal("data/sounds/Attack.wav")),\n    attackS2 = Gdx.audio.newSound(Gdx.files.internal("data/sounds/Attack2.wav")), attackS3 =\n            Gdx.audio.newSound(Gdx.files.internal("data/sounds/Attack3.wav"));\n\n    private Sound throwMud = Gdx.audio.newSound(Gdx.files.internal("data/sounds/Laser_Shoot5.wav"));\n\n    private Sound hurtS1 = Gdx.audio.newSound(Gdx.files.internal("data/sounds/Hit_Hurt.wav")),\n            hurtS2 = Gdx.audio.newSound(Gdx.files.internal("data/sounds/Hit_Hurt2.wav")),\n            hurtS3 = Gdx.audio.newSound(Gdx.files.internal("data/sounds/Hit_Hurt.wav"));\n\n    private Sound jumpS1 = Gdx.audio.newSound(Gdx.files.internal("data/sounds/Jump.wav")),\n            jumpS2 = Gdx.audio.newSound(Gdx.files.internal("data/sounds/Jump2.wav")),\n            jumpS3 = Gdx.audio.newSound(Gdx.files.internal("data/sounds/Jump3.wav"));\n\n    private Sound gemS1 = Gdx.audio.newSound(Gdx.files.internal("data/sounds/Pickup_Coin.wav")),\n            gemS2 = Gdx.audio.newSound(Gdx.files.internal("data/sounds/Pickup_Coin2.wav")),\n            gemS3 = Gdx.audio.newSound(Gdx.files.internal("data/sounds/Pickup_Coin3.wav"));\n\n    private Sound pwrUpS1 = Gdx.audio.newSound(Gdx.files.internal("data/sounds/Powerup.wav")),\n            pwrUpS2 = Gdx.audio.newSound(Gdx.files.internal("data/sounds/Powerup2.wav")),\n            pwrUpS3 = Gdx.audio.newSound(Gdx.files.internal("data/sounds/Powerup3.wav"));\n\n    private Sound death = Gdx.audio.newSound(Gdx.files.internal("data/sounds/Explosion4.wav"));\n\n    //Initializes the pixel knight class by setting the knight\'s atlas, layer, screen, map, frames, and animations.\n    public PixelKnight(TextureAtlas atlas, TiledMapTileLayer layer, GameScreen screen, TiledMap map) {\n        super(atlas.findRegion("idle1"));\n        this.atlas = atlas;\n        this.layer = layer;\n        this.screen = screen;\n        setState(SPAWN, true);\n        setSize(14.4f, 25.6f);\n        storage = screen.storage;\n        this.map = map;\n        powers = new Powers(this, screen, layer, atlas);\n        gems = storage.gems;\n        lives = storage.lives;\n        createRegions();\n        createAnimations();\n        originX = getOriginX();\n        originY = getOriginY();\n    }\n\n    //This method interprets any commands coming out a trackpad or a mouse and translates it into action depending\n    //on the user\'s control settings. The actual commands are explained in the keyDown method.\n    public boolean touchDown(int x, int y, int pointer, int button) {\n        if (button == storage.attack && !rolling && state != CHARGING)\n            attack();\n        if (button == storage.moveUp && (!stun || state == CHARGING)) {\n            if (screen.exitLevel())\n                stun = true;\n            else if (climbable && !rolling && !stun)\n                climbing = true;\n            else jump();\n        }\n        if (button == storage.moveDown) {\n            transparent = true;\n            Timer timer = new Timer();\n            timer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    transparent = false;\n                }\n            }, 0.4f);\n            timer.start();\n            grounded = false;\n        }\n        if (button == storage.specAttack && state != ATTACKING && state != SPECATTACKING) {\n            specDecider(Gdx.input.getX(), Gdx.input.getY());\n        }\n        return true;\n    }\n\n    public boolean touchDragged(int x, int y, int z) {\n        return true;\n    }\n\n    public boolean keyTyped(char x) {\n        return true;\n    }\n\n    public boolean scrolled(int x) {\n        return true;\n    }\n\n    //Interprets the users input in the form of keys pressed and translates it to actions.\n    public boolean keyDown(int x) {\n        //User pressed the up key.\n        if (x == storage.moveUp && (!stun || state == CHARGING)) {\n            //Checks if the user is at the end door.\n            if (screen.exitLevel())\n                stun = true;\n            //Checks if the user can climb.\n            else if (climbable && !rolling && !stun)\n                climbing = true;\n            //Otherwise makes the pixel knight jump.\n            else jump();\n        }\n        //User pressed the down key. This phases the knight through any platforms.\n        if (x == storage.moveDown) {\n            transparent = true;\n            Timer timer = new Timer();\n            timer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    transparent = false;\n                }\n            }, 0.4f);\n            timer.start();\n            grounded = false;\n        }\n        //User pressed the special attack key, launching the specdecider method.\n        if (x == storage.specAttack && state != ATTACKING && state != SPECATTACKING) {\n            specDecider(Gdx.input.getX(), Gdx.input.getY());\n        }\n        //User pressed the lose power key, getting rid of all powers and playing sound.\n        if (x == storage.losePower && power != NOTHING) {\n            Array&lt;Sound&gt; sounds = new Array&lt;Sound&gt;();\n            sounds.addAll(pwrUpS1, pwrUpS2, pwrUpS3);\n            playRandomSound(sounds);\n            setColor(Color.luminanceAlpha(500, 255));\n            power = NOTHING;\n            depower();\n            screen.powerUI.update(power);\n            Timer timer = new Timer();\n            timer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    setColor(Color.WHITE);\n                }\n            }, 0.8f);\n            timer.start();\n        }\n        if (x == storage.attack && !rolling && state != CHARGING)\n            attack();\n        return true;\n    }\n\n    public boolean mouseMoved(int x, int y) {\n        return true;\n    }\n\n    public boolean keyUp(int x) {\n        return true;\n    }\n\n    public boolean touchUp(int x, int y, int z, int a) {\n        return true;\n    }\n\n    //Method responsible for periodically making the knight act.\n    private void update(float deltaTime) {\n        updateTime(deltaTime);\n        chooseSprite();\n        handleEvents();\n        processKeys();\n        tryMove();\n        detectBalls();\n        detectEnemies();\n        detectGems();\n        detectSpikers();\n        canClimb();\n        collidesSlopeLeft();\n        collidesSlopeRight();\n        storage.setGems(gems);\n        storage.setLives(lives);\n    }\n\n    //This method moves the pixel knight through both x and y velocities.\n    private void tryMove() {\n        if (vel.x == 0 && vel.y == 0)\n            return;\n        float oldX = getX(), oldY = getY();\n        boolean collisionX = false, collisionY = false, collisionP = false;\n\n        //Adds velocity to x value.\n        setX(getX() + vel.x);\n\n        //Detects collision and if there is one, moves the knight back.\n        if (vel.x &lt; 0)\n            collisionX = collidesLeft() || collidesDestructibleLeft();\n        else if (vel.x &gt; 0)\n            collisionX = collidesRight() || collidesDestructibleRight();\n\n        if (collisionX && !onSlopeLeft && !onSlopeRight && !onSlope()) {\n            if (state == CHARGING || state == FLYING)\n                rebound();\n            else {\n                setX(oldX);\n                vel.x = 0;\n                acel.x = 0;\n            }\n        }\n\n        //Adds velocity to y value.\n        setY(getY() + vel.y);\n\n        //Detects collision on the y axis.\n        if (vel.y &lt; 0) {\n            collisionY = collidesBottom() || collidesDestructibleBottom();\n            if (collisionY)\n                climbing = false;\n            collisionP = collidesPlatform();\n            if (!collisionY && !collisionP && !onPlatform && !onSlopeRight && !onSlopeLeft) {\n                if (grounded) {\n                    Timer timer = new Timer();\n                    timer.scheduleTask(new Timer.Task() {\n                        @Override\n                        public void run() {\n                            final boolean collision = collidesBottom() || collidesPlatform();\n                            if (!collision && !onPlatform && !onSlopeRight && !onSlopeLeft)\n                                grounded = false;\n                        }\n                    }, 0.15f);\n                    timer.start();\n                }\n            }\n            else\n                grounded = true;\n            if (state == JUMPING || state == CLIMBING)\n            setState(FALLING, true);\n            else if (!grounded)\n            setState(FALLING, false);\n        }\n\n        else if (vel.y &gt; 0) {\n            collisionY = collidesTop() || collidesDestructibleTop();\n            setState(JUMPING, false);\n            grounded = false;\n        }\n\n        if ((collisionY || collisionP) && !onSlopeRight && !onSlopeLeft) {\n            if (!collisionP)\n                setY(oldY);\n            if (state == REBOUNDING) {\n                setState(IDLE, true);\n                vel.x = 0;\n                vel.y = 0;\n                unStun();\n            }\n            if (state == FLYING) {\n                brake();\n                vel.y = 0;\n            }\n            vel.y = 0;\n            glidable = true;\n            onPlatform = false;\n            transparent = false;\n        }\n    }\n\n    //Method responsible for making the knight jump.\n    private void jump() {\n        //Plays the jump sound.\n        Array&lt;Sound&gt; sounds = new Array&lt;Sound&gt;();\n        sounds.addAll(jumpS1, jumpS2, jumpS3);\n        if (rolling) return;\n        //Jumps if on the ground.\n        if (grounded) {\n            setState(JUMPING, false);\n            playRandomSound(sounds);\n            if (onPlatform) {\n                unlatchable = true;\n                Timer timer = new Timer();\n                timer.scheduleTask(new Timer.Task() {\n                    @Override\n                    public void run() {\n                        unlatchable = false;\n                    }\n                }, 0.1f);\n                timer.start();\n            }\n            if (power == HJUMP) {\n                if (onPlatform)\n                    vel.y = JUMP_VELOCITY * 1.5f;\n                else SVY(JUMP_VELOCITY * 1.5f);\n            }\n            else {\n                if (onPlatform)\n                    vel.y = JUMP_VELOCITY;\n                else SVY(JUMP_VELOCITY);\n            }\n            onPlatform = false;\n            pX = false;\n            grounded = false;\n            dJumpable = true;\n            glidable = true;\n        }\n        //Double jumps if able to.\n        else if (dJumpable && (state == JUMPING || state == FALLING || state == ATTACKING)) {\n            playRandomSound(sounds);\n            dJumpable = false;\n            transparent = false;\n            if (power == HJUMP) SVY(JUMP_VELOCITY);\n            else SVY(JUMP_VELOCITY / 1.5f);\n        }\n    }\n\n    //Glides if able to, then falls afterwards.\n    private void glide() {\n        vel.y = 0;\n        setState(GLIDING, true);\n        glideTimer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    if (state == GLIDING) {\n                        glidable = false;\n                        setState(FALLING, true);\n                    }\n                }\n            }, 0.75f);\n            glideTimer.start();\n    }\n\n    //This large method is used to move the pixel knight by a constant rate as opposed to jumping.\n    private void processKeys() {\n        //This alters the y velocity if the knight is climbing.\n        if (climbing && state != ATTACKING) {\n            if (vel.y == 0 && vel.x == 0)\n            setState(CLIDLE, true);\n            else setState(CLIMBING, true);\n            dJumpable = true;\n            glidable = true;\n            if (Gdx.input.isKeyPressed(storage.moveUp) && detectClimbing(getX(), getY() + 11)) {\n                SVY(0.9f);\n            } else if (Gdx.input.isKeyPressed(storage.moveDown)) {\n                SVY(-0.9f);\n            }\n            else vel.y = 0;\n        }\n\n        //This handles swimming by slightly increasing and decreasing the velocities.\n        if (swimming && state != CHARGING) {\n            unStun();\n            setState(SWIMMING, true);\n            if (vel.x &gt; 0)\n                vel.x -= 0.01;\n            if (vel.x &lt; 0)\n                vel.x += 0.01;\n            if (vel.y &gt; 0)\n                vel.y -= 0.01;\n            if (vel.y &lt; 0)\n                vel.y += 0.01;\n            if (vel.y &lt; 0.01 && vel.y &gt; -0.01)\n                vel.y = 0;\n            if (vel.x &lt; 0.01 && vel.x &gt; -0.01)\n                vel.x = 0;\n            if (Gdx.input.isKeyPressed(storage.moveUp))\n                SVY(0.6f);\n            else if (Gdx.input.isKeyPressed(storage.moveDown))\n                SVY(-0.6f);\n        }\n\n        //Handles gliding.\n        if (Gdx.input.isKeyPressed(storage.moveUp)) {\n            if (power == GLIDE && glidable && !dJumpable && vel.y &lt;= 0)\n                glide();\n        }\n        else if (state == GLIDING) {\n            glidable = false;\n            setState(FALLING, true);\n            glideTimer.clear();\n        }\n\n        //This moves the pixel knight to the left using velocities. The amount differs based on whether the knight is\n        //swimming or climbing, or simply running.\n        if (Gdx.input.isKeyPressed(storage.moveLeft)) {\n            if (stun)\n                return;\n\n            dir = LEFT;\n            if (!attacking)\n                attackDir = dir;\n\n            if (state != JUMPING && grounded)\n                setState(RUNNING, false);\n\n             if (state != FLYING && vel.x != 0 && Math.signum(vel.x) == dir && pX && !rolling)\n                vel.x = (1.5f + Math.abs(vel.x)) * dir;\n             else if (state != FLYING && !rolling)\n                 SVX(1.5f);\n             if (climbing)\n                 SVX(0.9f);\n             else if (swimming)\n                 SVX(0.6f);\n             if (rolling)\n                 acel.x = -0.05f;\n        }\n\n        //Same as the left method, except for right velocities.\n        else if (Gdx.input.isKeyPressed(storage.moveRight)) {\n            if (stun)\n                return;\n\n            dir = RIGHT;\n\n            if (!attacking)\n                attackDir = dir;\n\n            if (state != JUMPING && grounded)\n                setState(RUNNING, false);\n\n                if (state != FLYING && vel.x != 0 && Math.signum(vel.x) == dir && pX && !rolling)\n                    vel.x = (1.5f + Math.abs(vel.x)) * dir;\n                else if (state != FLYING && !rolling)\n                    SVX(1.5f);\n                if (climbing)\n                    SVX(0.9f);\n                else if (swimming)\n                    SVX(0.6f);\n                if (rolling)\n                    acel.x = 0.05f;\n        }\n\n        //This halts the knight if no buttons are currently being pressed.\n        else {\n            if (!stun && !pX && !swimming && !rolling)\n                vel.x = 0;\n            if (rolling)\n                acel.x = 0;\n            if (grounded)\n                setState(IDLE, false);\n        }\n    }\n\n    //This draws the knight based upon the direction te knight is facing.\n    public void draw(Batch batch) {\n        update(Gdx.graphics.getDeltaTime());\n\n        if (attackDir == LEFT && attacking) {\n            setScale(-1, 1);\n        }\n        if (attackDir == LEFT && state != IDLE && state != CLIDLE && state != CLIMBING && !attacking) {\n            setFlip(true, false);\n            setScale(1, 1);\n        }\n        if (attackDir == RIGHT) {\n            setFlip(false, false);\n            setScale(1, 1);\n        }\n\n        super.draw(batch);\n    }\n\n    //Checks whether the cell at the x and y point is blocked or not.\n    private boolean isCellBlocked(float x, float y) {\n        TiledMapTileLayer.Cell cell = layer.getCell((int) (x / layer.getTileWidth()), (int) (y / layer.getTileHeight()));\n        return cell != null && cell.getTile() != null && (cell.getTile().getProperties().containsKey("blocked"));\n}\n\n    //Checks whether the cell at the x and y point is a log or not.\n    private boolean isCellLog(float x, float y) {\n        TiledMapTileLayer.Cell cell = layer.getCell((int) (x / layer.getTileWidth()), (int) (y / layer.getTileHeight()));\n        if (cell != null && cell.getTile() != null && cell.getTile().getProperties().containsKey("log") && onTop(cell.getTile().getOffsetY() - 2)) {\n            setY((int) (getY() / layer.getTileHeight() + 1) * layer.getTileHeight() - 2);\n            return true;\n        }\n        return false;\n    }\n\n    //Checks whether the cell at the x and y point is a spike or not.\n    private boolean isCellSpike(float x, float y) {\n        TiledMapTileLayer.Cell cell = layer.getCell((int) (x / layer.getTileWidth()), (int) (y / layer.getTileHeight()));\n        return cell != null && cell.getTile() != null && cell.getTile().getProperties().containsKey("spike");\n    }\n\n    //Checks whether the cell at the x and y point is able to be climbed by the knight or not.\n    private boolean isCellClimbable(float x, float y) {\n        TiledMapTileLayer.Cell cell = layer.getCell((int) (x / layer.getTileWidth()), (int) (y / layer.getTileHeight()));\n        return cell != null && cell.getTile() != null && cell.getTile().getProperties().containsKey("climbable");\n    }\n\n    //Checks whether the cell at the x and y point is able to be swum in or not.\n    private boolean isCellSwimmable(float x, float y) {\n        TiledMapTileLayer background = (TiledMapTileLayer) map.getLayers().get(1);\n        TiledMapTileLayer.Cell cell = background.getCell(((int) (x / layer.getTileWidth())), (int) (y / layer.getTileHeight()));\n        return cell != null && cell.getTile() != null && cell.getTile().getProperties().containsKey("water");\n    }\n\n    //Checks whether the cell at the x and y point is a platform or not. If the knight is on a platform, the game will\n    //set the knight on top of the platform\n    private boolean isCellPlatform(float x, float y) {\n        TiledMapTileLayer.Cell cell = layer.getCell((int) (x / layer.getTileWidth()), (int) (y / layer.getTileHeight()));\n        if (cell != null && cell.getTile() != null && cell.getTile().getProperties().containsKey("platform")\n                && onTop(cell.getTile().getOffsetY()) && !Gdx.input.isKeyPressed(storage.moveDown) && !transparent)\n        {\n            setY((int) (getY() / layer.getTileHeight() + 1) * layer.getTileHeight());\n            return true;\n        }\n        else return false;\n    }\n\n    //This periodically checks whether any part of the knight is in a blocked cell if his x velocity is positive.\n    public boolean collidesRight() {\n        for (float step = 0; step &lt; getHeight(); step += layer.getTileHeight() / 16)\n            for (float x = 0; x &lt; getWidth(); x += layer.getTileHeight() / 16)\n                if (isCellBlocked(getPosX() + x, getY() + step))\n                    return true;\n        return false;\n    }\n\n    //This periodically checks whether any part of the knight is a destructible if x his velocity is positive.\n    public boolean collidesDestructibleRight() {\n        for (Destructible destructible : screen.destructibles)\n            for (float step = 0; step &lt; getHeight(); step += layer.getTileHeight() / 16)\n                for (float x = 0; x &lt; getWidth(); x += layer.getTileWidth() / 16)\n                    if (getPosX() + x &gt; destructible.getX() && getPosX() + x &lt; destructible.getX() + destructible.getWidth() &&\n                        getY() + step &gt; destructible.getY() && getY() + step &lt; destructible.getY() + destructible.getHeight()) {\n                        if (state == CHARGING) {\n                            if (destructible instanceof Box || destructible instanceof BoxLarge)\n                                rebound();\n                            destructible.explode(this);\n                        }\n                        if (destructible instanceof Spiker) {\n                            Spiker spiker = (Spiker) destructible;\n                            if (spiker.isSolid(getPosX() + getWidth(), getY() + step))\n                                return true;\n                        }\n                        if (destructible.isTangible())\n                            return true;\n                    }\n        return false;\n    }\n\n    //This periodically checks whether any part of the knight is in a blocked cell if his x velocity is negative.\n    public boolean collidesLeft() {\n        for (float step = 0; step &lt; getHeight(); step += layer.getTileHeight() / 16)\n            for (float x = 0; x &lt; getWidth() / 2; x += layer.getTileHeight() / 16)\n                if (isCellBlocked(getPosX() + x, getY() + step))\n                return true;\n        return false;\n    }\n\n    //This periodically checks whether any part of the knight is a destructible if his x velocity is negative.\n    public boolean collidesDestructibleLeft() {\n        for (Destructible destructible : screen.destructibles)\n            for (float step = 0; step &lt; getHeight(); step += layer.getTileHeight() / 16)\n                for (float x = 0; x &lt; getWidth(); x += layer.getTileWidth() / 16)\n                    if (getPosX() + x&gt; destructible.getX() && getPosX() + x &lt; destructible.getX() + destructible.getWidth() &&\n                        getY() + step &gt; destructible.getY() && getY() + step &lt; destructible.getY() + destructible.getHeight()) {\n                        if (state == CHARGING) {\n                            if (destructible instanceof Box || destructible instanceof BoxLarge)\n                                rebound();\n                            destructible.explode(this);\n                        }\n                        if (destructible instanceof Spiker) {\n                            Spiker spiker = (Spiker) destructible;\n                            if (spiker.isSolid(getPosX(), getY() + step))\n                                return true;\n                        }\n                        if (destructible.isTangible())\n                            return true;\n                    }\n        return false;\n    }\n\n    //This periodically checks whether any part of the knight is in a blocked cell if his y velocity is positive.\n    public boolean collidesTop() {\n        for (float step = 0; step &lt; getWidth() - 3; step += layer.getTileWidth() / 16)\n            if (isCellBlocked(getPosX() + step, getY() + getHeight()))\n                return true;\n        return false;\n    }\n\n    //This periodically checks whether any part of the knight is a destructible if his y velocity is positive.\n    public boolean collidesDestructibleTop() {\n        for (Destructible destructible : screen.destructibles)\n            for (float step = 0; step &lt; getWidth(); step += layer.getTileWidth() / 16)\n                if (getPosX() + step &gt; destructible.getX() && getPosX() + step &lt; destructible.getX() + destructible.getWidth() &&\n                        getY() + getHeight() &gt; destructible.getY() && getY() + getHeight() &lt; destructible.getY() + destructible.getHeight()) {\n                    if (destructible instanceof Spiker) {\n                        Spiker spiker = (Spiker) destructible;\n                        if (spiker.isSolid(getPosX() + step, getY() + getHeight()))\n                            return true;\n                        }\n                    if (destructible.isTangible())\n                        return true;\n                }\n        return false;\n    }\n\n    //This periodically checks whether any part of the knight is in a blocked cell if his y velocity is negative.\n    public boolean collidesBottom() {\n        for (float step = 0; step &lt; getWidth() - 3; step += layer.getTileWidth() / 16) {\n            if (isCellBlocked(getPosX() + step, getY()))\n                return true;\n            if (isCellLog(getPosX() + step, getY() + 3))\n                return true;\n\n        }\n        return false;\n    }\n\n    //This periodically checks whether any part of the knight is a destructible if his y velocity is negative.\n    public boolean collidesDestructibleBottom() {\n        for (Destructible destructible : screen.destructibles)\n            for (float step = 0; step &lt; getWidth(); step += layer.getTileWidth() / 16)\n                if (getPosX() + step &gt; destructible.getX() && getPosX() + step &lt; destructible.getX() + destructible.getWidth() &&\n                        getY() &gt; destructible.getY() && getY() &lt; destructible.getY() + destructible.getHeight()) {\n                    if (destructible instanceof Spiker) {\n                        Spiker spiker = (Spiker) destructible;\n                        if (spiker.isSolid(getPosX() + step, getY()))\n                            return true;\n                    }\n                    if (destructible instanceof Raft || destructible instanceof Cart) {\n                        if (destructible.vel.x != 0) {\n                            vel.x = destructible.vel.x;\n                            pX = true;\n                        }\n                        else pX = false;\n                    }\n                    if (destructible.isTangible())\n                        return true;\n                }\n        return false;\n    }\n\n    //This periodically checks whether the knight is on a platform.\n    public boolean collidesPlatform() {\n        for (float step = 0; step &lt; getWidth(); step += layer.getTileWidth() / 16)\n            if (isCellPlatform(getPosX() + step, getY())) {\n                return true;\n            }\n        return false;\n    }\n\n    //This periodically checks whether the knight is on a right slope, and adjusts his position accordingly.\n    public boolean collidesSlopeRight() {\n        if (rSlopes == null) return false;\n        for (RectangleMapObject rectMapObject : rSlopes) {\n            Rectangle rect = rectMapObject.getRectangle();\n            float rWidth = (int) (rect.getWidth() / layer.getTileWidth()) * layer.getTileWidth();\n            float rHeight = (int) (rect.getHeight() / layer.getTileHeight()) * layer.getTileHeight();\n            float rX = (int) (rect.getX() / layer.getTileWidth()) * layer.getTileWidth() + getWidth() / 2;\n            float rY = (int) (rect.getY() / layer.getTileHeight()) * layer.getTileHeight();\n            if (getPosX() + getWidth() / 1.2f &gt; rX && getPosX() &lt; rX + rWidth) {\n                for (float i = rWidth; i &gt; 0; i -= layer.getTileWidth() / 10000) {\n                    if (getPosX() + getWidth() &gt; rX + i && getY() &lt; rY + i && getPosX() + getWidth() &lt; rX + rWidth && getY() &gt;= rY) {\n                        onSlopeRight = true;\n                        setY(rY + i);\n                        if (state == REBOUNDING) {\n                            setState(IDLE, true);\n                            vel.x = 0;\n                            vel.y = 0;\n                            unStun();\n                        }\n                        if (state == FLYING) {\n                            brake();\n                            vel.y = 0;\n                        }\n                        if (state == CLIMBING || state == FALLING)\n                            setState(IDLE, true);\n                        return true;\n                    }\n                    if (onSlopeRight && getPosX() + getWidth() &gt; rX + rWidth - 1.5f) {\n                        setY(rY + rHeight);\n                        if (rolling)\n                            vel.y = vel.x;\n                    }\n                }\n            }\n        }\n        onSlopeRight = false;\n        return false;\n    }\n\n    //This periodically checks whether the knight is on a left slope, and adjusts his position accordingly.\n    public boolean collidesSlopeLeft() {\n        if (lSlopes == null)\n            return false;\n        for (RectangleMapObject rectMapObject : lSlopes) {\n            Rectangle rect = rectMapObject.getRectangle();\n            float rWidth = (int) (rect.getWidth() / layer.getTileWidth()) * layer.getTileWidth();\n            float rHeight = (int) (rect.getHeight() / layer.getTileHeight()) * layer.getTileHeight();\n            float rX = (int) (rect.getX() / layer.getTileWidth()) * layer.getTileWidth() - getWidth() / 2;\n            float rY = (int) (rect.getY() / layer.getTileHeight()) * layer.getTileHeight();\n            if (getPosX() + getWidth() &gt; rX && getPosX() + getWidth() / 4 &lt; rX + rWidth) {\n                for (float i = 0; i &lt; rWidth; i += layer.getTileWidth() / 10000) {\n                    if (getPosX() &lt; rX + i && getY() &lt; rY + rHeight - i && getPosX() &gt; rX && getY() &gt;= rY) {\n                        onSlopeLeft = true;\n                        setY(rY + rHeight - i);\n                        if (state == REBOUNDING) {\n                            setState(IDLE, true);\n                            vel.x = 0;\n                            vel.y = 0;\n                            unStun();\n                        }\n                        if (state == FLYING) {\n                            brake();\n                            vel.y = 0;\n                        }\n                        if (state == CLIMBING || state == FALLING)\n                            setState(IDLE, true);\n                        return true;\n                    }\n                    if (onSlopeLeft && getPosX() &lt; rX + 1.5f) {\n                        setY(rY + rHeight);\n                        if (rolling)\n                            vel.y = -vel.x;\n                    }\n                }\n            }\n        }\n        onSlopeLeft = false;\n        return false;\n    }\n\n    //This boolean is used to disable horizontal collision while the knight is on a slope.\n    private boolean onSlope() {\n        if (rSlopes == null)\n            return false;\n        for (RectangleMapObject rectMapObject : rSlopes) {\n            Rectangle rect = rectMapObject.getRectangle();\n            float rWidth = (int) (rect.getWidth() / layer.getTileWidth()) * layer.getTileWidth();\n            float rHeight = (int) (rect.getHeight() / layer.getTileHeight()) * layer.getTileHeight();\n            float rX = (int) (rect.getX() / layer.getTileWidth()) * layer.getTileWidth();\n            float rY = (int) (rect.getY() / layer.getTileHeight()) * layer.getTileHeight();\n            if (getPosX() &gt; rX - getWidth() / 2 && getPosX() &lt; rX + rWidth && getY() &lt; rY + rHeight && getY() &gt; rY)\n                return true;\n            if (rolling && getPosX() + getWidth() / 2 &gt; rX && getPosX() + getWidth() / 2 &lt; rX + rWidth && getY() &lt; rY + rHeight && getY() &gt;= rY)\n                return true;\n        }\n        if (lSlopes == null)\n            return false;\n        for (RectangleMapObject rectMapObject : lSlopes) {\n            Rectangle rect = rectMapObject.getRectangle();\n            float rWidth = (int) (rect.getWidth() / layer.getTileWidth()) * layer.getTileWidth();\n            float rHeight = (int) (rect.getHeight() / layer.getTileHeight()) * layer.getTileHeight();\n            float rX = (int) (rect.getX() / layer.getTileWidth()) * layer.getTileWidth() - getWidth() / 2;\n            float rY = (int) (rect.getY() / layer.getTileHeight()) * layer.getTileHeight();\n            if (getPosX() &gt; rX && getPosX() &lt; rX + rWidth && getY() &lt; rY + rHeight && getY() &gt;= rY)\n                return true;\n        }\n        return false;\n    }\n\n    //This determines the tile height of the platform, which is used for the placement of the pixel knight.\n    private boolean onTop(float h)\n    {\n        float c = (getY() / layer.getTileHeight() - h / layer.getTileHeight());\n        for (int i = 0; i &lt; 50; i ++)\n            if (i - c &lt; 0.22f && i - c &gt; 0)\n                return true;\n        return false;\n    }\n\n    //Creates all the animations of the knight with their corresponding frames.\n    private void createAnimations() {\n        idle = new Animation(0.5f, idle1, idle2);\n        run = new Animation(0.16666667f, run1, run2, run3, run4, run5, run6);\n        charge = new Animation(0.16666667f, charge1, charge2, charge3, charge4, charge5, charge6);\n        roll = new Animation(0.2f, rolling1, rolling2, rolling3, rolling4, rolling5, rolling6);\n        unRoll = new Animation(0.2f, rolling6, rolling5, rolling4, rolling3, rolling2, rolling1);\n        ball = new Animation(1, rollingball);\n        attack = new Animation(0.0675f, attack1, attack2, attack3, attack4, attack5, attack6, attack7, attack8);\n        specAttack = new Animation(0.0675f, specAttack1, specAttack2, specAttack3, specAttack4, specAttack5, specAttack6, specAttack7, specAttack8);\n        runAttack = new Animation(0.135f, runAttack1, runAttack2, runAttack3, runAttack4);\n        runSpecAttack = new Animation(0.135f, runSpecAttack1, runSpecAttack2, runSpecAttack3, runSpecAttack4);\n        jump = new Animation(0.25f, jump1, jump2, jump3, jump4);\n        jumpAttack = new Animation(0.135f, jumpAttack1, jumpAttack2, jumpAttack3, jumpAttack4);\n        jumpSpecAttack = new Animation(0.135f, jumpSpecAttack1, jumpSpecAttack2, jumpSpecAttack3, jumpSpecAttack4);\n        fall = new Animation(0.25f, fall1, fall2, fall3, fall4);\n        fallAttack = new Animation(0.135f, fallAttack1, fallAttack2, fallAttack3, fallAttack4);\n        fallSpecAttack = new Animation(0.135f, fallSpecAttack1, fallSpecAttack2, fallSpecAttack3, fallSpecAttack4);\n        climbIdle = new Animation(0.5f, climbingIdle1, climbingIdle2);\n        climbRun = new Animation(0.2f, climbing1, climbing2);\n        climbAttack = new Animation(0.135f, climbingAttack1, climbingAttack2, climbingAttack3, climbingAttack4);\n        climbSpecAttack = new Animation(0.135f, climbingSpecAttack1, climbingSpecAttack2, climbingSpecAttack3, climbingSpecAttack4);\n        swimRun = new Animation(0.166666667f, swimming1, swimming2, swimming3, swimming4, swimming3, swimming2);\n        swimAttack = new Animation(0.135f, swimmingAttack1, swimmingAttack2, swimmingAttack3, swimmingAttack4);\n        swimSpecAttack = new Animation(0.135f, swimmingSpecAttack1, swimmingSpecAttack2, swimmingSpecAttack3, swimmingSpecAttack4);\n    }\n\n    //Creates all frames used in animations in the form of atlas regions.\n    private void createRegions() {\n        idle1 = atlas.findRegion("idle1");\n        idle2 = atlas.findRegion("idle2");\n\n        run1 = atlas.findRegion("run1");\n        run2 = atlas.findRegion("run2");\n        run3 = atlas.findRegion("run3");\n        run4 = atlas.findRegion("run4");\n        run5 = atlas.findRegion("run5");\n        run6 = atlas.findRegion("run6");\n\n        attack1 = atlas.findRegion("attack1");\n        attack2 = atlas.findRegion("attack2");\n        attack3 = atlas.findRegion("attack3");\n        attack4 = atlas.findRegion("attack4");\n        attack5 = atlas.findRegion("attack5");\n        attack6 = atlas.findRegion("attack6");\n        attack7 = atlas.findRegion("attack7");\n        attack8 = atlas.findRegion("attack8");\n\n        specAttack1 = atlas.findRegion("specattack1");\n        specAttack2 = atlas.findRegion("specattack2");\n        specAttack3 = atlas.findRegion("specattack3");\n        specAttack4 = atlas.findRegion("specattack4");\n        specAttack5 = atlas.findRegion("specattack5");\n        specAttack6 = atlas.findRegion("specattack6");\n        specAttack7 = atlas.findRegion("specattack7");\n        specAttack8 = atlas.findRegion("specattack8");\n\n        runAttack1 = atlas.findRegion("runattack1");\n        runAttack2 = atlas.findRegion("runattack2");\n        runAttack3 = atlas.findRegion("runattack3");\n        runAttack4 = atlas.findRegion("runattack4");\n\n        runSpecAttack1 = atlas.findRegion("runspecattack1");\n        runSpecAttack2 = atlas.findRegion("runspecattack2");\n        runSpecAttack3 = atlas.findRegion("runspecattack3");\n        runSpecAttack4 = atlas.findRegion("runspecattack4");\n\n        jump1 = atlas.findRegion("jump1");\n        jump2 = atlas.findRegion("jump2");\n        jump3 = atlas.findRegion("jump3");\n        jump4 = atlas.findRegion("jump4");\n\n        jumpAttack1 = atlas.findRegion("jumpattack1");\n        jumpAttack2 = atlas.findRegion("jumpattack2");\n        jumpAttack3 = atlas.findRegion("jumpattack3");\n        jumpAttack4 = atlas.findRegion("jumpattack4");\n\n        jumpSpecAttack1 = atlas.findRegion("jumpspecattack1");\n        jumpSpecAttack2 = atlas.findRegion("jumpspecattack2");\n        jumpSpecAttack3 = atlas.findRegion("jumpspecattack3");\n        jumpSpecAttack4 = atlas.findRegion("jumpspecattack4");\n\n        fall1 = atlas.findRegion("falling1");\n        fall2 = atlas.findRegion("falling2");\n        fall3 = atlas.findRegion("falling3");\n        fall4 = atlas.findRegion("falling4");\n\n        fallAttack1 = atlas.findRegion("fallingattack1");\n        fallAttack2 = atlas.findRegion("fallingattack2");\n        fallAttack3 = atlas.findRegion("fallingattack3");\n        fallAttack4 = atlas.findRegion("fallingattack4");\n\n        fallSpecAttack1 = atlas.findRegion("fallingspecattack1");\n        fallSpecAttack2 = atlas.findRegion("fallingspecattack2");\n        fallSpecAttack3 = atlas.findRegion("fallingspecattack3");\n        fallSpecAttack4 = atlas.findRegion("fallingspecattack4");\n\n        climbingIdle1 = atlas.findRegion("climbingidle1");\n        climbingIdle2 = atlas.findRegion("climbingidle2");\n        climbing1 = atlas.findRegion("climbing1");\n        climbing2 = atlas.findRegion("climbing2");\n\n        climbingAttack1 = atlas.findRegion("climbingattack1");\n        climbingAttack2 = atlas.findRegion("climbingattack2");\n        climbingAttack3 = atlas.findRegion("climbingattack3");\n        climbingAttack4 = atlas.findRegion("climbingattack4");\n\n        climbingSpecAttack1= atlas.findRegion("climbingspecattack1");\n        climbingSpecAttack2= atlas.findRegion("climbingspecattack2");\n        climbingSpecAttack3= atlas.findRegion("climbingspecattack3");\n        climbingSpecAttack4= atlas.findRegion("climbingspecattack4");\n\n        swimming1 = atlas.findRegion("swimming1");\n        swimming2 = atlas.findRegion("swimming2");\n        swimming3 = atlas.findRegion("swimming3");\n        swimming4 = atlas.findRegion("swimming4");\n\n        swimmingAttack1 = atlas.findRegion("swattack1");\n        swimmingAttack2 = atlas.findRegion("swattack2");\n        swimmingAttack3 = atlas.findRegion("swattack3");\n        swimmingAttack4 = atlas.findRegion("swattack4");\n\n        swimmingSpecAttack1 = atlas.findRegion("swspecattack1");\n        swimmingSpecAttack2 = atlas.findRegion("swspecattack2");\n        swimmingSpecAttack3 = atlas.findRegion("swspecattack3");\n        swimmingSpecAttack4 = atlas.findRegion("swspecattack4");\n\n        charge1 = atlas.findRegion("charge1");\n        charge2 = atlas.findRegion("charge2");\n        charge3 = atlas.findRegion("charge3");\n        charge4 = atlas.findRegion("charge4");\n        charge5 = atlas.findRegion("charge5");\n        charge6 = atlas.findRegion("charge6");\n\n        rolling1 = atlas.findRegion("rolling1");\n        rolling2 = atlas.findRegion("rolling2");\n        rolling3 = atlas.findRegion("rolling3");\n        rolling4 = atlas.findRegion("rolling4");\n        rolling5 = atlas.findRegion("rolling5");\n        rolling6 = atlas.findRegion("rolling6");\n\n        rollingball = atlas.findRegion("rollingball");\n    }\n\n    //This method sets the state of the pixel knight, checking whether or not the state should override the\n    //current one.\n    private void setState(int state, boolean override)\n    {\n        if ((((this.state == ATTACKING || this.state == RUNATTACKING || this.state == JUMPATTACKING ||\n                this.state == FALLATTACKING || this.state == CLATTACKING || this.state == SWATTACKING ||\n                this.state == SPECATTACKING || this.state == RUNSPECATTACKING || this.state == JUMPSPECATTACKING ||\n                this.state == FALLSPECATTACKING || this.state == CLSPECATTACKING || this.state == SWSPECATTACKING ) && attacking)\n                || this.state == CHARGING || this.state == REBOUNDING || this.state == FLYING || this.state == JUMPING ||\n                (this.state == CLIMBING || this.state == CLIDLE  && climbing) || (this.state == SWIMMING && swimming) ||\n                this.state == GLIDING || this.state == ROLLING || this.state == UNROLLING || this.state == DEAD) && !override)\n            return;\n\n        if ((override && !priorities(state)) || this.state == state)\n            return;\n\n        this.state = state;\n        animationTime = 0;\n    }\n\n    //Overrides the current state if necessary.\n    private boolean priorities(int cState) {\n        switch (cState) {\n            case FALLING:\n                if (climbing)\n                    return false;\n            case JUMPING:\n                if (climbing || state == REBOUNDING)\n                    return false;\n            case CHARGING:\n                if (swimming)\n                    return false;\n            case CLIDLE:\n                if (attacking)\n                    return false;\n            case CLIMBING:\n                if (attacking)\n                    return false;\n            case SWIMMING:\n                if (attacking)\n                    return false;\n        }\n        return true;\n    }\n\n    //This method periodically sets the frame of the pixelknight dependent on both the state and the animationTime.\n    private void chooseSprite()\n    {\n        Animation anim = idle;\n        if (state == IDLE || state == DEAD) {\n            setRegion(idle.getKeyFrame(animationTime, true));\n            anim = idle;\n        }\n        if (state == RUNNING) {\n            setRegion(run.getKeyFrame(animationTime, true));\n            anim = run;\n        }\n        if (state == RUNATTACKING) {\n            setRegion(runAttack.getKeyFrame(animationTime, true));\n            anim = runAttack;\n        }\n        if (state == RUNSPECATTACKING) {\n            setRegion(runSpecAttack.getKeyFrame(animationTime, true));\n            anim = runSpecAttack;\n        }\n        if (state == ATTACKING) {\n            setRegion(attack.getKeyFrame(animationTime, true));\n            anim = attack;\n        }\n        if (state == SPECATTACKING) {\n            setRegion(specAttack.getKeyFrame(animationTime, true));\n            anim = specAttack;\n        }\n        if (state == JUMPING) {\n            setRegion(jump.getKeyFrame(animationTime, true));\n            anim = jump;\n        }\n        if (state == JUMPATTACKING) {\n            setRegion(jumpAttack.getKeyFrame(animationTime, true));\n            anim = jumpAttack;\n        }\n        if (state == JUMPSPECATTACKING) {\n            setRegion(jumpSpecAttack.getKeyFrame(animationTime, true));\n            anim = jumpSpecAttack;\n        }\n        if (state == FALLING || state == GLIDING || state == REBOUNDING) {\n            setRegion(fall.getKeyFrame(animationTime, true));\n            anim = fall;\n        }\n        if (state == FALLATTACKING) {\n            setRegion(fallAttack.getKeyFrame(animationTime, true));\n            anim = fallAttack;\n        }\n        if (state == FALLSPECATTACKING) {\n            setRegion(fallSpecAttack.getKeyFrame(animationTime, true));\n            anim = fallSpecAttack;\n        }\n        if (state == CLIDLE) {\n            setRegion(climbIdle.getKeyFrame(animationTime, true));\n            anim = climbIdle;\n        }\n        if (state == CLIMBING) {\n            setRegion(climbRun.getKeyFrame(animationTime, true));\n            anim = climbRun;\n        }\n        if (state == CLATTACKING) {\n            setRegion(climbAttack.getKeyFrame(animationTime, true));\n            anim = climbAttack;\n        }\n        if (state == CLSPECATTACKING) {\n            setRegion(climbSpecAttack.getKeyFrame(animationTime, true));\n            anim = climbSpecAttack;\n        }\n        if (state == SWIMMING) {\n            setRegion(swimRun.getKeyFrame(animationTime, true));\n            anim = swimRun;\n        }\n        if (state == SWATTACKING) {\n            setRegion(swimAttack.getKeyFrame(animationTime, true));\n            anim = swimAttack;\n        }\n        if (state == SWSPECATTACKING) {\n            setRegion(swimSpecAttack.getKeyFrame(animationTime, true));\n            anim = swimSpecAttack;\n        }\n        if (state == CHARGING || state == FLYING) {\n            setRegion(charge.getKeyFrame(animationTime, true));\n            anim = charge;\n        }\n        if (state == ROLLING && stun) {\n            setRegion(roll.getKeyFrame(animationTime, true));\n            anim = roll;\n        }\n        if (state == ROLLING && !stun) {\n            setRegion(rollingball);\n            anim = ball;\n        }\n        if (state == UNROLLING && stun) {\n            setRegion(unRoll.getKeyFrame(animationTime, true));\n            anim = unRoll;\n        }\n        setSize(anim.getKeyFrame(animationTime, true).getRegionWidth() * 4 / 5, anim.getKeyFrame(animationTime, true).getRegionHeight() * 4 / 5);\n    }\n\n    //This detects whether the pixel knight has collided physically with an enemy and applies that enemy\'s effects.\n    private void detectEnemies() {\n        for (Creature creature : screen.creatures)\n        {\n            if (invulnerability) return;\n\n            else if (creature.detectCollision() && !creature.dying) {\n                loseHealth(1);\n                creature.effects();\n            }\n        }\n    }\n\n    //Detects whether any part of the knight is within the bounds of a spiker, or a spiked block.\n    private void detectSpikers() {\n        for (float x = getX(); x &lt; getX() + getWidth(); x ++)\n            for (float y = getY(); y &lt; getY() + getHeight(); y ++)\n                if (isCellSpike(x, y))\n                    loseHealth(1);\n\n        for (Destructible destructible : screen.destructibles)\n            if (destructible instanceof Spiker) {\n                Spiker spiker = (Spiker) destructible;\n                for (float i = getPosX(); i &lt; getPosX() + getAttackingWidth(); i ++) {\n                    for (float o = getY(); o &lt; getY() + getHeight(); o ++) {\n                        if (spiker.checkCollisionSpikes(i, o)) {\n                            loseHealth(1);\n                            return;\n                        }\n                    }\n                }\n            }\n        for (Destructible destructible : screen.destructibles)\n            if (destructible instanceof SpikeBlock) {\n                SpikeBlock block = (SpikeBlock) destructible;\n                for (float x = getX(); x &lt; getX() + getWidth(); x ++) {\n                    if (x &gt; block.getX() && x &lt; block.getX() + block.getWidth() && getY() + getHeight() &gt; block.getY()\n                            && getY() + getHeight() &lt; block.getY() + block.getHeight() && block.getDirection() == 0)\n                        loseHealth(1);\n                    if (x &gt; block.getX() && x &lt; block.getX() + block.getWidth() && getY() &lt; block.getY() + block.getHeight()\n                            && getY() &gt; block.getY() && block.getDirection() == 3)\n                        loseHealth(1);\n                }\n                for (float y = getY(); y &lt; getY() + getHeight(); y ++) {\n                    if (y &gt; block.getY() && y &lt; block.getY() + block.getHeight() && getX() + getWidth() &gt; block.getX()\n                            && getX() + getWidth() &lt; block.getX() + block.getWidth() && block.getDirection() == 2)\n                        loseHealth(1);\n                    if (y &gt; block.getY() && y &lt; block.getY() + block.getHeight() && getX() &gt; block.getX()\n                            && getX() &lt; block.getX() + block.getWidth() && block.getDirection() == 2)\n                        loseHealth(1);\n                }\n            }\n\n    }\n\n    //Detects whether the pixel knight has collided with any gems, and adds that gem\'s value to the player\'s amount.\n    private void detectGems() {\n        for (Gem gem : screen.gems)\n        {\n            if (gem.detectCollision() && gem.state != 1) {\n                Array&lt;Sound&gt; sounds = new Array&lt;Sound&gt;();\n                sounds.addAll(gemS1, gemS2, gemS3);\n                playRandomSound(sounds);\n                if (gem instanceof Emerald)\n                    gems ++;\n                if (gem instanceof Sapphire)\n                    gems += 5;\n                if (gem instanceof Ruby)\n                    gems += 20;\n                if (gem instanceof Diamond)\n                    gems += 99;\n                if (gems &gt; 99) {\n                    lives ++;\n                    gems -= 99;\n                }\n                screen.gems.removeValue(gem, false);\n                gem.setState(1);\n            }\n        }\n    }\n\n    //Detects whether any part of the pixel knight is inside a projectile.\n    private void detectBalls() {\n        for (Projectile projectile : screen.projectiles) {\n            for (float x = getPosX(); x &lt; getPosX() + getWidth(); x ++)\n                for (float y = getY(); y &lt; getY() + getHeight(); y ++) {\n                    float distanceX = Math.abs(x - projectile.getX());\n                    float distanceY = Math.abs(y - projectile.getY());\n                    if (distanceX &lt; projectile.getWidth() && distanceY &lt; projectile.getHeight() && !invulnerability && projectile.enemy && projectile.lethal) {\n                        loseHealth(1);\n                        projectile.effects(this);\n                    }\n                }\n        }\n    }\n\n    //If the pixelknight is above the platform and within the platform bounds, this method sets the position of the\n    //knight atop the platform.\n    private boolean detectPlatforms() {\n        for (Platform platform : screen.platforms) {\n            if (platform.detectCollision(this) && !transparent && !unlatchable && vel.y &lt; 0) {\n                setY(platform.getY() + platform.getHeight());\n                vel.y = -1.1f;\n\n                if (platform.vel.x != 0) {\n                    vel.x = platform.vel.x;\n                    pX = true;\n                }\n                else pX = false;\n                if (state == REBOUNDING) {\n                    setState(IDLE, true);\n                    vel.x = 0;\n                    vel.y = 0;\n                    unStun();\n                }\n                if (state == FLYING) {\n                    brake();\n                    vel.y = 0;\n                }\n                if (state == CLIMBING || state == FALLING)\n                    setState(IDLE, true);\n                onPlatform = true;\n                dJumpable = true;\n                grounded = true;\n                glidable = true;\n                transparent = false;\n                return true;\n            }\n        }\n            if (onPlatform && state != CHARGING && state != FLYING) {\n                vel.y = 0;\n                vel.x = 0;\n                onPlatform = false;\n            }\n        return false;\n    }\n\n    //If the pixel knight is attacking, this method sets the knight\'s width to be a bit lower than the actual attack frame,\n    //so that the knight does not collide with objects or enemies when attacking with his sword.\n    public float getAttackingWidth() {\n        if (!attacking)\n            return getWidth();\n        else if (state == ATTACKING || state == SPECATTACKING || state == RUNATTACKING || state == RUNSPECATTACKING)\n            return run1.getRegionWidth();\n        else if (state == JUMPATTACKING || state == JUMPSPECATTACKING)\n            return jump1.getRegionWidth();\n        else if (state == FALLATTACKING || state == FALLSPECATTACKING)\n            return fall1.getRegionWidth();\n        else if (state == CLATTACKING || state == CLSPECATTACKING)\n            return climbing1.getRegionWidth();\n        return 0;\n    }\n\n    //These methods detect whether the pixelknight is INSIDE of a climbable or swimmable cell\n    public boolean detectClimbing(float x, float y) {\n        for (float step = 0; step &lt; getWidth() - 5f; step += layer.getTileWidth() / 16)\n            if (isCellClimbable(x + step, y)) {\n                return true;\n            }\n            return false;\n    }\n\n    public boolean detectSwimming(float x, float y) {\n        for (float step = 0; step &lt; getWidth() - 5f; step += layer.getTileWidth() / 16)\n            if (isCellSwimmable(x + step, y)) {\n                if (!swimming && vel.y &lt; 0)\n                    vel.y = -0.8f;\n                return true;\n            }\n        return false;\n    }\n\n    //This method determines whether the pixelknight can continue climbing in a certain direction.\n    public void canClimb() {\n        boolean detected = false;\n        for (float step = 0; step &lt; getWidth(); step += layer.getTileWidth() / 16)\n            if (isCellClimbable(getPosX() + step, getY() + 10)) {\n                climbable = true;\n                detected = true;\n            }\n        if (!detected) {\n            climbable = false;\n            climbing = false;\n        }\n    }\n\n    //Causes the pixelknight to rush forward and sets its state to charge.\n    private void charge() {\n        attackS1.play((float) storage.soundE / 100);\n        cooldown = true;\n        stun = true;\n        dJumpable = false;\n        Timer timer = new Timer();\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                cooldown = false;\n            }\n        }, 5);\n        SVX(5);\n        setState(CHARGING, true);\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                if (state == CHARGING) {\n                    brake();\n                    vel.y = 0;\n                }\n            }\n        }, 0.5f);\n        timer.start();\n    }\n\n    //Slowly reduces the speed of the knight after charging for a time.\n    private void brake() {\n        Timer timer = new Timer();\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                if ((state == CHARGING || state == FLYING) && grounded) {\n                    vel.x = vel.x / 2;\n                }\n            }\n        }, 0.1f);\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                if ((state == CHARGING || state == FLYING) && grounded) {\n                    vel.x = vel.x / 2;\n                }\n            }\n        }, 0.2f);\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                if ((state == CHARGING || state == FLYING) && grounded) {\n                    vel.x = vel.x / 2;\n                }\n            }\n        }, 0.3f);\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                if ((state == CHARGING || state == FLYING) && grounded) {\n                    unStun();\n                    setState(IDLE, true);\n                }\n            }\n        }, 0.4f);\n        timer.start();\n    }\n\n    //This method handles all functions associated with the knight\'s rolling ability.\n    private void roll() {\n        if (Gdx.input.isKeyPressed(storage.moveLeft) && vel.x &gt; 0)\n            vel.x -= 0.05f;\n        if (Gdx.input.isKeyPressed(storage.moveRight) && vel.x &lt; 0)\n            vel.x += 0.05f;\n        if (!Gdx.input.isKeyPressed(storage.moveLeft) && !Gdx.input.isKeyPressed(storage.moveRight)) {\n            if (vel.x &gt; 0)\n                vel.x -= 0.01f;\n            if (vel.x &lt; 0)\n                vel.x += 0.01f;\n        }\n        if (vel.x &gt; 4)\n            vel.x = 4;\n        if (vel.x &lt; -4)\n            vel.x = -4;\n\n        vel.x += acel.x;\n        setOriginCenter();\n        setRotation(getRotation() - 10 * dir);\n        rMud.setDir(dir);\n        if (vel.x == 0)\n            setRotation(0);\n        if (vel.x == 0 || !grounded || onSlopeLeft || onSlopeRight)\n            screen.effects.removeValue(rMud, false);\n        else if (!screen.effects.contains(rMud, false))\n            screen.effects.add(rMud);\n\n    }\n\n    //Rebounds if the pixel knight hitss an object.\n    private void rebound() {\n        hurtS1.play((float) storage.soundE / 100);\n        setState(REBOUNDING, true);\n        setX(getPosX() - 5 * dir);\n        vel.x = -dir;\n        vel.y = 1.5f;\n    }\n\n    //This method activates if the pixel knight is hurt, by turning him red and white periodically.\n    private void flickerSprite() {\n        if (flickering) return;\n        flickering = true;\n        setColor(0, 0, 0, 0);\n        Timer timer = new Timer();\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                setColor(Color.RED);\n            }\n        }, 0.2f);\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                setColor(0, 0, 0, 0);\n            }\n        }, 0.4f);\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                setColor(Color.RED);\n            }\n        }, 0.6f);\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                setColor(0, 0, 0, 0);\n            }\n        }, 0.8f);\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                setColor(Color.WHITE);\n                flickering = false;\n            }\n        }, 1);\n        timer.start();\n\n\n    }\n\n    //Kills and removes the pixel knight instance from the game for a short time.\n    public void death() {\n        if (state == DEAD)\n            return;\n        death.play((float) storage.soundE / 100);\n        depower();\n        setState(DEAD, true);\n        stun = true;\n        vel.x = 0;\n        vel.y = 0;\n        lives --;\n        if (lives == 0) {\n            screen.gameOver();\n            lives = 1;\n        }\n        setColor(Color.BLACK);\n        Timer timer = new Timer();\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                screen.knightDeath();\n                setColor(Color.WHITE);\n                setState(IDLE, true);\n                health = 10;\n                screen.healthUI.update(health);\n                unStun();\n            }\n        }, 1);\n        timer.start();\n    }\n\n    //This method chooses the special power based on what the pixel knight has\n    private void specDecider(float x, float y) {\n        switch (power) {\n            case NOTHING:\n                specAttack();\n                break;\n            case MUD:\n                powers.throwMud(x, y);\n                throwMud.play((float) storage.soundE / 100);\n                break;\n            case CHARGE:\n                if (!cooldown && (state == IDLE || state == RUNNING || state == JUMPING))\n                    charge();\n                break;\n            case ROLL:\n                if (swimming || stun || climbing)\n                    break;\n                rolling = !rolling;\n                acel.x = 0;\n                vel.x = 0;\n                stun = true;\n                if (rolling) {\n                    rMud = new RollingMud(getPosX(), getY(), screen.atlases.get(8), layer, screen, this, dir);\n                    setState(ROLLING, true);\n                }\n                else {\n                    setRotation(0);\n                    rMud.decaying();\n                    screen.effects.removeValue(rMud, false);\n                    setState(UNROLLING, true);\n                    setOrigin(originX, originY);\n                }\n                Timer timer = new Timer();\n                timer.scheduleTask(new Timer.Task() {\n                    @Override\n                    public void run() {\n                        unStun();\n                        if (!screen.effects.contains(rMud, false) && rolling)\n                            screen.effects.add(rMud);\n                        if (!rolling)\n                            setState(IDLE, true);\n                    }\n                }, 1);\n                timer.start();\n                break;\n        }\n    }\n\n    //These methods hurt enemies within a certain distance of the pixel knight depending on his direction.\n    private void attack() {\n        if (attacking || stun)\n            return;\n        attacking = true;\n\n        Timer attackTimer = new Timer();\n        attackTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                if (attacking) {\n                    if (attackDir == LEFT)\n                        setX(getX() + 7);\n                    attacking = false;\n                    attackDir = dir;\n                    update(Gdx.graphics.getDeltaTime());\n                }\n            }\n        }, 0.5f);\n        attackTimer.start();\n\n        if (state == CLIDLE || state == CLIMBING)\n            setState(CLATTACKING, true);\n        else if (state == SWIMMING)\n            setState(SWATTACKING, true);\n        else if (state == RUNNING)\n            setState(RUNATTACKING, true);\n        else if (state == JUMPING)\n            setState(JUMPATTACKING, true);\n        else if (state == FALLING)\n            setState(FALLATTACKING, true);\n        else setState(ATTACKING, true);\n\n        swAttack();\n    }\n\n    private void specAttack() {\n        if (attacking)\n            return;\n        attacking = true;\n\n        Timer attackTimer = new Timer();\n        attackTimer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                if (attacking) {\n                    if (attackDir == LEFT)\n                        setX(getX() + 7);\n                    attacking = false;\n                    attackDir = dir;\n                    update(Gdx.graphics.getDeltaTime());\n                }\n            }\n        }, 0.5f);\n        attackTimer.start();\n\n        if (state == RUNNING)\n            setState(RUNSPECATTACKING, true);\n        else if (state == JUMPING)\n            setState(JUMPSPECATTACKING, true);\n        else if (state == FALLING)\n            setState(FALLSPECATTACKING, true);\n        else if (state == CLIDLE || state == CLIMBING)\n            setState(CLSPECATTACKING, true);\n        else if (state == SWIMMING)\n            setState(SWSPECATTACKING, true);\n        else setState(SPECATTACKING, true);\n\n        specSwAttack();\n    }\n\n    private void swAttack() {\n        Array&lt;Sound&gt; sounds = new Array&lt;Sound&gt;();\n        sounds.addAll(attackS1, attackS2, attackS3);\n        playRandomSound(sounds);\n\n        if (attackDir == LEFT)\n            setX(getX() - 7);\n\n        for (final Creature creature : screen.creatures)\n        {\n            Timer timer = new Timer();\n            timer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    if (creature.isHit(attackDir, 8) && creature.vulnerable(vel) && attacking)\n                        creature.damage(dmg);\n                }\n            }, 0.405f);\n            timer.start();\n        }\n        for (final Destructible destructible : screen.destructibles)\n        {\n            final PixelKnight pk = this;\n            Timer timer = new Timer();\n            timer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    if (destructible.isHit(attackDir, 8) && attacking)\n                        destructible.explode(pk);\n                }\n            }, 0.405f);\n            timer.start();\n        }\n    }\n\n    private void specSwAttack() {\n        Array&lt;Sound&gt; sounds = new Array&lt;Sound&gt;();\n        sounds.addAll(attackS1, attackS2, attackS3);\n        playRandomSound(sounds);\n\n        if (attackDir == LEFT)\n            setX(getX() - 7);\n\n        for (final Creature creature : screen.creatures)\n        {\n            Timer timer = new Timer();\n            timer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    if (creature.isHit(attackDir, 8) && creature.vulnerable(vel) && attacking)\n                        creature.damage(dmg);\n                    if (creature.health == 0) {\n                        absorb(creature);\n                    }\n                }\n            }, 0.405f);\n        }\n        for (final Destructible destructible : screen.destructibles)\n        {\n            final PixelKnight pk = this;\n            Timer timer = new Timer();\n            timer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    if (destructible.isHit(attackDir, 8) && attacking)\n                        destructible.explode(pk);\n                }\n            }, 0.405f);\n            timer.start();\n        }\n    }\n\n    //Subtracts health from the pixel knight.\n    public void loseHealth(int h) {\n        if (!invulnerability) {\n            Array&lt;Sound&gt; sounds = new Array&lt;Sound&gt;();\n            sounds.addAll(hurtS1, hurtS2, hurtS3);\n            playRandomSound(sounds);\n\n            health -= (h - armor);\n            screen.healthUI.update(health);\n            flickerSprite();\n            invulnerability = true;\n            Timer timer = new Timer();\n            timer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    invulnerability = false;\n                }\n            }, 1.2f);\n            timer.start();\n            if (state == GLIDING) {\n                glidable = false;\n                setState(FALLING, true);\n            }\n            if (health == 0)\n                death();\n        }\n    }\n\n    //This creates a new power for the pixel knight based on the creature killed.\n    private void absorb(Creature creature) {\n        if (creature instanceof MudSlinger)\n            power = MUD;\n        if (creature instanceof Charger)\n            power = CHARGE;\n        if (creature instanceof Bat)\n            power = GLIDE;\n        if (creature instanceof Jumper)\n            power = HJUMP;\n        if (creature instanceof Roller)\n            power = ROLL;\n        if (power != NOTHING) {\n            Array&lt;Sound&gt; sounds = new Array&lt;Sound&gt;();\n            sounds.addAll(pwrUpS1, pwrUpS2, pwrUpS3);\n            playRandomSound(sounds);\n            setColor(Color.CYAN);\n            Timer timer = new Timer();\n            timer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    setColor(Color.WHITE);\n                }\n            }, 0.8f);\n            timer.start();\n        }\n        screen.powerUI.update(power);\n    }\n\n    //Modifies the velocity of the knight for a short time.\n    public void modifyVelocity(float x, float y, float time) {\n        vel.x = x;\n        vel.y = y;\n        stun = true;\n        Timer timer = new Timer();\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                unStun();\n            }\n        }, time);\n        timer.start();\n    }\n\n    public void setModifier(float modX, float modY, float time) {\n        modifierX = modX;\n        modifierY = modY;\n        Timer timer = new Timer();\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                resetModifier();\n            }\n        }, time);\n    }\n\n    //Sets the velocity of the pixelknight depending on the modifier.\n    private void SVX(float x) {\n        vel.x = x * dir - modifierX * dir;\n        if (vel.x &lt; 0 && dir == RIGHT)\n            vel.x = 0;\n        else if (vel.x &gt; 0 && dir == LEFT)\n            vel.x = 0;\n    }\n\n    private void SVY(float y) {\n        vel.y = y - modifierY;\n        if (vel.y &lt; 0 && y &gt; 0)\n            vel.y = 0;\n        if (vel.y &gt; 0 && y &lt; 0)\n            vel.y = 0;\n    }\n\n    private void resetModifier() {\n        modifierX = 0;\n        modifierY = 0;\n    }\n\n    private void unStun() {\n        stun = false;\n    }\n\n    //Adds and receives the slope.\n    public void addSlope(boolean right, RectangleMapObject rMap)\n    {\n        if (right)\n        rSlopes.add(rMap);\n        else lSlopes.add(rMap);\n    }\n\n    public Array&lt;RectangleMapObject&gt; getSlope(boolean right)\n    {\n        if (right)\n            return rSlopes;\n        return lSlopes;\n    }\n\n    //This periodically handles swimming, rolling, and charging states.\n    private void handleEvents() {\n        swimming = detectSwimming(getPosX(), getY());\n        if (swimming && rolling) {\n            rolling = false;\n            vel.x = 0;\n            acel.x = 0;\n            setRotation(0);\n            rMud.decaying();\n            screen.effects.removeValue(rMud, false);\n        }\n\n        if (!climbing && !swimming && state != GLIDING)\n            vel.y -= GRAVITY;\n        if (vel.y &lt; -2.5f) vel.y = -2.5f;\n\n        if (rolling && !stun)\n            roll();\n\n        if (state == CHARGING && !grounded) {\n            setState(FLYING, true);\n        }\n\n        if (!detectPlatforms() && !collidesDestructibleBottom())\n            pX = false;\n    }\n\n    private void updateTime(float deltaTime) {\n        animationTime += deltaTime;\n    }\n\n    //Removes the rolling power of the knight to prevent issues arising from the rolling frames and characteristics.\n    private void depower() {\n        if (rolling) {\n            rolling = false;\n            setRotation(0);\n            vel.x = 0;\n            acel.x = 0;\n            if (rMud != null) {\n                rMud.decaying();\n                screen.effects.removeValue(rMud, false);\n            }\n            stun = true;\n            setState(UNROLLING, true);\n            setOrigin(originX, originY);\n            Timer timer = new Timer();\n            timer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    unStun();\n                    setState(IDLE, true);\n                }\n            }, 1);\n            timer.start();\n        }\n    }\n\n    //If the pixel knight is attacking, it\'s scale becomes reversed to preserve its width. This causes collisions\n    //to become displaced, which is fixed by this method.\n    public float getPosX() {\n        if (attackDir == LEFT && attacking)\n            return getX() + 7;\n        else\n            return getX();\n    }\n\n    //Plays a random sound based on the array given.\n    private void playRandomSound(Array&lt;Sound&gt; sounds) {\n        int random = (int) (Math.random() * sounds.size);\n        sounds.get(random).play((float) storage.soundE / 100);\n    }\n\n    public boolean isRolling() {\n        return rolling;\n    }\n\n    public int getDirection() {\n        return dir;\n    }\n\n    public int getState() {\n        return state;\n    }\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},'package com.inoculates.knight.projectiles;\n\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.audio.Sound;\nimport com.badlogic.gdx.graphics.g2d.Animation;\nimport com.badlogic.gdx.graphics.g2d.Batch;\nimport com.badlogic.gdx.graphics.g2d.TextureAtlas;\nimport com.badlogic.gdx.maps.tiled.TiledMapTileLayer;\nimport com.badlogic.gdx.utils.Timer;\nimport com.inoculates.knight.enemies.Creature;\nimport com.inoculates.knight.pixelknight.PixelKnight;\nimport com.inoculates.knight.screens.GameScreen;\n\npublic class Mud extends Projectile {\n    float forceX;\n    float forceY;\n    float offsetX;\n    float offsetY;\n\n    Animation launch;\n    Animation fly;\n    Animation explode;\n\n    TextureAtlas.AtlasRegion launching = atlas.findRegion("launching");\n    TextureAtlas.AtlasRegion flying = atlas.findRegion("flying");\n    TextureAtlas.AtlasRegion exploding1 = atlas.findRegion("exploding1");\n    TextureAtlas.AtlasRegion exploding2 = atlas.findRegion("exploding2");\n    TextureAtlas.AtlasRegion exploding3 = atlas.findRegion("exploding3");\n\n    private Sound explodeS = Gdx.audio.newSound(Gdx.files.internal("data/sounds/Explosion5.wav"));\n\n    public Mud(float sX, float sY, float oX, float oY, float fX, float fY, TextureAtlas atlas,\n               TiledMapTileLayer layer, GameScreen screen, boolean enemy) {\n        super(layer, atlas, screen, sX, sY, 0);\n        createAnimations();\n        setX(sX);\n        setY(sY);\n        offsetX = oX;\n        offsetY = oY;\n        forceX = fX;\n        forceY = fY;\n        lethal = true;\n        launch();\n        this.enemy = enemy;\n        setState(LAUNCHING);\n        setRegion(launch.getKeyFrame(animationTime, true));\n        Timer timer = new Timer();\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                setState(FLYING);\n            }\n        }, 0.4f);\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                decaying();\n            }\n        }, 5);\n        timer.start();\n        setSize(10, 8);\n    }\n\n    public void draw(Batch batch) {\n        super.draw(batch);\n        update();\n    }\n\n    //The mud is constantly affected by gravity and will arc downwards.\n    protected void update()\n    {\n        if (state != DECAYING && !swimming) {\n            vel.y -= GRAVITY;\n            if (vel.y < -3.5f)\n                vel.y = -3.5f;\n        }\n        else if (swimming && state != DECAYING) {\n            vel.y -= GRAVITY / 10;\n            if (vel.y < -1.6f)\n                vel.y = -1.6f;\n        }\n    }\n\n    protected void tryMove()\n    {\n        float oldX = getX(), oldY = getY();\n        boolean collisionX = false, collisionY = false;\n\n        setX(getX() + vel.x);\n\n        if (vel.x < 0)\n            collisionX = collidesLeft();\n\n        else if (vel.x > 0)\n            collisionX = collidesRight();\n\n        if (collisionX) {\n            setX(oldX);\n            vel.x = 0;\n            if (state != DECAYING) decaying();\n        }\n\n        setY(getY() + vel.y);\n\n        if (vel.y < 0) {\n            collisionY = collidesBottom();\n        } else if (vel.y > 0)\n            collisionY = collidesTop();\n\n        if (collisionY || collidesSlopeRight() || collidesSlopeLeft() || collidesPlatform() || detectPlatforms()) {\n            setY(oldY);\n            vel.y = 0;\n            if (state != DECAYING) decaying();\n        }\n    }\n\n    //Sets the velocities to the direction multiplied by the force.\n    public void launch() {\n        vel.x = offsetX * forceX;\n        vel.y = Math.signum(offsetY) * forceY;\n    }\n\n    protected void chooseSprite()\n        {\n            flipSprite();\n\n            if (state == LAUNCHING)\n                setRegion(launch.getKeyFrame(animationTime, true));\n\n            if (state == FLYING)\n                setRegion(fly.getKeyFrame(animationTime, true));\n\n            if (state == DECAYING) {\n                setRegion(explode.getKeyFrame(animationTime, false));\n            }\n        }\n\n    private void createAnimations() {\n        launch = new Animation(0.2f, launching);\n        fly = new Animation(0.2f, flying);\n        explode = new Animation(0.1f, exploding1, exploding2, exploding3);\n    }\n\n    //Creates the exploding animation and the sound effect.\n    protected void decaying() {\n        if (screen.projectiles.contains(this, false))\n            explodeS.play((float) screen.storage.soundE / 100);\n        animationTime = 0;\n        setState(DECAYING);\n        lethal = false;\n        vel.x = 0;\n        vel.y = 0;\n        Timer timer = new Timer();\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                destroy();\n            }\n        }, 0.35f);\n        timer.start();\n    }\n\n    protected void destroy() {\n        setState(DESTROYED);\n    }\n\n    public void effects(Object object) {\n        decaying();\n        if (object instanceof PixelKnight)\n        screen.pKnight.setModifier(0.5f, 0.5f, 1.5f);\n        if (object instanceof Creature) {\n            Creature creature = (Creature) object;\n            creature.damage(1);\n        }\n    }\n\n    private void flipSprite() {\n        if (vel.x < 0) {\n            if (launching.isFlipX())\n                launching.flip(true, false);\n            if (flying.isFlipX())\n                flying.flip(true, false);\n            if (exploding1.isFlipX())\n                exploding1.flip(true, false);\n            if (exploding2.isFlipX())\n                exploding2.flip(true, false);\n            if (exploding3.isFlipX())\n                exploding3.flip(true, false);\n        }\n        if (vel.x > 0) {\n            if (!launching.isFlipX())\n                launching.flip(true, false);\n            if (!flying.isFlipX())\n                flying.flip(true, false);\n            if (!exploding1.isFlipX())\n                exploding1.flip(true, false);\n            if (!exploding2.isFlipX())\n                exploding2.flip(true, false);\n            if (!exploding3.isFlipX())\n                exploding3.flip(true, false);\n        }\n    }\n\n    protected boolean priorities(int cState) {\n        return !((state == DECAYING || state == DESTROYED) && cState != DESTROYED);\n    }\n\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-java"},'package com.inoculates.knight.enemies;\n\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.audio.Sound;\nimport com.badlogic.gdx.graphics.g2d.Animation;\nimport com.badlogic.gdx.graphics.g2d.Batch;\nimport com.badlogic.gdx.graphics.g2d.TextureAtlas;\nimport com.badlogic.gdx.maps.tiled.TiledMap;\nimport com.badlogic.gdx.maps.tiled.TiledMapTileLayer;\nimport com.badlogic.gdx.math.Vector2;\nimport com.badlogic.gdx.utils.Timer;\nimport com.inoculates.knight.projectiles.Projectile;\nimport com.inoculates.knight.screens.GameScreen;\n\npublic class Charger extends Creature {\n    static final int MOVING = 4;\n    static final int CHARGING = 5;\n    static final int READYING = 6;\n    static final int REBOUNDING = 7;\n\n    boolean cooldown = false;\n\n    Animation idle;\n    Animation run;\n\n    TextureAtlas.AtlasRegion idle1 = atlas.findRegion("idle1");\n    TextureAtlas.AtlasRegion run1 = atlas.findRegion("run1");\n    TextureAtlas.AtlasRegion run2 = atlas.findRegion("run2");\n    TextureAtlas.AtlasRegion run3 = atlas.findRegion("run3");\n    TextureAtlas.AtlasRegion run4 = atlas.findRegion("run4");\n    TextureAtlas.AtlasRegion run5 = atlas.findRegion("run5");\n    TextureAtlas.AtlasRegion run6 = atlas.findRegion("run6");\n    TextureAtlas.AtlasRegion run7 = atlas.findRegion("run7");\n    TextureAtlas.AtlasRegion run8 = atlas.findRegion("run8");\n\n    private Sound chargeS = Gdx.audio.newSound(Gdx.files.internal("data/sounds/Attack3.wav"));\n    private Sound reboundS = Gdx.audio.newSound(Gdx.files.internal("data/sounds/Hit_Hurt3.wav"));\n\n    public Charger(GameScreen screen, TextureAtlas atlas, TiledMapTileLayer layer, TiledMap map, float sX, float sY) {\n        super(screen, atlas, layer, map, 2, 0, true, false, sX, sY);\n        state = IDLE;\n        setX(sX);\n        setY(sY);\n        createAnimations();\n        setSize(19, 30);\n        setRegion(idle.getKeyFrame(animationTime, true));\n    }\n\n    public void draw(Batch batch) {\n        update();\n        super.draw(batch);\n    }\n\n    //Moves the charger after three seconds for three seconds, and then makes it stand still for three seconds.\n    private void update() {\n        if (vel.x == 0 && vel.y == 0 && state != READYING)\n            setState(IDLE);\n        if (time > 3 && time < 3.05f && state != CHARGING && state != REBOUNDING && state != READYING) {\n            movement();\n            setState(MOVING);\n        }\n        if (time > 6 && state != CHARGING && state != REBOUNDING && state != READYING) {\n            setState(IDLE);\n            vel.x = 0;\n            time = 0;\n        }\n    }\n\n    protected void tryMove() {\n        collidesSlopeLeft();\n        collidesSlopeRight();\n\n        if (state != CHARGING && state != READYING && state != REBOUNDING && !cooldown )\n            checkCharge();\n\n        float oldX = getX(), oldY = getY();\n        boolean collisionX = false, collisionY = false;\n        setX(getX() + vel.x);\n        if (vel.x < 0) {\n            collisionX = collidesLeft();\n            if (collidesLeft())\n                dir = RIGHT;\n        } else if (vel.x > 0) {\n            collisionX = collidesRight();\n            if (collidesRight()) {\n                dir = LEFT;\n            }\n        }\n\n        if (collisionX && !onSlopeRight && !onSlopeLeft) {\n            if (state == CHARGING)\n            rebound();\n            else vel.x = 0;\n            setX(oldX);\n        }\n\n        setY(getY() + vel.y);\n        if (vel.y < 0) {\n            collisionY = collidesBottom();\n        } else if (vel.y > 0)\n            collisionY = collidesTop();\n\n        if (collisionY) {\n            if (state == REBOUNDING) {\n                setState(IDLE);\n                vel.x = 0;\n                vel.y = 0;\n                time = 0;\n            }\n            setY(oldY);\n            vel.y = 0;\n        }\n    }\n\n    //Sets the velocity of the charger depending on its direction.\n    private void movement() {\n        if (state == CHARGING || state == READYING || state == REBOUNDING) return;\n        int random = (int) (Math.random() * 2);\n        if (random == 0)\n            dir = LEFT;\n        if (random == 1)\n            dir = RIGHT;\n\n        checkCollision();\n\n        if (detectCliffRight())\n            dir = LEFT;\n        if (detectCliffLeft())\n            dir = RIGHT;\n\n        if (dir == RIGHT)\n            SVX(0.2f);\n        if (dir == LEFT)\n            SVX(-0.2f);\n    }\n\n    protected void chooseSprite() {\n        if (state == IDLE)\n            setRegion(idle.getKeyFrame(animationTime, true));\n        if (state == MOVING)\n            setRegion(run.getKeyFrame(animationTime, true));\n        if (state == CHARGING)\n            setRegion(run.getKeyFrame(animationTime, true));\n        if (state == READYING)\n            setRegion(idle.getKeyFrame(animationTime, true));\n    }\n\n    private void createAnimations() {\n        idle = new Animation(0.2f, idle1);\n        run = new Animation(0.125f, run1, run2, run3, run4, run5, run6, run7, run8);\n    }\n\n    private void checkCollision() {\n        for (float i = getX(); i < getX() + 20; i += layer.getTileHeight()) {\n            if (isCellBlocked(i, getY()))\n                dir = LEFT;\n        }\n        for (float i = getX(); i > getX() - 20; i -= layer.getTileHeight()) {\n            if (isCellBlocked(i, getY()))\n                dir = RIGHT;\n        }\n    }\n\n    //Checks if the knight is within his sight of vision.\n    private void checkCharge() {\n        final float dX, dY;\n        dX = Math.abs(getX() - screen.pKnight.getX());\n        dY = Math.abs(getY() - screen.pKnight.getY());\n        boolean fCorr = (screen.pKnight.getX() - getX() > 0 && dir == RIGHT) || (screen.pKnight.getX() - getX() < 0 && dir == LEFT);\n        if (dX < screen.camera.viewportWidth / 2 && (dY < 1 || (onSlopeLeft || onSlopeRight || screen.pKnight.onSlopeLeft || screen.pKnight.onSlopeRight)) && fCorr) {\n            cooldown = true;\n            setState(READYING);\n            vel.x = 0;\n            Timer timer = new Timer();\n            timer.scheduleTask(new Timer.Task() {\n                @Override\n                public void run() {\n                    charge();\n                }\n            }, 0.8f);\n            timer.start();\n        }\n    }\n\n    //Makes the charger charge by increasing its x velocity.\n    private void charge() {\n        chargeS.play((float) screen.storage.soundE / 100);\n        Timer timer = new Timer();\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                cooldown = false;\n            }\n        }, 5);\n        timer.start();\n        SVX(5 * dir);\n        setState(CHARGING);\n        Timer timer2 = new Timer();\n        timer2.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                if (state != IDLE && state != REBOUNDING)\n                    brake();\n                time = 0;\n            }\n        }, 0.75f);\n        timer2.start();\n    }\n\n    private void brake() {\n        Timer timer = new Timer();\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                if ((state == CHARGING && !collidesBottom())) {\n                    vel.x = vel.x / 2;\n                }\n            }\n        }, 0.1f);\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                if ((state == CHARGING && !collidesBottom())) {\n                    vel.x = vel.x / 2;\n                }\n            }\n        }, 0.2f);\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                if ((state == CHARGING && !collidesBottom())) {\n                    vel.x = vel.x / 2;\n                }\n            }\n        }, 0.3f);\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                if ((state == CHARGING && !collidesBottom())) {\n                    vel.x = 0;\n                    setState(IDLE);\n                }\n            }\n        }, 0.4f);\n        timer.start();\n    }\n\n    protected boolean priorities(int cState) {\n        return true;\n    }\n\n    protected void dying() {\n        setState(DYING);\n        Timer timer = new Timer();\n        timer.scheduleTask(new Timer.Task() {\n            @Override\n            public void run() {\n                death();\n            }\n        }, 0.2f);\n        timer.start();\n    }\n\n    public void effects() {\n        if (state == CHARGING)\n        screen.pKnight.modifyVelocity(2 * dir, 3, 1);\n    }\n\n    protected void flipSprite() {\n        if (dir == LEFT)\n            setFlip(false, false);\n        else\n            setFlip(true, false);\n    }\n\n    //The charger is only vulnerable if struck from behind.\n    public boolean vulnerable(Object object) {\n        if (object instanceof Vector2) {\n            if (dir == pK.getDirection())\n                return true;\n        }\n        if (object instanceof Projectile) {\n            Projectile projectile = (Projectile) object;\n            if ((dir == RIGHT && projectile.vel.x > 0) || (dir == LEFT && projectile.vel.x < 0))\n            return true;\n        }\n        return false;\n    }\n\n    public void rebound() {\n        reboundS.play((float) screen.storage.soundE / 100);\n        setState(REBOUNDING);\n        vel.x = dir;\n        vel.y = 1.5f;\n    }\n\n    protected boolean harmful() {\n        return true;\n    }\n\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-c++"},'#include <SFML/Graphics.hpp>\n\n#include "ResourcePath.hpp"\n#include "WindowManager.h"\n#include "ColorManager.h"\n#include "CursorManager.h"\n\n//This class handles all mouse events, as well as the drawing of all sprites.\nclass ColorSynthesizer {\nprivate:\n    //Window that draws the sprites.\n    sf::RenderWindow &window;\n    //These variables are used to ensure that if the color slider must be used by first clicking, then dragging the slider. Similarly, coloring must be inititated by clicking on a pixel.\n    bool coloring = false, sliding = false;\n    //This integer tells the class which objects to draw\n    int state = 0;\npublic:\n    //Handles pixels and their assorted colors.\n    WindowManager wManager;\n    //Handles the coloration of pixels.\n    ColorManager cManager;\n    //Handles the size of the cursor.\n    CursorManager sManager;\n\n    //Gives the window pointer to each of the managers, so that they may reference the render window used.\n    ColorSynthesizer(sf::RenderWindow *window) : window(*window), wManager(window), cManager(window), sManager(window) {}\n\n    void setState(int state) {\n        this->state = state;\n    }\n\n    //This initiates events based on whether a button contains the mouse location when a click is a registered.\n    void detectEvent(float x, float y) {\n        if (wManager.back.getGlobalBounds().contains(x, y) && state != 0)\n            setState(0);\n        else if (wManager.colorButton.getGlobalBounds().contains(x, y) && state == 0)\n            setState(1);\n        else if (wManager.cursorButton.getGlobalBounds().contains(x, y) && state == 0)\n            setState(2);\n        else if (state == 0)\n            wManager.checkButtonPresssed(x, y);\n        else if (state == 2)\n            sManager.checkButtonPresssed(x, y);\n\n        //Checks if the user has clicked on a pixel.\n        coloring = true;\n        handlePixelEvents(x, y);\n\n        if (state == 1) {\n            //Checks if the user has clicked on the color slider, assuming the menu is in the color state.\n            sliding = true;\n            handleSliderEvents(x, y);\n        }\n    }\n\n    //Checks if the user is holding his or her mouse down on the pixel board or on the slider.\n    void handleEvents(float x, float y) {\n        handlePixelEvents(x, y);\n        handleSliderEvents(x, y);\n    }\n\n    //Sets the color of a pixel if clicked.\n    void handlePixelEvents(float x, float y) {\n        //If the user has not clicked on the pixel board before mousing over it, nothing will register.\n        if (!coloring)\n            return;\n\n        for (std::vector<sf::Sprite>::iterator iterator = wManager.pixels.begin(); iterator != wManager.pixels.end(); ++iterator) {\n            //Obtains the position of the pixel in the vector, which is used in the cursor methods.\n            int position = std::distance(wManager.pixels.begin(), iterator);\n            sf::Color *pColor = &wManager.colors.at(std::distance(wManager.pixels.begin(), iterator));\n            if (iterator->getGlobalBounds().contains(x, y)) {\n                //If the mode is set to fill, not erase.\n                if (wManager.getFilling()) {\n                    int position = std::distance(wManager.pixels.begin(), iterator);\n                    //Sets pColor to all the values of the current color selected except the alpha.\n                    pColor->r = cManager.pixelColor.r;\n                    pColor->g = cManager.pixelColor.g;\n                    pColor->b = cManager.pixelColor.b;\n                    //Automatically sets the alpha to full, in case the pixel is erased.\n                    pColor->a = 255;\n                    //Sets the colors of the pixels in the cursor to the current color.\n                    setPixelColors(position, pColor);\n                }\n                //If the mode is set to erase\n                else {\n                    //Sets the alphas of the pixels in the cursor to zero.\n                    pColor->a = 0;\n                    setPixelColors(position, pColor);\n                }\n                //Since a pixel contains the mouse position, coloring is set to true, which allows the user to color pixels by simply moving the mouse over pixels as the left mouse button is held.\n                coloring = true;\n                return;\n            }\n        }\n        //Since no pixel contains the mouse position, coloring is set to false.\n        coloring = false;\n    }\n\n    //Similar to the pixel events, handles the slider events.\n    void handleSliderEvents(float x, float y) {\n        //Similarly to the pixel events, determines if the user has first clicked on the slider.\n        if (!sliding) return;\n\n        //If the red color slider contains the mouse position.\n        if (cManager.colorSliderR.getGlobalBounds().contains(x, y) && x > cManager.colorSliderR.getPosition().x) {\n            cManager.adjustColor(0, x);\n            sliding = true;\n            return;\n        }\n\n        //If the blue slider contains the mouse position.\n        if (cManager.colorSliderB.getGlobalBounds().contains(x, y) && x > cManager.colorSliderB.getPosition().x) {\n            cManager.adjustColor(1, x);\n            sliding = true;\n            return;\n        }\n\n        //If the green slider contains the mouse position.\n        if (cManager.colorSliderG.getGlobalBounds().contains(x, y) && x > cManager.colorSliderG.getPosition().x) {\n            cManager.adjustColor(2, x);\n            sliding = true;\n            return;\n        }\n        sliding = false;\n    }\n\n    //Depending on the state, checks is a button is being moused over, and highlights it if it is.\n    void checkButtons(float x, float y) {\n        wManager.checkButtonHighlighted(x, y);\n        if (state == 2)\n            sManager.checkButtonHighlighted(x, y);\n    }\n\n    //Draws all the objects pertinent to the program, depending on the state.\n    void drawObjects() {\n        window.draw(wManager.mainMenu);\n        switch (state) {\n            case 0:\n                window.draw(wManager.colorButton);\n                window.draw(wManager.fillButton);\n                window.draw(wManager.eraseButton);\n                window.draw(wManager.cursorButton);\n\n                window.draw(wManager.colorText);\n                window.draw(wManager.fillText);\n                window.draw(wManager.eraseText);\n                window.draw(wManager.cursorText);\n                break;\n            case 1:\n                window.draw(cManager.colorSliderR);\n                window.draw(cManager.colorSliderB);\n                window.draw(cManager.colorSliderG);\n\n                window.draw(cManager.redAmount);\n                window.draw(cManager.blueAmount);\n                window.draw(cManager.greenAmount);\n\n                window.draw(cManager.currentColor);\n                window.draw(cManager.currentColorBorder);\n                window.draw(wManager.back);\n                window.draw(wManager.backText);\n\n                for (std::vector<sf::Sprite>::iterator iterator = cManager.slitsR.begin(); iterator != cManager.slitsR.end(); ++iterator)\n                    window.draw(*iterator);\n\n                for (std::vector<sf::Sprite>::iterator iterator = cManager.slitsB.begin(); iterator != cManager.slitsB.end(); ++iterator)\n                    window.draw(*iterator);\n\n                for (std::vector<sf::Sprite>::iterator iterator = cManager.slitsG.begin(); iterator != cManager.slitsG.end(); ++iterator)\n                    window.draw(*iterator);\n\n                window.draw(cManager.colorKnobR);\n                window.draw(cManager.colorKnobB);\n                window.draw(cManager.colorKnobG);\n                break;\n            case 2:\n                window.draw(wManager.back);\n                window.draw(wManager.backText);\n                window.draw(sManager.button1P);\n                window.draw(sManager.button3P1);\n                window.draw(sManager.button3P2);\n                window.draw(sManager.button5P);\n                window.draw(sManager.button9P);\n                window.draw(sManager.sizeText);\n                break;\n        }\n        drawPixels();\n        drawPixelBorders();\n    }\n\n    //Using the vectors that hold all the pixels and pixel borders, the class draws all the pixels.\n    void drawPixels() {\n        for (std::vector<sf::Sprite>::iterator iterator = wManager.pixels.begin(); iterator != wManager.pixels.end(); ++iterator) {\n            sf::Color *pColor = &wManager.colors.at(std::distance(wManager.pixels.begin(), iterator));\n            //Sets the alpha value of the pixel depending on whether it is erased or not.\n            if (wManager.transparentPixels.at(std::distance(wManager.pixels.begin(), iterator)))\n                pColor->a = 0;\n            else\n                pColor->a = 255;\n            iterator->setColor(*pColor);\n        }\n\n        for (std::vector<sf::Sprite>::iterator iterator = wManager.pixels.begin(); iterator != wManager.pixels.end(); ++iterator) {\n            int position = std::distance(wManager.pixels.begin(), iterator);\n\n            if (iterator->getGlobalBounds().contains(sf::Mouse::getPosition(window).x, sf::Mouse::getPosition(window).y))\n                setPixelAlphas(position);\n        }\n\n        for (std::vector<sf::Sprite>::iterator iterator = wManager.pixels.begin(); iterator != wManager.pixels.end(); ++iterator)\n            window.draw(*iterator);\n    }\n\n    //Same idea as the pixels.\n    void drawPixelBorders() {\n        for (std::vector<sf::Sprite>::iterator iterator = wManager.pixelBorders.begin(); iterator != wManager.pixelBorders.end(); ++iterator) {\n            sf::Color *pColor = &wManager.colors.at(std::distance(wManager.pixelBorders.begin(), iterator));\n            if (wManager.transparentPixels.at(std::distance(wManager.pixelBorders.begin(), iterator)))\n                pColor->a = 0;\n            else\n                pColor->a = 255;\n            iterator->setColor(*pColor);\n        }\n\n        for (std::vector<sf::Sprite>::iterator iterator = wManager.pixelBorders.begin(); iterator != wManager.pixelBorders.end(); ++iterator) {\n            int position = std::distance(wManager.pixelBorders.begin(), iterator);\n\n            if (iterator->getGlobalBounds().contains(sf::Mouse::getPosition(window).x, sf::Mouse::getPosition(window).y))\n                setPixelBorderAlphas(position);\n        }\n\n        for (std::vector<sf::Sprite>::iterator iterator = wManager.pixelBorders.begin(); iterator != wManager.pixelBorders.end(); ++iterator)\n            window.draw(*iterator);\n\n    }\n\n    //Sets the alpha of the pixels in the area of the cursor. This method is used when the user hovers over pixels on the pixel board.\n    void setPixelAlphas(int position) {\n        switch (sManager.getSize()) {\n            case 0:\n                //Sets the alpha of the one selected pixel.\n                setAlphaPixel(position);\n                break;\n            case 1:\n                //Sets the alphas of the pixels in a three-pixel row fashion.\n                setAlphaPixel(position);\n                setAlphaPixel(position + 32);\n                setAlphaPixel(position - 32);\n                break;\n            case 2:\n                //Sets the alphas of the pixels in a three-pixel column fashion.\n                setAlphaPixel(position);\n                setAlphaPixel(position + 1);\n                setAlphaPixel(position - 1);\n                break;\n            case 3:\n                //Sets the alphas of the pixels in a five-pixel T fashion.\n                setAlphaPixel(position);\n                setAlphaPixel(position + 1);\n                setAlphaPixel(position - 1);\n                setAlphaPixel(position + 32);\n                setAlphaPixel(position - 32);\n                break;\n            case 4:\n                //Sets the alphas of the pixels in a nine-pixel square fashion.\n                setAlphaPixel(position);\n                setAlphaPixel(position + 1);\n                setAlphaPixel(position - 1);\n                setAlphaPixel(position + 31);\n                setAlphaPixel(position - 31);\n                setAlphaPixel(position + 32);\n                setAlphaPixel(position - 32);\n                setAlphaPixel(position + 33);\n                setAlphaPixel(position - 33);\n                return;\n        }\n    }\n\n    //Largely the same as the pixels.\n    void setPixelBorderAlphas(int position) {\n        switch (sManager.getSize()) {\n            case 0:\n                setAlphaPixelBorder(position);\n                break;\n            case 1:\n                setAlphaPixelBorder(position);\n                setAlphaPixelBorder(position + 32);\n                setAlphaPixelBorder(position - 32);\n                break;\n            case 2:\n                setAlphaPixelBorder(position);\n                setAlphaPixelBorder(position + 1);\n                setAlphaPixelBorder(position - 1);\n                break;\n            case 3:\n                setAlphaPixelBorder(position);\n                setAlphaPixelBorder(position + 1);\n                setAlphaPixelBorder(position - 1);\n                setAlphaPixelBorder(position + 32);\n                setAlphaPixelBorder(position - 32);\n                break;\n            case 4:\n                setAlphaPixelBorder(position);\n                setAlphaPixelBorder(position + 1);\n                setAlphaPixelBorder(position - 1);\n                setAlphaPixelBorder(position + 31);\n                setAlphaPixelBorder(position - 31);\n                setAlphaPixelBorder(position + 32);\n                setAlphaPixelBorder(position - 32);\n                setAlphaPixelBorder(position + 33);\n                setAlphaPixelBorder(position - 33);\n                break;\n        }\n    }\n\n    //Sets the color of the pixels in the area of the cursor. This method is used when the user clicks or holds the mouse button down over pixels on the pixel board.\n    void setPixelColors(int position, sf::Color *color) {\n        switch (sManager.getSize()) {\n            case 0:\n                //Sets the color of the one selected pixel.\n                setPixelColor(position, color);\n                break;\n            case 1:\n                //Sets the colors of the pixels in a three-pixel row fashion.\n                setPixelColor(position, color);\n                setPixelColor(position + 32, color);\n                setPixelColor(position - 32, color);\n                break;\n            case 2:\n                //Sets the colors of the pixels in a three-pixel column fashion.\n                setPixelColor(position, color);\n                setPixelColor(position + 1, color);\n                setPixelColor(position - 1, color);\n                break;\n            case 3:\n                //Sets the colors of the pixels in a five-pixel T fashion.\n                setPixelColor(position, color);\n                setPixelColor(position + 1, color);\n                setPixelColor(position - 1, color);\n                setPixelColor(position + 32, color);\n                setPixelColor(position - 32, color);\n                break;\n            case 4:\n                //Sets the colors of the pixels in a nine-pixel square fashion.\n                setPixelColor(position, color);\n                setPixelColor(position + 1, color);\n                setPixelColor(position - 1, color);\n                setPixelColor(position + 31, color);\n                setPixelColor(position - 31, color);\n                setPixelColor(position + 32, color);\n                setPixelColor(position - 32, color);\n                setPixelColor(position + 33, color);\n                setPixelColor(position - 33, color);\n                break;\n        }\n    }\n\n    //Using the index of the pixel, sets the alpha of the pixels in the area of the cursor.\n    void setAlphaPixel(int position) {\n        sf::Color color;\n        try {\n            color = sf::Color::Black;\n            color.a = 127.5f;\n            wManager.pixels.at(position).setColor(color);\n        }\n        catch (...) {\n            //Do nothing\n        }\n    }\n\n    //Same as the pixel method.\n    void setAlphaPixelBorder(int position) {\n        sf::Color color;\n        try {\n            color = sf::Color::Black;\n            color.a = 127.5f;\n            wManager.pixelBorders.at(position).setColor(color);\n        }\n        catch (...) {\n            //Do nothing\n        }\n    }\n\n    //Using the index of the pixel, sets the color of the pixels in the area of the cursor.\n    void setPixelColor(int position, sf::Color *color) {\n        try {\n            if (color->a == 255)\n                wManager.transparentPixels.at(position) = false;\n            else\n                wManager.transparentPixels.at(position) = true;\n\n            wManager.colors.at(position) = *color;\n        }\n        catch (...) {\n            //Do nothing\n        }\n    }\n};\n\nint main(int, char const**)\n{\n    // Create the main window\n    sf::RenderWindow *window = new sf::RenderWindow(sf::VideoMode(800, 640), "Color Synthesizer", sf::Style::Close);\n    ColorSynthesizer synthesizer(window);\n\n    // Start the game loop\n    while (window->isOpen())\n    {\n        // Process events\n        sf::Event event;\n        while (window->pollEvent(event))\n        {\n            // Close window: exit\n            if (event.type == sf::Event::Closed) {\n                window->close();\n            }\n\n            if (event.type == sf::Event::MouseButtonPressed && event.mouseButton.button == sf::Mouse::Left)\n                synthesizer.detectEvent(event.mouseButton.x, event.mouseButton.y);\n\n            if (event.type == sf::Event::MouseMoved)\n                synthesizer.checkButtons(event.mouseMove.x, event.mouseMove.y);\n\n            // Escape pressed: exit\n            if (event.type == sf::Event::KeyPressed && event.key.code == sf::Keyboard::Escape) {\n                window->close();\n            }\n        }\n\n        //Conveys the mouse click to the ColorSynthesizer\n        if (sf::Mouse::isButtonPressed(sf::Mouse::Button::Left))\n            synthesizer.handleEvents(sf::Mouse::getPosition(*window).x, sf::Mouse::getPosition(*window).y);\n\n        // Clear screen\n        window->clear(sf::Color::White);\n\n        // Draw the sprites\n        synthesizer.drawObjects();\n\n        // Update the window\n        window->display();\n    }\n\n    //Deletes the render window memory from the heap and exits the window.\n    delete window;\n    return EXIT_SUCCESS;\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-c++"},'//\n//  ColorManager.h\n//  ColorSynthesizer\n//\n//  Created by Akshay Subramaniam on 14/1/15.\n//  Copyright (c) 2015 Incultus. All rights reserved.\n//\n\n#ifndef __ColorSynthesizer__ColorManager__\n#define __ColorSynthesizer__ColorManager__\n\n#include &lt;SFML/Audio.hpp&gt;\n#include &lt;SFMl/Graphics.hpp&gt;\n#include "ResourcePath.hpp"\n\nclass ColorManager {\nprivate:\n    sf::RenderWindow &window;\n    sf::Texture colorSliderT, colorKnobT;\n    sf::Texture currentColorT, currentColorB;\n    sf::Texture pixelSlitT;\n    sf::Font colorFont;\n    //Color components of the current color.\n    int red = 255, blue = 255, green = 255;\n\npublic:\n    sf::Text redAmount, blueAmount, greenAmount;\n    sf::Color pixelColor = sf::Color::White;\n\n    //The borders of the sliders.\n    sf::Sprite colorSliderR, colorSliderB, colorSliderG;\n    //The indicator that shows the current color, along with its border.\n    sf::Sprite currentColor, currentColorBorder;\n    //The knobs of the sliders.\n    sf::Sprite colorKnobR, colorKnobB, colorKnobG;\n    //The slits (from one to 255) that comprise the actual slider that the user sees.\n    std::vector&lt;sf::Sprite&gt; slitsR, slitsB, slitsG;\n\n    ColorManager(sf::RenderWindow *window);\n    void createUI();\n    void createText();\n    void adjustColor(int color, float position);\n};\n#endif /* defined(__ColorSynthesizer__ColorManager__) */')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-c++"},'//\n//  ColorManager.cpp\n//  ColorSynthesizer\n//\n//  Created by Akshay Subramaniam on 14/1/15.\n//  Copyright (c) 2015 Incultus. All rights reserved.\n//\n\n#include "ColorManager.h"\n\n//Acquires the renderwindow of the main class.\nColorManager::ColorManager(sf::RenderWindow *window) : window(*window) {\n    createUI();\n    createText();\n}\n\n//Creates the sprites and textures concerning the color UI.\nvoid ColorManager::createUI() {\n    //Creates the textures for the sprites.\n    colorSliderT.loadFromFile(resourcePath() + "colorslider.png");\n    currentColorT.loadFromFile(resourcePath() + "currentcolor.png");\n    currentColorB.loadFromFile(resourcePath() + "currentcolorborder.png");\n    pixelSlitT.loadFromFile(resourcePath() + "pixelslit.png");\n    colorKnobT.loadFromFile(resourcePath() + "knob.png");\n\n    //Creates the temporary sprites, which are used to set the sprites displayed.\n    sf::Sprite cSlider(colorSliderT);\n    sf::Sprite cKnob(colorKnobT);\n    sf::Sprite cColor(currentColorT);\n    sf::Sprite cColorB(currentColorB);\n\n    colorSliderR = cSlider;\n    colorSliderB = cSlider;\n    colorSliderG = cSlider;\n\n    colorKnobR = cKnob;\n    colorKnobB = cKnob;\n    colorKnobG = cKnob;\n\n    currentColor = cColor;\n    currentColorBorder = cColorB;\n\n    //Sets the positions of the slider borders.\n    colorSliderR.setPosition(290, 25);\n    colorSliderB.setPosition(290, 50);\n    colorSliderG.setPosition(290, 75);\n\n    //Sets the position of the current color indicator.\n    currentColor.setPosition(198, 25);\n    currentColorBorder.setPosition(198, 25);\n\n    //Creates the color slits that comprise the slider, from zero to 255.\n    for (int i = 0; i < 255; i ++) {\n        sf::Sprite slit(pixelSlitT);\n        slit.setPosition(colorSliderR.getPosition().x + i + 1, colorSliderR.getPosition().y + 1);\n        slit.setColor(sf::Color(i, 0, 0, 255));\n        slitsR.push_back(slit);\n    }\n\n    for (int i = 0; i < 255; i ++) {\n        sf::Sprite slit(pixelSlitT);\n        slit.setPosition(colorSliderB.getPosition().x + i + 1, colorSliderB.getPosition().y + 1);\n        slit.setColor(sf::Color(0, 0, i, 255));\n        slitsB.push_back(slit);\n    }\n\n    for (int i = 0; i < 255; i ++) {\n        sf::Sprite slit(pixelSlitT);\n        slit.setPosition(colorSliderG.getPosition().x + i + 1, colorSliderG.getPosition().y + 1);\n        slit.setColor(sf::Color(0, i, 0, 255));\n        slitsG.push_back(slit);\n    }\n\n    //Sets the position of the knobs of the sliders. Note each color is subtracted by one to prevent the vector from trying to access position 255, which is above the maximum length.\n    colorKnobR.setPosition(slitsR.at(red - 1).getPosition().x - 2, colorSliderR.getPosition().y + 1);\n    colorKnobB.setPosition(slitsB.at(blue - 1).getPosition().x - 2, colorSliderB.getPosition().y + 1);\n    colorKnobG.setPosition(slitsG.at(green - 1).getPosition().x - 2, colorSliderG.getPosition().y + 1);\n}\n\n//Creates the text by setting the font, string, color, and size of each font.\nvoid ColorManager::createText() {\n    colorFont.loadFromFile(resourcePath() + "CL.ttf");\n\n    redAmount.setFont(colorFont);\n    blueAmount.setFont(colorFont);\n    greenAmount.setFont(colorFont);\n\n    redAmount.setString(std::to_string(red));\n    blueAmount.setString(std::to_string(blue));\n    greenAmount.setString(std::to_string(green));\n\n    redAmount.setCharacterSize(20);\n    blueAmount.setCharacterSize(20);\n    greenAmount.setCharacterSize(20);\n\n    redAmount.setColor(sf::Color::Black);\n    blueAmount.setColor(sf::Color::Black);\n    greenAmount.setColor(sf::Color::Black);\n\n    redAmount.setPosition(colorSliderR.getPosition().x + 265, colorSliderR.getPosition().y - 7);\n    blueAmount.setPosition(colorSliderB.getPosition().x + 265, colorSliderB.getPosition().y - 7);\n    greenAmount.setPosition(colorSliderG.getPosition().x + 265, colorSliderG.getPosition().y - 7);\n}\n\n//Sets the current color depending on the distance between the slider end and the mouse position.\nvoid ColorManager::adjustColor(int color, float position) {\n    switch (color) {\n        case 0:\n            red = 255 - (colorSliderR.getPosition().x + 256 - position);\n            redAmount.setString(std::to_string(red));\n            break;\n        case 1:\n            blue = 255 - (colorSliderB.getPosition().x + 256 - position);\n            blueAmount.setString(std::to_string(blue));\n            break;\n        case 2:\n            green = 255 - (colorSliderG.getPosition().x + 256 - position);\n            greenAmount.setString(std::to_string(green));\n            break;\n    }\n    pixelColor = sf::Color(red, green, blue);\n    currentColor.setColor(pixelColor);\n\n    //The use of redF, blueF, and greenF ensures that the value does not go out of bounds, by preventing the values from going above 254 or below zero.\n    float redF, blueF, greenF;\n\n    if (red > 0)\n        redF = red - 1;\n    else redF = 0;\n\n    if (blue > 0)\n        blueF = blue - 1;\n    else blueF = 0;\n\n    if (green > 0)\n        greenF = green - 1;\n    else greenF = 0;\n\n    colorKnobR.setPosition(slitsR.at(redF).getPosition().x - 2, colorSliderR.getPosition().y + 1);\n    colorKnobB.setPosition(slitsB.at(blueF).getPosition().x - 2, colorSliderB.getPosition().y + 1);\n    colorKnobG.setPosition(slitsG.at(greenF).getPosition().x - 2, colorSliderG.getPosition().y + 1);\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-c++"},'//\n//  CursorManager.h\n//  ColorSynthesizer\n//\n//  Created by Akshay Subramaniam on 15/1/15.\n//  Copyright (c) 2015 Incultus. All rights reserved.\n//\n\n#ifndef __ColorSynthesizer__CursorManager__\n#define __ColorSynthesizer__CursorManager__\n\n#include &lt;SFML/Audio.hpp&gt;\n#include &lt;SFMl/Graphics.hpp&gt;\n#include "ResourcePath.hpp"\n\nclass CursorManager {\nprivate:\n    //The integer that determines the cursor size.\n    int size = 0;\n    sf::RenderWindow &window;\n    sf::Texture button1PN, button3P1N, button3P2N, button5PN, button9PN;\n    sf::Texture button1PH, button3P1H, button3P2H, button5PH, button9PH;\n    sf::Texture button1PP, button3P1P, button3P2P, button5PP, button9PP;\n    sf::Font buttonFont;\n\n    void resetCursors(int newSize);\npublic:\n    //The sprites of the cursor buttons.\n    sf::Sprite button1P, button3P1, button3P2, button5P, button9P;\n    //The only text in the cursor UI.\n    sf::Text sizeText;\n\n    CursorManager(sf::RenderWindow *window);\n    void initializeValues();\n    void setButtons();\n    void checkButtonPresssed(float x, float y);\n    void checkButtonHighlighted(float x, float y);\n    int getSize();\n};\n\n#endif /* defined(__ColorSynthesizer__CursorManager__) */')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-c++"},'//\n//  CursorManager.cpp\n//  ColorSynthesizer\n//\n//  Created by Akshay Subramaniam on 15/1/15.\n//  Copyright (c) 2015 Incultus. All rights reserved.\n//\n\n#include "CursorManager.h"\n\n//Sets the render window of the main class, so that this one may reference it.\nCursorManager::CursorManager(sf::RenderWindow *window) : window(*window) {\n    initializeValues();\n}\n\nvoid CursorManager::initializeValues() {\n    //Creates the textures, and texts.\n    buttonFont.loadFromFile(resourcePath() + "CL.ttf");\n    sizeText.setFont(buttonFont);\n    sizeText.setString("Choose Cursor Size");\n    sizeText.setCharacterSize(24);\n    sizeText.setColor(sf::Color::Black);\n\n    //Each texture variation of the five cursor sizes. Normal, highlighted, and pressed.\n    button1PN.loadFromFile(resourcePath() + "onepixelbutton.png");\n    button3P1N.loadFromFile(resourcePath() + "threepixelbutton1.png");\n    button3P2N.loadFromFile(resourcePath() + "threepixelbutton2.png");\n    button5PN.loadFromFile(resourcePath() + "fivepixelbutton.png");\n    button9PN.loadFromFile(resourcePath() + "ninepixelbutton.png");\n\n    button1PH.loadFromFile(resourcePath() + "onepixelbuttonhighlighted.png");\n    button3P1H.loadFromFile(resourcePath() + "threepixelbutton1highlighted.png");\n    button3P2H.loadFromFile(resourcePath() + "threepixelbutton2highlighted.png");\n    button5PH.loadFromFile(resourcePath() + "fivepixelbuttonhighlighted.png");\n    button9PH.loadFromFile(resourcePath() + "ninepixelbuttonhighlighted.png");\n\n    button1PP.loadFromFile(resourcePath() + "onepixelbuttonpressed.png");\n    button3P1P.loadFromFile(resourcePath() + "threepixelbutton1pressed.png");\n    button3P2P.loadFromFile(resourcePath() + "threepixelbutton2pressed.png");\n    button5PP.loadFromFile(resourcePath() + "fivepixelbuttonpressed.png");\n    button9PP.loadFromFile(resourcePath() + "ninepixelbuttonpressed.png");\n\n    setButtons();\n}\n\n//Creates the buttons of the cursor sizes.\nvoid CursorManager::setButtons() {\n    sf::Sprite b1p(button1PP), b3p1(button3P1N), b3p2(button3P2N), b5p(button5PN), b9p(button9PN);\n\n    //Sets all cursor buttons except for the first to their normal appearance. Since the cursor size is initialized as one pixel, the first cursor button starts selected.\n    button1P = b1p;\n    button3P1 = b3p1;\n    button3P2 = b3p2;\n    button5P = b5p;\n    button9P = b9p;\n\n    //Sets the positions of the buttons so that they are spread out.\n    button1P.setPosition(200, 50);\n    button3P1.setPosition(300, 50);\n    button3P2.setPosition(400, 50);\n    button5P.setPosition(500, 50);\n    button9P.setPosition(600, 50);\n\n    sizeText.setPosition(325, 5);\n}\n\n//Similar to other managers, checks whether a button is moused over. Other managers have a more detailed explanation of this method.\nvoid CursorManager::checkButtonHighlighted(float x, float y) {\n\n    sf::Sprite b1N(button1PN);\n    sf::Sprite b1H(button1PH);\n    sf::Sprite b1P(button1PP);\n\n    b1N.setPosition(button1P.getPosition());\n    b1H.setPosition(button1P.getPosition());\n    b1P.setPosition(button1P.getPosition());\n\n    if (button1P.getGlobalBounds().contains(x, y))\n        button1P = b1H;\n    else if (size == 0)\n        button1P = b1P;\n    else\n        button1P = b1N;\n\n    sf::Sprite b3N1(button3P1N);\n    sf::Sprite b3H1(button3P1H);\n    sf::Sprite b3P1(button3P1P);\n\n    b3N1.setPosition(button3P1.getPosition());\n    b3H1.setPosition(button3P1.getPosition());\n    b3P1.setPosition(button3P1.getPosition());\n\n    if (button3P1.getGlobalBounds().contains(x, y))\n        button3P1 = b3H1;\n    else if (size == 1)\n        button3P1 = b3P1;\n    else\n        button3P1 = b3N1;\n\n    sf::Sprite b3N2(button3P2N);\n    sf::Sprite b3H2(button3P2H);\n    sf::Sprite b3P2(button3P2P);\n\n    b3N2.setPosition(button3P2.getPosition());\n    b3H2.setPosition(button3P2.getPosition());\n    b3P2.setPosition(button3P2.getPosition());\n\n    if (button3P2.getGlobalBounds().contains(x, y))\n        button3P2 = b3H2;\n    else if (size == 2)\n        button3P2 = b3P2;\n    else\n        button3P2 = b3N2;\n\n    sf::Sprite b5N(button5PN);\n    sf::Sprite b5H(button5PH);\n    sf::Sprite b5P(button5PP);\n\n    b5N.setPosition(button5P.getPosition());\n    b5H.setPosition(button5P.getPosition());\n    b5P.setPosition(button5P.getPosition());\n\n    if (button5P.getGlobalBounds().contains(x, y))\n        button5P = b5H;\n    else if (size == 3)\n        button5P = b5P;\n    else\n        button5P = b5N;\n\n    sf::Sprite b9N(button9PN);\n    sf::Sprite b9H(button9PH);\n    sf::Sprite b9P(button9PP);\n\n    b9N.setPosition(button9P.getPosition());\n    b9H.setPosition(button9P.getPosition());\n    b9P.setPosition(button9P.getPosition());\n\n    if (button9P.getGlobalBounds().contains(x, y))\n        button9P = b9H;\n    else if (size == 4)\n        button9P = b9P;\n    else\n        button9P = b9N;\n}\n\n\n//Similar to highlighted method.\nvoid CursorManager::checkButtonPresssed(float x, float y) {\n\n    sf::Sprite b1P(button1PP);\n    sf::Sprite b3P1(button3P1P);\n    sf::Sprite b3P2(button3P2P);\n    sf::Sprite b5P(button5PP);\n    sf::Sprite b9P(button9PP);\n\n    b1P.setPosition(button1P.getPosition());\n    b3P1.setPosition(button3P1.getPosition());\n    b3P2.setPosition(button3P2.getPosition());\n    b5P.setPosition(button5P.getPosition());\n    b9P.setPosition(button9P.getPosition());\n\n    if (button1P.getGlobalBounds().contains(x, y)) {\n        button1P = b1P;\n        resetCursors(0);\n    }\n\n    if (button3P1.getGlobalBounds().contains(x, y)) {\n        button3P1 = b3P1;\n        resetCursors(1);\n    }\n\n    if (button3P2.getGlobalBounds().contains(x, y)) {\n        button3P2 = b3P2;\n        resetCursors(2);\n    }\n\n    if (button5P.getGlobalBounds().contains(x, y)) {\n        button5P = b5P;\n        resetCursors(3);\n    }\n\n\n    if (button9P.getGlobalBounds().contains(x, y)) {\n        button9P = b9P;\n        resetCursors(4);\n    }\n}\n\n//Sets the old cursor button to be unselected and adjusts the new size.\nvoid CursorManager::resetCursors(int newSize) {\n    //Creates the normal version of the button sprites.\n    sf::Sprite b1N(button1PN);\n    sf::Sprite b3N1(button3P1N);\n    sf::Sprite b3N2(button3P2N);\n    sf::Sprite b5N(button5PN);\n    sf::Sprite b9N(button9PN);\n\n    b1N.setPosition(button1P.getPosition());\n    b3N1.setPosition(button3P1.getPosition());\n    b3N2.setPosition(button3P2.getPosition());\n    b5N.setPosition(button5P.getPosition());\n    b9N.setPosition(button9P.getPosition());\n\n    //If the same cursor button is selected, the method returns.\n    if (size == newSize)\n        return;\n\n    //Sets the old cursor button to the normal texture, and sets the current cursor size to the new one.\n    switch (size) {\n        case 0:\n            button1P = b1N;\n            size = newSize;\n            return;\n        case 1:\n            button3P1 = b3N1;\n            size = newSize;\n            return;\n        case 2:\n            button3P2 = b3N2;\n            size = newSize;\n            return;\n        case 3:\n            button5P = b5N;\n            size = newSize;\n            return;\n        case 4:\n            button9P = b9N;\n            size = newSize;\n            return;\n    }\n}\n\nint CursorManager::getSize() {\n    return size;\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-c++"},'//\n//  WindowManager.cpp\n//  ColorSynthesizer\n//\n//  Created by Akshay Subramaniam on 14/1/15.\n//  Copyright (c) 2015 Incultus. All rights reserved.\n//\n#include "WindowManager.h"\n\n//Sets the render window of the class to the main class.\nWindowManager::WindowManager(sf::RenderWindow *window) : window(*window) {\n    initializeValues();\n}\n\n//Initializes the text as well as the textures concerning the class.\nvoid WindowManager::initializeValues() {\n    // Set the Icon\n    icon.loadFromFile(resourcePath() + "icon.png");\n    window.setIcon(icon.getSize().x, icon.getSize().y, icon.getPixelsPtr());\n\n    buttonFont.loadFromFile(resourcePath() + "CL.ttf");\n\n    colorText.setFont(buttonFont);\n    fillText.setFont(buttonFont);\n    eraseText.setFont(buttonFont);\n    cursorText.setFont(buttonFont);\n    backText.setFont(buttonFont);\n\n    colorText.setString("Choose Color");\n    fillText.setString("Fill Pixels");\n    eraseText.setString("Erase Pixels");\n    cursorText.setString("Cursor Size");\n    backText.setString("Back");\n\n    colorText.setCharacterSize(24);\n    fillText.setCharacterSize(24);\n    eraseText.setCharacterSize(24);\n    cursorText.setCharacterSize(24);\n    backText.setCharacterSize(16);\n\n    colorText.setColor(sf::Color::Black);\n    fillText.setColor(sf::Color::Black);\n    eraseText.setColor(sf::Color::Black);\n    cursorText.setColor(sf::Color::Black);\n    backText.setColor(sf::Color::Black);\n\n    pixelT.loadFromFile(resourcePath() + "pixel.png");\n    pixelbT.loadFromFile(resourcePath() + "pixelborder.png");\n    mainMenuT.loadFromFile(resourcePath() + "menuidle.png");\n    buttonTN.loadFromFile(resourcePath() + "button.png");\n    buttonTH.loadFromFile(resourcePath() + "buttonhighlighted.png");\n    buttonTP.loadFromFile(resourcePath() + "buttonpressed.png");\n    backTN.loadFromFile(resourcePath() + "back.png");\n    backTH.loadFromFile(resourcePath() + "backhighlighted.png");\n    backTP.loadFromFile(resourcePath() + "backpressed.png");\n\n    setSprites();\n}\n\n//Creates the sprites.\nvoid WindowManager::setSprites() {\n    sf::Sprite mm(mainMenuT);\n    sf::Sprite b1(buttonTN), b2(buttonTP), b3(buttonTN), b4(buttonTN), b5(backTN);\n\n    mainMenu = mm;\n    colorButton = b1;\n    fillButton = b2;\n    eraseButton = b3;\n    cursorButton = b4;\n    back = b5;\n\n    //Fills the window below the UI bar with pixels, which are uniformly spaced.\n    for (int x = 0; x < window.getSize().x; x += pixelT.getSize().x)\n        for (int y = 128; y < window.getSize().y; y += pixelT.getSize().y)\n        {\n            sf::Sprite pixel(pixelT);\n            sf::Sprite pixelBorder(pixelbT);\n            pixel.setPosition(x, y);\n            pixelBorder.setPosition(x, y);\n            pixels.push_back(pixel);\n            pixelBorders.push_back(pixelBorder);\n            colors.push_back(sf::Color(255, 255, 255, 255));\n            transparentPixels.push_back(false);\n        }\n\n    //Sets the position of the buttons on the UI bar.\n    mainMenu.setPosition(0, 0);\n    colorButton.setPosition(50, 25);\n    fillButton.setPosition(325, 68);\n    eraseButton.setPosition(325, 10);\n    cursorButton.setPosition(600, 25);\n\n    //Sets the position of the texts on the UI bar.\n    colorText.setPosition(colorButton.getPosition().x + 3, colorButton.getPosition().y + 7.5);\n    fillText.setPosition(fillButton.getPosition().x + 32.5, fillButton.getPosition().y + 7.5);\n    eraseText.setPosition(eraseButton.getPosition().x + 18, eraseButton.getPosition().y + 7.5);\n    cursorText.setPosition(cursorButton.getPosition().x + 20, cursorButton.getPosition().y + 7.5);\n    backText.setPosition(back.getPosition().x + 10, backText.getPosition().y + 5);\n\n    back.setPosition(2, 2);\n}\n\n//Checks if the fill pixels or erase pixels button is pressed.\nvoid WindowManager::checkButtonPresssed(float x, float y) {\n    //Creates placeholder sprites to set the button sprites to, such that the buttons change their textures/appearances.\n    sf::Sprite bN(buttonTN);\n    sf::Sprite bP(buttonTP);\n\n    //Sets the placeholder sprites to the same position so that when copied, the buttons will appear in the same place.\n    bN.setPosition(fillButton.getPosition());\n    bP.setPosition(fillButton.getPosition());\n\n    //If the fill pixels button is clicked.\n    if (fillButton.getGlobalBounds().contains(x, y) && !filling) {\n        //Sets the button the placeholder button, so that the fill button appears selected.\n        fillButton = bP;\n        //Sets the pixel mode to filling.\n        filling = true;\n\n        //Sets the erase button to its normal form, so that the erase button appears unselected.\n        bN.setPosition(eraseButton.getPosition());\n        eraseButton = bN;\n    }\n\n    //Inverse of the fill button.\n    bN.setPosition(eraseButton.getPosition());\n    bP.setPosition(eraseButton.getPosition());\n\n    if (eraseButton.getGlobalBounds().contains(x, y) && filling) {\n        eraseButton = bP;\n        filling = false;\n\n        bN.setPosition(fillButton.getPosition());\n        fillButton = bN;\n    }\n}\n\n\n//Checks if any of the buttons are moused over, so that they are highlighted.\nvoid WindowManager::checkButtonHighlighted(float x, float y) {\n    //Creates placeholder sprites for the buttons, so that the buttons can change their textures.\n    sf::Sprite bN(buttonTN);\n    sf::Sprite bH(buttonTH);\n    sf::Sprite bP(buttonTP);\n\n    sf::Sprite bN2(backTN);\n    sf::Sprite bH2(backTH);\n\n    bN.setPosition(colorButton.getPosition());\n    bH.setPosition(colorButton.getPosition());\n\n    //If the color button contains the mouse position, it sets the button to appear highlighted, else normal.\n    if (colorButton.getGlobalBounds().contains(x, y))\n        colorButton = bH;\n    else\n        colorButton = bN;\n\n    bN.setPosition(fillButton.getPosition());\n    bH.setPosition(fillButton.getPosition());\n    bP.setPosition(fillButton.getPosition());\n\n    //For the fill and erase button, if the buttons are NOT moused over, and the mode is fill or erase respectively, the buttons are set to appear selected.\n    if (fillButton.getGlobalBounds().contains(x, y))\n        fillButton = bH;\n    else if (filling)\n        fillButton = bP;\n    else\n        fillButton = bN;\n\n    bN.setPosition(eraseButton.getPosition());\n    bH.setPosition(eraseButton.getPosition());\n    bP.setPosition(eraseButton.getPosition());\n\n    if (eraseButton.getGlobalBounds().contains(x, y))\n        eraseButton = bH;\n    else if (!filling)\n        eraseButton = bP;\n    else\n        eraseButton = bN;\n\n    bN.setPosition(cursorButton.getPosition());\n    bH.setPosition(cursorButton.getPosition());\n\n    if (cursorButton.getGlobalBounds().contains(x, y))\n        cursorButton = bH;\n    else\n        cursorButton = bN;\n\n    bN2.setPosition(back.getPosition());\n    bH2.setPosition(back.getPosition());\n\n    if (back.getGlobalBounds().contains(x, y))\n        back = bH2;\n    else\n        back = bN2;\n}\n\nbool WindowManager::getFilling() {\n    return filling;\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-c++"},'//\n//  TextEncryptor.h\n//  Text Encryptor\n//\n//  Created by Akshay Subramaniam on 5/5/15.\n//  Copyright (c) 2015 Incultus. All rights reserved.\n//\n\n#ifndef __Text_Encryptor__TextEncryptor__\n#define __Text_Encryptor__TextEncryptor__\n\n#include &lt;stdio.h&gt;\n#include &lt;SFML/Audio.hpp&gt;\n#include &lt;SFML/Graphics.hpp&gt;\n#include "Encryptor.h"\n#include "Decryptor.h"\n#include "ResourcePath.hpp"\n#include &lt;map&gt;\n#include &lt;future&gt;\n#include &lt;chrono&gt;\n#include &lt;thread&gt;\n#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;\n#include &lt;fstream&gt;\n\n#endif /* defined(__Text_Encryptor__TextEncryptor__) */\n\nclass TextEncryptor {\npublic:\n    // Class constructor.\n    TextEncryptor(sf::RenderWindow *window);\n\n    // The texts that make up the UI.\n    sf::Text encryptTitleText, decryptTitleText;\n    sf::Text encryptText, decryptText;\n    sf::Text encryptFileLocationText, decryptFileLocationText;\n    sf::Text playfairText, hillText, colTranspoText, colPlayfairText1, colPlayfairText2,\n    colHillText1, colHillText2;\n    // The buttons.\n    sf::Text chooseELocation, chooseDLocation;\n    sf::Sprite encryptButton, decryptButton;\n    sf::Sprite playfairButton, hillButton, colTranspoButton, colPlayfairButton, colHillButton;\n    sf::Sprite encryptFileSelector, decryptFileSelector;\n\n    void checkButtons(float x, float y);\n    void handleEvents(float x, float y);\n    void handleTyping(char);\n    void checkLocationLength(bool encrypt);\n    void backspace();\n    void drawObjects();\nprivate:\n    // The type that determines which cipher is used in encryption.\n    int cipherType = -1;\n    // Whether or not the user is typing in a location of either encryption or decryption.\n    int typing = 0;\n    // The strings for each location.\n    std::string encryptFileLocation = "", decryptFileLocation = "";\n    // THe shortened strings.\n    std::string concEncryptFileLocation, concDecryptFileLocation;\n    // Render window.\n    sf::RenderWindow &window;\n    // Textures for buttons, and fonts for texts.\n    sf::Texture buttonT, button2T, selectorT;\n    sf::Font buttonFont, titleFont, fileSelectorFont;\n    // Hashmap for button states.\n    std::map&lt;std::string, int&gt; buttonMap;\n\n    void createUI();\n    void createText();\n    void createHashMap();\n\n    void highlightButton(int, int, sf::Sprite*, std::string, sf::Text*, sf::Text* = NULL);\n    void pressButton(int, int, sf::Sprite*, std::string, sf::Text*, sf::Text* = NULL);\n    void handleClick(std::string);\n    void unhighlightButton(sf::Sprite*, int*, sf::Text*, sf::Text*);\n    void unhighlightButtons(int);\n\n    void encryptFile();\n    void decryptFile();\n    void successMessage(bool, bool);\n};')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-c++"},'//\n//  TextEncryptor.cpp\n//  Text Encryptor\n//\n//  Created by Akshay Subramaniam on 5/5/15.\n//  Copyright (c) 2015 Incultus. All rights reserved.\n//\n\n#include "TextEncryptor.h"\n\n// This fairly large class handles all clicking and mouse movement.\nTextEncryptor::TextEncryptor(sf::RenderWindow *window) : window(*window) {\n    // Creates all the UIs and creates the hashmap for individual UI handling.\n    createUI();\n    createText();\n    createHashMap();\n}\n\n// This method is responsible for checking whether the user has moused over any of the buttons. If he or she has, it highlights that respective button.\nvoid TextEncryptor::checkButtons(float x, float y) {\n    // Gives the x-coordinate of the mouse position, the y-coordinate of the mouse position, the pointer to the button itself (manifest as a sprite), the hashmap that tells the state of the button, and the pointer to the text of the button.\n    highlightButton(x, y, &encryptButton, "encrypt", &encryptText);\n    highlightButton(x, y, &decryptButton, "decrypt", &decryptText);\n    highlightButton(x, y, &playfairButton, "playfair", &playfairText);\n    highlightButton(x, y, &hillButton, "hill", &hillText);\n    highlightButton(x, y, &colTranspoButton, "col", &colTranspoText);\n    highlightButton(x, y, &colPlayfairButton, "colPlayfair", &colPlayfairText1, &colPlayfairText2);\n    highlightButton(x, y, &colHillButton, "colHill", &colHillText1, &colHillText2);\n    highlightButton(x, y, &encryptFileSelector, "eFile", &encryptFileLocationText);\n    highlightButton(x, y, &decryptFileSelector, "dFile", &decryptFileLocationText);\n}\n\n// If the user has selected either of the location boxes, allows the user to type text into the location boxes. This is used to create the encryption and decryption file location.\nvoid TextEncryptor::handleTyping(char key) {\n    // If encryption box was selected.\n    if (typing == 1) {\n        // Adds the new character to the location string, as well as the shortened version of the string (which appears on the screen for the user to see).\n        encryptFileLocation += key;\n        concEncryptFileLocation += key;\n        // Sets the on-screen text UI to the shortened string.\n        encryptFileLocationText.setString(concEncryptFileLocation);\n        // Checks if the shortened string needs to be further shortened so that it fits in the location box.\n        checkLocationLength(true);\n    }\n    // If decryption box was selected. Same but for decryption.\n    else if (typing == 2) {\n        decryptFileLocation += key;\n        concDecryptFileLocation += key;\n        decryptFileLocationText.setString(concDecryptFileLocation);\n        checkLocationLength(false);\n    }\n}\n\n// Checks if the shortened string is too long.\nvoid TextEncryptor::checkLocationLength(bool encrypt) {\n    if (encrypt) {\n        // If the location is less than 24 characters, it will use the non-truncated string to display.\n        if (encryptFileLocation.length() < 24)\n            encryptFileLocationText.setString(encryptFileLocation);\n\n        // Otherwise will set the shortened string to the closest / that is at least 23 letters away from the end all the way to the end. Also adds an ellipse before the string to represent its truncation.\n        else if (concEncryptFileLocation.length() > 23 || concEncryptFileLocation.length() < 4)\n            for (int i = 0; i < encryptFileLocation.length(); i ++)\n                if (encryptFileLocation[i] == \'/\' && encryptFileLocation.length() - i < 23) {\n                    concEncryptFileLocation = "..." + encryptFileLocation.substr(i + 1, encryptFileLocation.length() - i);\n                    encryptFileLocationText.setString(concEncryptFileLocation);\n                }\n    }\n    else {\n        // Same but for decryption.\n        if (decryptFileLocation.length() < 24)\n            decryptFileLocationText.setString(decryptFileLocation);\n\n        else if (concDecryptFileLocation.length() > 23 || concDecryptFileLocation.length() < 4)\n            for (int i = 0; i < decryptFileLocation.length(); i ++)\n                if (decryptFileLocation[i] == \'/\' && decryptFileLocation.length() - i < 23) {\n                    concDecryptFileLocation = "..." + decryptFileLocation.substr(i + 1,decryptFileLocation.length() - i);\n                    decryptFileLocationText.setString(concDecryptFileLocation);\n                }\n    }\n}\n\n// Deletes the character at the end of each file location if the user has pressed backspace.\nvoid TextEncryptor::backspace() {\n    // If the user has selected the encrypt file location box and its lenghth is greater than 0.\n    if (typing == 1 && encryptFileLocation.length() > 0) {\n        // Effectively deletes the last character but setting it to the substring up till that point.\n        encryptFileLocation = encryptFileLocation.substr(0, encryptFileLocation.length() - 1);\n        // Also applying to the shortened string.\n        concEncryptFileLocation = concEncryptFileLocation.substr(0, concEncryptFileLocation.length() - 1);\n        // Resets the text string.\n        encryptFileLocationText.setString(concEncryptFileLocation);\n        // Checks for truncation.\n        checkLocationLength(true);\n    }\n    else if (typing == 2) {\n        decryptFileLocation = decryptFileLocation.substr(0, decryptFileLocation.length() - 1);\n        concDecryptFileLocation = concDecryptFileLocation.substr(0, concDecryptFileLocation.length() - 1);\n        decryptFileLocationText.setString(concDecryptFileLocation);\n        checkLocationLength(false);\n    }\n}\n\n// This method checks if any button is pressed, similar to the highlight method.\nvoid TextEncryptor::handleEvents(float x, float y) {\n    pressButton(x, y, &encryptButton, "encrypt", &encryptText);\n    pressButton(x, y, &decryptButton, "decrypt", &decryptText);\n    pressButton(x, y, &playfairButton, "playfair", &playfairText);\n    pressButton(x, y, &hillButton, "hill", &hillText);\n    pressButton(x, y, &colTranspoButton, "col", &colTranspoText);\n    pressButton(x, y, &colPlayfairButton, "colPlayfair", &colPlayfairText1, &colPlayfairText2);\n    pressButton(x, y, &colHillButton, "colHill", &colHillText1, &colHillText2);\n    pressButton(x, y, &encryptFileSelector, "eFile", &encryptFileLocationText);\n    pressButton(x, y, &decryptFileSelector, "dFile", &decryptFileLocationText);\n}\n\n// Does the actual highlighting of the button.\nvoid TextEncryptor::highlightButton(int x, int y, sf::Sprite *button, std::string key, sf::Text *text, sf::Text *text2) {\n    // Gets the state of the button sprite.\n    int *keyPointer = &buttonMap.at(key);\n\n    // If the button contains the mouse.\n    if (button->getGlobalBounds().contains(x, y)) {\n        // If the button state is idle (not highlighted or clicked).\n        if (*keyPointer == 0) {\n            // If highlighted, sets the button color to a lower transparency.\n            button->setColor(sf::Color(255, 255, 255, 100));\n            // Also sets text to lower transparency, if both exist.\n            text->setColor(sf::Color(0, 0, 0, 100));\n            if (text2 != NULL)\n                text2->setColor(sf::Color(0, 0, 0, 100));\n            *keyPointer = 1;\n        }\n    }\n    // Else if the button does not contain the mouse and its highlighted, the button will be unhighlighted.\n    else if (*keyPointer == 1)\n        unhighlightButton(button, keyPointer, text, text2);\n}\n\nvoid TextEncryptor::pressButton(int x, int y, sf::Sprite *button, std::string key, sf::Text *text, sf::Text *text2) {\n    int *keyPointer = &buttonMap.at(key);\n    // If the button contains the mouse position, handles the click accordingly.\n    if (button->getGlobalBounds().contains(x, y)) {\n        handleClick(key);\n        // If a cipher button is clicked, this will unhighlight all other cipher buttons.\n        unhighlightButtons(cipherType);\n    }\n    else {\n        // If no button was clicked, but a random space was, the encryptfileselector will be unselected, assuming it was selected in the first place.\n        if (button == &encryptFileSelector && typing == 1) {\n            typing = 0;\n            encryptFileSelector.setColor(sf::Color(255, 255, 255));\n            encryptFileLocationText.setColor(sf::Color(0, 0, 0));\n        }\n        // Same but for decryption.\n        if (button == &decryptFileSelector && typing == 2) {\n            typing = 0;\n            decryptFileSelector.setColor(sf::Color(255, 255, 255));\n            decryptFileLocationText.setColor(sf::Color(0, 0, 0));\n        }\n    }\n\n}\n\n// Unhighlights each cipher button, based on whether or not it is selected.\nvoid TextEncryptor::unhighlightButton(sf::Sprite *button, int *keyPointer, sf::Text *text, sf::Text *text2) {\n    // If the cipher type is playfair but playfair is not moused over, sets its color to green.\n    if (button == &playfairButton && cipherType == 0) {\n        playfairButton.setColor(sf::Color(0, 255, 0));\n        playfairText.setColor(sf::Color(0, 255, 0));\n    }\n\n    // Same for all others.\n    else if (button == &hillButton && cipherType == 1) {\n        hillButton.setColor(sf::Color(0, 255, 0));\n        hillText.setColor(sf::Color(0, 255, 0));\n    }\n\n    else if (button == &colTranspoButton && cipherType == 2) {\n        colTranspoButton.setColor(sf::Color(0, 255, 0));\n        colTranspoText.setColor(sf::Color(0, 255, 0));\n    }\n\n    else if (button == &colPlayfairButton && cipherType == 3) {\n        colPlayfairButton.setColor(sf::Color(0, 255, 0));\n        colPlayfairText1.setColor(sf::Color(0, 255, 0));\n        colPlayfairText2.setColor(sf::Color(0, 255, 0));\n    }\n\n    else if (button == &colHillButton && cipherType == 4) {\n        colHillButton.setColor(sf::Color(0, 255, 0));\n        colHillText1.setColor(sf::Color(0, 255, 0));\n        colHillText2.setColor(sf::Color(0, 255, 0));\n    }\n\n    else if (button == &encryptFileSelector && typing == 1) {\n        encryptFileSelector.setColor(sf::Color(0, 255, 0));\n        encryptFileLocationText.setColor(sf::Color(0, 255, 0));\n    }\n\n    else if (button == &decryptFileSelector && typing == 2) {\n        decryptFileSelector.setColor(sf::Color(0, 255, 0));\n        decryptFileLocationText.setColor(sf::Color(0, 255, 0));\n    }\n\n    // Else the button is simply unhighlighted and its color will be its normal one.\n    else {\n        button->setColor(sf::Color(255, 255, 255));\n        if (text != NULL)\n            text->setColor(sf::Color(0, 0, 0));\n        if (text2 != NULL)\n            text2->setColor(sf::Color(0, 0, 0));\n    }\n\n    // Sets its state back to resting state.\n    *keyPointer = 0;\n}\n\n// Unhighlights every other button if a cipher button is clicked.\nvoid TextEncryptor::unhighlightButtons(int b) {\n    switch (b) {\n        case 0:\n            // If playfair is clicked, unhighlights all other buttons.\n            hillButton.setColor(sf::Color(255, 255, 255));\n            hillText.setColor(sf::Color(0, 0, 0));\n            colTranspoButton.setColor(sf::Color(255, 255, 255));\n            colTranspoText.setColor(sf::Color(0, 0, 0));\n            colPlayfairButton.setColor(sf::Color(255, 255, 255));\n            colPlayfairText1.setColor(sf::Color(0, 0, 0));\n            colPlayfairText2.setColor(sf::Color(0, 0, 0));\n            colHillButton.setColor(sf::Color(255, 255, 255));\n            colHillText1.setColor(sf::Color(0, 0, 0));\n            colHillText2.setColor(sf::Color(0, 0, 0));\n            break;\n        case 1:\n            // If hill is clicked, unhighlights all other buttons.\n            playfairButton.setColor(sf::Color(255, 255, 255));\n            playfairText.setColor(sf::Color(0, 0, 0));\n            colTranspoButton.setColor(sf::Color(255, 255, 255));\n            colTranspoText.setColor(sf::Color(0, 0, 0));\n            colPlayfairButton.setColor(sf::Color(255, 255, 255));\n            colPlayfairText1.setColor(sf::Color(0, 0, 0));\n            colPlayfairText2.setColor(sf::Color(0, 0, 0));\n            colHillButton.setColor(sf::Color(255, 255, 255));\n            colHillText1.setColor(sf::Color(0, 0, 0));\n            colHillText2.setColor(sf::Color(0, 0, 0));\n            break;\n        case 2:\n            // If columnar transposition is clicked, unhighlights all other buttons.\n            playfairButton.setColor(sf::Color(255, 255, 255));\n            playfairText.setColor(sf::Color(0, 0, 0));\n            hillButton.setColor(sf::Color(255, 255, 255));\n            hillText.setColor(sf::Color(0, 0, 0));\n            colPlayfairButton.setColor(sf::Color(255, 255, 255));\n            colPlayfairText1.setColor(sf::Color(0, 0, 0));\n            colPlayfairText2.setColor(sf::Color(0, 0, 0));\n            colHillButton.setColor(sf::Color(255, 255, 255));\n            colHillText1.setColor(sf::Color(0, 0, 0));\n            colHillText2.setColor(sf::Color(0, 0, 0));\n            break;\n        case 3:\n            // If columnar transposition playfair is clicked, unhighlights all other buttons.\n            playfairButton.setColor(sf::Color(255, 255, 255));\n            playfairText.setColor(sf::Color(0, 0, 0));\n            hillButton.setColor(sf::Color(255, 255, 255));\n            hillText.setColor(sf::Color(0, 0, 0));\n            colTranspoButton.setColor(sf::Color(255, 255, 255));\n            colTranspoText.setColor(sf::Color(0, 0, 0));\n            colHillButton.setColor(sf::Color(255, 255, 255));\n            colHillText1.setColor(sf::Color(0, 0, 0));\n            colHillText2.setColor(sf::Color(0, 0, 0));\n            break;\n        case 4:\n            // If columnar transposition hill is clicked, unhighlights all other buttons.\n            playfairButton.setColor(sf::Color(255, 255, 255));\n            playfairText.setColor(sf::Color(0, 0, 0));\n            hillButton.setColor(sf::Color(255, 255, 255));\n            hillText.setColor(sf::Color(0, 0, 0));\n            colTranspoButton.setColor(sf::Color(255, 255, 255));\n            colTranspoText.setColor(sf::Color(0, 0, 0));\n            colPlayfairButton.setColor(sf::Color(255, 255, 255));\n            colPlayfairText1.setColor(sf::Color(0, 0, 0));\n            colPlayfairText2.setColor(sf::Color(0, 0, 0));\n            break;\n    }\n}\n\n// Sets the color of the button to green if it was clicked and acts accordingly.\nvoid TextEncryptor::handleClick(std::string key) {\n    // If playfair makes button green and sets the cipher type accordingly.\n    if (key == "playfair") {\n        cipherType = 0;\n        playfairButton.setColor(sf::Color(0, 255, 0));\n        playfairText.setColor(sf::Color(0, 255, 0));\n    }\n    // Same but for hill.\n    if (key == "hill") {\n        cipherType = 1;\n        hillButton.setColor(sf::Color(0, 255, 0));\n        hillText.setColor(sf::Color(0, 255, 0));\n    }\n    // Etc.\n    if (key == "col") {\n        cipherType = 2;\n        colTranspoButton.setColor(sf::Color(0, 255, 0));\n        colTranspoText.setColor(sf::Color(0, 255, 0));\n    }\n    if (key == "colPlayfair") {\n        cipherType = 3;\n        colPlayfairButton.setColor(sf::Color(0, 255, 0));\n        colPlayfairText1.setColor(sf::Color(0, 255, 0));\n        colPlayfairText2.setColor(sf::Color(0, 255, 0));\n    }\n    if (key == "colHill") {\n        cipherType = 4;\n        colHillButton.setColor(sf::Color(0, 255, 0));\n        colHillText1.setColor(sf::Color(0, 255, 0));\n        colHillText2.setColor(sf::Color(0, 255, 0));\n    }\n    // If the encrypt button was clicked the program will encrypt the file based on the location given.\n    if (key == "encrypt")\n        encryptFile();\n    // If the decrypt button was clicked.\n    else if (key == "decrypt")\n        decryptFile();\n\n    // If encrypt file location was clicked.\n    if (key == "eFile") {\n        // Informs program the user is typing in the encryption file location.\n        typing = 1;\n        // Sets encryption file location color.\n        encryptFileSelector.setColor(sf::Color(0, 255, 0));\n        encryptFileLocationText.setColor(sf::Color(0, 255, 0));\n\n        decryptFileSelector.setColor(sf::Color(255, 255, 255));\n        decryptFileLocationText.setColor(sf::Color(0, 0, 0));\n    }\n    // Same but for decryption file location.\n    else if (key == "dFile") {\n        typing = 2;\n        decryptFileSelector.setColor(sf::Color(0, 255, 0));\n        decryptFileLocationText.setColor(sf::Color(0, 255, 0));\n\n        encryptFileSelector.setColor(sf::Color(255, 255, 255));\n        encryptFileLocationText.setColor(sf::Color(0, 0, 0));\n    }\n\n    // If the user was typing but selects a button other than the two file locations, it unhighlights them both and infroms the program the user has stopped typing.\n    if (typing && key != "eFile" && key != "dFile") {\n        typing = 0;\n        encryptFileSelector.setColor(sf::Color(255, 255, 255));\n        encryptFileLocationText.setColor(sf::Color(0, 0, 0));\n        decryptFileSelector.setColor(sf::Color(255, 255, 255));\n        decryptFileLocationText.setColor(sf::Color(0, 0, 0));\n    }\n}\n\nvoid TextEncryptor::drawObjects() {\n    // Draws all UI elements.\n    window.draw(encryptButton);\n    window.draw(decryptButton);\n    window.draw(playfairButton);\n    window.draw(hillButton);\n    window.draw(colTranspoButton);\n    window.draw(colPlayfairButton);\n    window.draw(colHillButton);\n    window.draw(encryptFileSelector);\n    window.draw(decryptFileSelector);\n\n    window.draw(encryptTitleText);\n    window.draw(decryptTitleText);\n    window.draw(encryptText);\n    window.draw(decryptText);\n    window.draw(playfairText);\n    window.draw(hillText);\n    window.draw(colTranspoText);\n    window.draw(colPlayfairText1);\n    window.draw(colPlayfairText2);\n    window.draw(colHillText1);\n    window.draw(colHillText2);\n    window.draw(chooseELocation);\n    window.draw(chooseDLocation);\n    window.draw(encryptFileLocationText);\n    window.draw(decryptFileLocationText);\n}\n\n// Creates all the buttons.\nvoid TextEncryptor::createUI() {\n    // Creates the button textures from the file path.\n    buttonT.loadFromFile(resourcePath() + "Button.png");\n    button2T.loadFromFile(resourcePath() + "Button2.png");\n    selectorT.loadFromFile(resourcePath() + "FolderSelector.png");\n\n    // Sets the sprites to the texture by using an intermediate sprite.\n    sf::Sprite encryptButton(button2T);\n    this->encryptButton = encryptButton;\n    sf::Sprite decryptButton(button2T);\n    this->decryptButton = decryptButton;\n    sf::Sprite playfairButton(buttonT);\n    this->playfairButton = playfairButton;\n    sf::Sprite hillButton(buttonT);\n    this->hillButton = hillButton;\n    sf::Sprite rowTranspoButton(buttonT);\n    this->colTranspoButton = rowTranspoButton;\n    sf::Sprite rowPlayfairButton(buttonT);\n    this->colPlayfairButton = rowPlayfairButton;\n    sf::Sprite rowHillButton(buttonT);\n    this->colHillButton = rowHillButton;\n\n    sf::Sprite encryptFileSelector(selectorT);\n    this->encryptFileSelector = encryptFileSelector;\n    sf::Sprite decryptFileSelector(selectorT);\n    this->decryptFileSelector = decryptFileSelector;\n\n    // Sets the respective positions.\n    this->encryptButton.setPosition(275, 165);\n    this->decryptButton.setPosition(275, 400);\n\n    this->playfairButton.setPosition(37.5, 500);\n    this->hillButton.setPosition(187.5, 500);\n    this->colTranspoButton.setPosition(337.5, 500);\n    this->colPlayfairButton.setPosition(487.5, 500);\n    this->colHillButton.setPosition(637.5, 500);\n\n    this->encryptFileSelector.setPosition(150, 65);\n    this->decryptFileSelector.setPosition(150, 300);\n}\n\n// Largely same as for buttons.\nvoid TextEncryptor::createText() {\n    // Creates fonts from file path.\n    buttonFont.loadFromFile(resourcePath() + "typewcond_regular.otf");\n    titleFont.loadFromFile(resourcePath() + "sansation.ttf");\n    fileSelectorFont.loadFromFile(resourcePath() + "NixieOne.ttf");\n\n    // Sets base text that is used to create other texts by setting size, color and font.\n    sf::Text blankText;\n    blankText.setFont(buttonFont);\n    blankText.setCharacterSize(32);\n    blankText.setColor(sf::Color::Black);\n\n    sf::Text titleText;\n    titleText.setFont(titleFont);\n    titleText.setColor(sf::Color::Black);\n    titleText.setCharacterSize(34);\n\n    sf::Text selectorText;\n    selectorText.setFont(fileSelectorFont);\n    selectorText.setColor(sf::Color::Black);\n    selectorText.setCharacterSize(34);\n\n    // Sets individual text to base text, sets string and position.\n    playfairText = blankText;\n    playfairText.setString("Playfair");\n    playfairText.setPosition(45, 515);\n\n    hillText = blankText;\n    hillText.setString("Hill");\n    hillText.setPosition(220, 515);\n\n    colTranspoText = blankText;\n    colTranspoText.setString("Transpo");\n    colTranspoText.setPosition(350, 515);\n\n    colPlayfairText1 = blankText;\n    colPlayfairText2 = blankText;\n    colPlayfairText1.setString("Transpo");\n    colPlayfairText2.setString("Playfair");\n    colPlayfairText1.setPosition(500, 500);\n    colPlayfairText2.setPosition(495, 530);\n\n    colHillText1 = blankText;\n    colHillText2 = blankText;\n    colHillText1.setString("Transpo");\n    colHillText2.setString("Hill");\n    colHillText1.setPosition(650, 500);\n    colHillText2.setPosition(675, 530);\n\n    encryptText = blankText;\n    encryptText.setString("Encrypt");\n    encryptText.setCharacterSize(52);\n    encryptText.setPosition(315, 165);\n\n    decryptText = blankText;\n    decryptText.setString("Decrypt");\n    decryptText.setCharacterSize(52);\n    decryptText.setPosition(315, 400);\n\n    encryptTitleText = titleText;\n    encryptTitleText.setString("Please select the text file that you wish to encrypt.");\n    encryptTitleText.setPosition(20, 15);\n\n    decryptTitleText = titleText;\n    decryptTitleText.setString("Please select the text file that you wish to decrypt.");\n    decryptTitleText.setPosition(20, 250);\n\n    encryptFileLocationText = selectorText;\n    encryptFileLocationText.setPosition(155, 77.5);\n\n    decryptFileLocationText = selectorText;\n    decryptFileLocationText.setPosition(155, 312.5);\n}\n\n// Creates the hashmap that tells the program whether a button is highlighted or not. A hashmap was needed so that it could be easily seen which button had what state.\nvoid TextEncryptor::createHashMap() {\n    // Each button\'s key and value clearly created and inserted into the button map..\n    buttonMap.insert(std::pair<std::string, int> ("encrypt", 0));\n    buttonMap.insert(std::pair<std::string, int> ("decrypt", 0));\n    buttonMap.insert(std::pair<std::string, int> ("playfair", 0));\n    buttonMap.insert(std::pair<std::string, int> ("hill", 0));\n    buttonMap.insert(std::pair<std::string, int> ("col", 0));\n    buttonMap.insert(std::pair<std::string, int> ("colPlayfair", 0));\n    buttonMap.insert(std::pair<std::string, int> ("colHill", 0));\n    buttonMap.insert(std::pair<std::string, int> ("eFile", 0));\n    buttonMap.insert(std::pair<std::string, int> ("dFile", 0));\n}\n\n// This is the method that feeds the relevant information into the encryptor class.\nvoid TextEncryptor::encryptFile() {\n    // The former string is the message itself that needs to be passed (the text in the text file). The latter string is the encrypted version of that text.\n    std::string message, cipherText;\n    // The object that reads the text file.\n    std::ifstream cipherFileIn;\n    // Adds an exception if the stream fails to read the file (if an error occurs this guarantees the program will not crash on the user).\n    cipherFileIn.exceptions(ifstream::failbit);\n    // Ensures that the file reader does NOT skip spaces.\n    cipherFileIn >> std::noskipws;\n    // The object that outputs the encrypted text to a new file.\n    std::ofstream cipherFileOut;\n    // Same as previous.\n    cipherFileOut << std::noskipws;\n\n    // If the user never selected a file type, the program will highlight red and nothing will occur. Otherwise, the program continues as per normal.\n    if (cipherType == -1) {\n        successMessage(false, true);\n        return;\n    }\n\n    // Tries to open file. Otherwise, the same as above.\n    try {\n        cipherFileIn.open(encryptFileLocation, std::ifstream::in);\n    }\n    catch (ifstream::failure e) {\n        successMessage(false, true);\n        return;\n    }\n\n    // This is the primitive object used to store each character of the read file.\n    char character;\n    try {\n        // While the reader is not at the end of the file, the reader will read each character.\n        while (!cipherFileIn.eof()) {\n            // Sets the storage object to the file character.\n            cipherFileIn >> character;\n            // Adds this character to the message.\n            message += character;\n        }\n        // Closes the file.\n        cipherFileIn.close();\n    }\n    // If for some reason, the program fails during reading, ensures that the application will not exit.\n    catch (ifstream::failure e) {\n        successMessage(false, true);\n        return;\n    }\n\n    // The file reader will read the last letter twice. To avoid an extra letter, the program truncates the message to obliviate the last character.\n    message = message.substr(0, message.length() - 1);\n    // Gets the encryptor to encrypt the message.\n    Encryptor::Encryptor encryptor(cipherType, message);\n    // Gets the encrypted text of the file.\n    cipherText = encryptor.giveCipherText();\n\n    // Opens the same file.\n    cipherFileOut.open(encryptFileLocation, std::ifstream::out);\n    // Writes the encrypted text to the file. NOTE: This overwrites the original text.\n    cipherFileOut << cipherText;\n    // Closes text.\n    cipherFileOut.close();\n\n    // Highlights the encryption button to let the user know of his/her success.\n    successMessage(true, true);\n}\n\n// Same as the above.\nvoid TextEncryptor::decryptFile() {\n    std::string message, plainText;\n    std::ifstream cipherFileIn;\n    cipherFileIn.exceptions(ifstream::failbit);\n    cipherFileIn >> std::noskipws;\n    std::ofstream cipherFileOut;\n    cipherFileOut << std::noskipws;\n\n    try {\n        cipherFileIn.open(decryptFileLocation, std::ifstream::in);\n    }\n    catch (ifstream::failure e) {\n        successMessage(false, false);\n        return;\n    }\n\n    char character;\n    try {\n        while (!cipherFileIn.eof()) {\n            cipherFileIn >> character;\n            message += character;\n        }\n        cipherFileIn.close();\n    }\n    catch (ifstream::failure e) {\n        successMessage(false, false);\n        return;\n    }\n\n    message = message.substr(0, message.length() - 1);\n    Decryptor::Decryptor decryptor(message);\n    plainText = decryptor.givePlainText();\n\n    cipherFileOut.open(decryptFileLocation, std::ifstream::out);\n    cipherFileOut << plainText;\n    cipherFileOut.close();\n\n    successMessage(true, false);}\n\n// This is what highlights the encryption button as red or green.\nvoid TextEncryptor::successMessage(bool success, bool encrypt) {\n    // If the program did not encounter an exception.\n    if (success) {\n        // If encrypting.\n        if (encrypt) {\n            // Highlights encryption button green.\n        encryptButton.setColor(sf::Color(0, 255, 0));\n        encryptText.setColor(sf::Color(0, 255, 0));\n        }\n        else {\n            // Highlights decryption button red.\n        decryptButton.setColor(sf::Color(0, 255, 0));\n        decryptText.setColor(sf::Color(0, 255, 0));\n        }\n    }\n    else {\n        if (encrypt) {\n            // Highlights encryption button green.\n            encryptButton.setColor(sf::Color(255, 0, 0));\n            encryptText.setColor(sf::Color(255, 0, 0));\n        }\n        else {\n            // Highlights decryption button red.\n            decryptButton.setColor(sf::Color(255, 0, 0));\n            decryptText.setColor(sf::Color(255, 0, 0));\n        }\n    }\n}//\n//  TextEncryptor.h\n//  Text Encryptor\n//\n//  Created by Akshay Subramaniam on 5/5/15.\n//  Copyright (c) 2015 Incultus. All rights reserved.\n//\n\n#ifndef __Text_Encryptor__TextEncryptor__\n#define __Text_Encryptor__TextEncryptor__\n\n#include &lt;stdio.h&gt;\n#include &lt;SFML/Audio.hpp&gt;\n#include &lt;SFML/Graphics.hpp&gt;\n#include "Encryptor.h"\n#include "Decryptor.h"\n#include "ResourcePath.hpp"\n#include &lt;map&gt;\n#include &lt;future&gt;\n#include &lt;chrono&gt;\n#include &lt;thread&gt;\n#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;\n#include &lt;fstream&gt;\n\n#endif /* defined(__Text_Encryptor__TextEncryptor__) */\n\nclass TextEncryptor {\npublic:\n    // Class constructor.\n    TextEncryptor(sf::RenderWindow *window);\n\n    // The texts that make up the UI.\n    sf::Text encryptTitleText, decryptTitleText;\n    sf::Text encryptText, decryptText;\n    sf::Text encryptFileLocationText, decryptFileLocationText;\n    sf::Text playfairText, hillText, colTranspoText, colPlayfairText1, colPlayfairText2,\n    colHillText1, colHillText2;\n    // The buttons.\n    sf::Text chooseELocation, chooseDLocation;\n    sf::Sprite encryptButton, decryptButton;\n    sf::Sprite playfairButton, hillButton, colTranspoButton, colPlayfairButton, colHillButton;\n    sf::Sprite encryptFileSelector, decryptFileSelector;\n\n    void checkButtons(float x, float y);\n    void handleEvents(float x, float y);\n    void handleTyping(char);\n    void checkLocationLength(bool encrypt);\n    void backspace();\n    void drawObjects();\nprivate:\n    // The type that determines which cipher is used in encryption.\n    int cipherType = -1;\n    // Whether or not the user is typing in a location of either encryption or decryption.\n    int typing = 0;\n    // The strings for each location.\n    std::string encryptFileLocation = "", decryptFileLocation = "";\n    // THe shortened strings.\n    std::string concEncryptFileLocation, concDecryptFileLocation;\n    // Render window.\n    sf::RenderWindow &window;\n    // Textures for buttons, and fonts for texts.\n    sf::Texture buttonT, button2T, selectorT;\n    sf::Font buttonFont, titleFont, fileSelectorFont;\n    // Hashmap for button states.\n    std::map&lt;std::string, int&gt; buttonMap;\n\n    void createUI();\n    void createText();\n    void createHashMap();\n\n    void highlightButton(int, int, sf::Sprite*, std::string, sf::Text*, sf::Text* = NULL);\n    void pressButton(int, int, sf::Sprite*, std::string, sf::Text*, sf::Text* = NULL);\n    void handleClick(std::string);\n    void unhighlightButton(sf::Sprite*, int*, sf::Text*, sf::Text*);\n    void unhighlightButtons(int);\n\n    void encryptFile();\n    void decryptFile();\n    void successMessage(bool, bool);\n};')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-c++"},'//\n//  Encryptor.cpp\n//  File Encryptor\n//\n//  Created by Akshay Subramaniam on 9/6/15.\n//  Copyright (c) 2015 Incultus. All rights reserved.\n//\n\n#include "Encryptor.h"\n\nEncryptor::Encryptor(vector&lt;uint8_t&gt; byteVector, int type) : byteVector(byteVector), type(type) {\n    initializeKey();\n    switch (type) {\n        case 0:\n            // Executes ECB cipher encryption.\n            ECBEncrypt();\n            break;\n        case 1:\n            // Executes CBC cipher encryption.\n            CBCEncrypt();\n            break;\n        case 2:\n            // Executes CTR cipher encryption.\n            CTREncrypt();\n            break;\n    }\n    // Gives the identifier for the encryptor.\n    tailEncrypt();\n}\n\nvoid Encryptor::initializeKey() {\n    // Creates the randomly-developed array.\n    uint8_t keyArray[] = {134, 44, 27, 173, 229};\n    // Sets the vector via a fast way using the array.\n    for (int i = 0; i &lt; 5; ++ i)\n        key.push_back(keyArray[i]);\n}\n\n// Standard Electronic Codebook mode with a rotating key.\nvoid Encryptor::ECBEncrypt() {\n    // Encrypts every byte in the file and then adds to the encrypted file vector.\n    for (vector&lt;uint8_t&gt;::iterator byte = byteVector.begin(); byte != byteVector.end(); ++ byte)\n        // XORs the byte with the rotating key, thereby encrypting it.\n        encryptedByteVector.push_back(getXOR(*byte, getKey()));\n}\n\n// Cipher Block Chaining mode with a rotating key.\nvoid Encryptor::CBCEncrypt() {\n    // Gets the randomly generated initialization vector.\n    srand(time(NULL));\n    uint8_t initializationVector = rand() % 256;\n    // XORs the first plaintext byte with the initialization vector.\n    uint8_t oldByte = getXOR(byteVector.front(), initializationVector);\n    // Encrypts the first byte by XORing the newly created byte (old byte) with the key byte to get the encrypted byte.\n    oldByte = getXOR(oldByte, getKey());\n    // Adds the XORd encrypted byte to the encryption byte vector.\n    encryptedByteVector.push_back(oldByte);\n    // Adds the rest of the bytes.\n    for (vector&lt;uint8_t&gt;::iterator byte = byteVector.begin() + 1; byte != byteVector.end(); ++ byte) {\n        // Creates new byte by XORing current plaintext byte with the previous encrypted byte.\n        uint8_t newByte = getXOR(*byte, oldByte);\n        // XORs this new byte with the key byte to get the encrypted byte.\n        newByte = getXOR(newByte, getKey());\n        // Adds the XORd encrypted byte to the encryption byte vector.\n        encryptedByteVector.push_back(newByte);\n        // Sets this byte as the previous vector for the next iteration of the loop.\n        oldByte = newByte;\n    }\n    // Gives the initialization vector as part of the cipher text. This is for decryption purposes.\n    encryptedByteVector.push_back(initializationVector);\n}\n\n// Counter mode with a rotating key.\nvoid Encryptor::CTREncrypt() {\n    // Gets the randomly generated initialization vector.\n    srand(time(NULL));\n    uint8_t initializationVector = rand() % 256;\n    // Acquires the counter byte, which gives the name of this cipher, and the integer that represents it.\n    int counterInt = 0;\n    uint8_t counterByte = counterInt;\n    // The XORd initialization vector and the counter.\n    uint8_t combined;\n    // The encrypted byte.\n    uint8_t encryptedByte;\n    // Adds all the bytes.\n    for (vector&lt;uint8_t&gt;::iterator byte = byteVector.begin(); byte != byteVector.end(); ++ byte) {\n        // Gets the combined initialization vector and the counter by XORing them together.\n        combined = getXOR(counterByte, initializationVector);\n        // XORs the first plaintext byte with the combined byte.\n        encryptedByte = getXOR(*byte, combined);\n        // Encrypts the first byte by XORing the newly created byte with the key byte to get the encrypted byte.\n        encryptedByte = getXOR(encryptedByte, getKey());\n        // Adds the XORd encrypted byte to the encryption byte vector.\n        encryptedByteVector.push_back(encryptedByte);\n        // Increases counter and sets byte accordingly.\n        counterByte = ++ counterInt;\n\n        // If counter is greater than 255, resets the counter.\n        if (counterInt &gt; 255)\n            counterByte = (counterInt = 0);\n    }\n    // Gives the initialization vector as part of the cipher text. This is for decryption purposes.\n    encryptedByteVector.push_back(initializationVector);\n}\n\nvoid Encryptor::tailEncrypt() {\n    uint8_t identifier;\n    switch (type) {\n        case 0:\n            // If the simplest encryption, adds the extra decimal 25.\n            identifier = 25;\n            break;\n        case 1:\n            // If the normal encryption, adds the extra decimal 142.\n            identifier = 142;\n            break;\n        case 2:\n            // If the normal encryption, adds the extra decimal 213.\n            identifier = 213;\n            break;\n    }\n    encryptedByteVector.push_back(identifier);\n}\n\nuint8_t Encryptor::getKey() {\n    // Gets the byte that will be returned by selecting a byte from the key\'s rotation.\n    uint8_t keyByte = key.at(count - 1);\n    // Increases count to rotate the key.\n    ++ count;\n    // Ensures that count is always above zero and below six. That way when count is passed as a position there is no out of bounds exception.\n    if (count != 5)\n        count %= 5;\n    // Returns the byte.\n    return keyByte;\n}\n\n// XORs one byte with another.\nuint8_t Encryptor::getXOR(uint8_t firstByte, uint8_t secondByte) {\n    return firstByte ^= secondByte;\n}\n\n// Returns encrypted file expressed as a vector.\nvector&lt;uint8_t&gt; Encryptor::getEncryptedFile() {\n    return encryptedByteVector;\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-c++"},"//\n//  Decryptor.cpp\n//  File Encryptor\n//\n//  Created by Akshay Subramaniam on 9/6/15.\n//  Copyright (c) 2015 Incultus. All rights reserved.\n//\n\n#include \"Decryptor.h\"\n\nDecryptor::Decryptor(vector&lt;uint8_t&gt; byteVector) : byteVector(byteVector) {\n    // Initializes rotating key.\n    initializeKey();\n    // Removes the identifier of the encrypted file.\n    type = tailDecrypt();\n    switch (type) {\n        case 0:\n            // Executes ECB cipher decryption.\n            ECBDecrypt();\n            break;\n        case 1:\n            // Executes CBC cipher decryption.\n            CBCDecrypt();\n            break;\n        case 2:\n            // Executes CTR cipher decryption.\n            CTRDecrypt();\n            break;\n    }\n}\n\nvoid Decryptor::initializeKey() {\n    // Creates the randomly-developed array.\n    uint8_t keyArray[] = {134, 44, 27, 173, 229};\n    // Sets the vector via a fast way using the array.\n    for (int i = 0; i &lt; 5; ++ i)\n        key.push_back(keyArray[i]);\n}\n\n// Standard Electronic Codebook mode with a rotating key.\nvoid Decryptor::ECBDecrypt() {\n    // Decrypts every byte in the file and then adds to the decrypts file vector.\n    for (vector&lt;uint8_t&gt;::iterator byte = byteVector.begin(); byte != byteVector.end(); ++ byte)\n        // XORs the encrypted byte with the rotating key, thereby decrypting it.\n        decryptedByteVector.push_back(getXOR(*byte, getKey()));\n}\n\n// Cipher Block Chaining mode with a rotating key.\nvoid Decryptor::CBCDecrypt() {\n    // Gets the randomly generated initialization vector.\n    uint8_t initializationVector = byteVector.back();\n    // This is a temporary vector, as it contains the values for the decrypted vector backwards. This is because this program decrypts the CBC cipher in a backwards direction.\n    vector&lt;uint8_t&gt; tempVector;\n    // Removes the initialization vector.\n    byteVector.pop_back();\n    // Sets the count, which should be the LAST count when encrypted.\n    count = byteVector.size() % 5;\n\n    // This loop adds the decrypted bytes in a BACKWARDS fashion to the temporary vector.\n    for (vector&lt;uint8_t&gt;::iterator byte = byteVector.end(); byte != byteVector.begin(); -- byte) {\n        // XORs the encrypted byte with the key to remove the first layer of encryption.\n        uint8_t newByte = getXOR(*byte, getKeyBackwards());\n        // XORs this byte with the previous encrypted byte to get the plaintext byte.\n        newByte = getXOR(newByte, *(byte - 1));\n        // Adds this decrypted byte to the temporary vector.\n        tempVector.push_back(newByte);\n    }\n\n    // The final (positionally first) byte is XORd with the key to get the unveiled byte.\n    uint8_t lastByte = getXOR(byteVector.front(), getKeyBackwards());\n    // XORS the this byte to get the final decrypted byte.\n    lastByte = getXOR(lastByte, initializationVector);\n    // Adds this byte to the temporary vector.\n    tempVector.push_back(lastByte);\n\n    // Reorders the vector by adding elements to the decryption vector backwards.\n    for (vector&lt;uint8_t&gt;::iterator byte = tempVector.end() - 1; byte != tempVector.begin() - 1; -- byte)\n        decryptedByteVector.push_back(*byte);\n}\n\n// Counter mode with a rotating key.\nvoid Decryptor::CTRDecrypt() {\n    // Gets the randomly generated initialization vector, and removes it from the vector list.\n    uint8_t initializationVector = byteVector.back();\n    byteVector.pop_back();\n    // Acquires the counter byte, which gives the name of this cipher, and the integer that represents it.\n    int counterInt = 0;\n    uint8_t counterByte = counterInt;\n    // The XORd initialization vector and the counter.\n    uint8_t combined;\n    // The decrypted byte.\n    uint8_t decryptedByte;\n    // Adds all the bytes.\n    for (vector&lt;uint8_t&gt;::iterator byte = byteVector.begin(); byte != byteVector.end(); ++ byte) {\n        // Removes one layer of encryption from the byte by XORing it with the key.\n        decryptedByte = getXOR(*byte, getKey());\n        // Gets the combined initialization vector and the counter by XORing them together.\n        combined = getXOR(counterByte, initializationVector);\n        // Gets the decrypted byte by XORing it with the combined byte.\n        decryptedByte = getXOR(decryptedByte, combined);\n        // Adds the XORd decrypted byte to the decryption byte vector.\n        decryptedByteVector.push_back(decryptedByte);\n        // Increases counter and sets byte accordingly.\n        counterByte = ++ counterInt;\n\n        // If counter is greater than 255, resets the counter.\n        if (counterInt &gt; 255)\n            counterByte = (counterInt = 0);\n    }\n}\n\nint Decryptor::tailDecrypt() {\n    // Variable for cipher type.\n    int newType = -1;\n    // If the identifier was created by an ECB cipher, and the identifier at the end is the decimal value 25.\n    if (byteVector.back() == 25)\n        newType = 0;\n\n    // If created by a CBC cipher.\n    if (byteVector.back() == 142)\n        newType = 1;\n\n    // If by a CTR cipher.\n    if (byteVector.back() == 213)\n        newType = 2;\n\n    // Removes identifier.\n    byteVector.pop_back();\n    // Gives cipher type.\n    return newType;\n}\n\nuint8_t Decryptor::getKey() {\n    // Gets the byte that will be returned by selecting a byte from the key's rotation.\n    uint8_t keyByte = key.at(count - 1);\n    // Increases count to rotate the key.\n    ++ count;\n    // Ensures that count is always above zero and below one. That way when count is passed as a position there is no out of bounds exception.\n    if (count != 5)\n        count %= 5;\n    // Returns the byte.\n    return keyByte;\n}\n\n// Used for getting the key while going from the end of the byte vector to the beginning.\nuint8_t Decryptor::getKeyBackwards() {\n    // Gets the byte that will be returned by selecting a byte from the key's rotation.\n    uint8_t keyByte = key.at(count);\n    // Decreases count to rotate the key.\n    -- count;\n    // Ensures that count is always above or at zero and below five. That way when count is passed as a position there is no out of bounds exception.\n    if (count &lt; 0)\n        count = 4;\n    // Returns the byte.\n    return keyByte;\n}\n\n// XORs one byte with another.\nuint8_t Decryptor::getXOR(uint8_t firstByte, uint8_t secondByte) {\n    return firstByte ^= secondByte;\n}\n\nvector&lt;uint8_t&gt; Decryptor::getDecryptedFile() {\n    return decryptedByteVector;\n}")}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-c++"},'//\n//  Cipher.cpp\n//  Text Encryptor\n//\n//  Created by Akshay Subramaniam on 11/5/15.\n//  Copyright (c) 2015 Incultus. All rights reserved.\n//\n\n#include "Cipher.h"\n\n// This is the super class for all ciphers. Its primary purpose is to provide the character matrix that is used for encrypting the playfair and hill ciphers.\nCipher::Cipher(std::string message) : message(message) {\n    initializeMatrix();\n}\n\n// Creates the matrix that the subclasses use.\nvoid Cipher::initializeMatrix() {\n    //Execute without repeating letters\n    matrix[0][0] = "E";\n    matrix[0][1] = "x";\n    matrix[0][2] = "c";\n    matrix[0][3] = "u";\n    matrix[0][4] = "t";\n    matrix[0][5] = "e";\n    matrix[0][6] = "C";\n    matrix[0][7] = "i";\n    matrix[0][8] = "p";\n    matrix[1][0] = "h";\n    matrix[1][1] = "r";\n    //Filling rest of cipher with remaining symbols\n    matrix[1][2] = "a";\n    matrix[1][3] = "b";\n    matrix[1][4] = "d";\n    matrix[1][5] = "f";\n    matrix[1][6] = "g";\n    matrix[1][7] = "j";\n    matrix[1][8] = "k";\n    matrix[2][0] = "l";\n    matrix[2][1] = "m";\n    matrix[2][2] = "n";\n    matrix[2][3] = "o";\n    matrix[2][4] = "q";\n    matrix[2][5] = "s";\n    matrix[2][6] = "v";\n    matrix[2][7] = "w";\n    matrix[2][8] = "y";\n    matrix[3][0] = "z";\n    matrix[3][1] = "A";\n    matrix[3][2] = "B";\n    matrix[3][3] = "D";\n    matrix[3][4] = "F";\n    matrix[3][5] = "G";\n    matrix[3][6] = "H";\n    matrix[3][7] = "I";\n    matrix[3][8] = "J";\n    matrix[4][0] = "K";\n    matrix[4][1] = "L";\n    matrix[4][2] = "M";\n    matrix[4][3] = "N";\n    matrix[4][4] = "O";\n    matrix[4][5] = "P";\n    matrix[4][6] = "Q";\n    matrix[4][7] = "R";\n    matrix[4][8] = "S";\n    matrix[5][0] = "T";\n    matrix[5][1] = "U";\n    matrix[5][2] = "V";\n    matrix[5][3] = "W";\n    matrix[5][4] = "X";\n    matrix[5][5] = "Y";\n    matrix[5][6] = "Z";\n    matrix[5][7] = "0";\n    matrix[5][8] = "1";\n    matrix[6][0] = "2";\n    matrix[6][1] = "3";\n    matrix[6][2] = "4";\n    matrix[6][3] = "5";\n    matrix[6][4] = "6";\n    matrix[6][5] = "7";\n    matrix[6][6] = "8";\n    matrix[6][7] = "9";\n    matrix[6][8] = "!";\n    matrix[7][0] = "@";\n    matrix[7][1] = "#";\n    matrix[7][2] = "$";\n    matrix[7][3] = "%";\n    matrix[7][4] = "^";\n    matrix[7][5] = "&";\n    matrix[7][6] = "*";\n    matrix[7][7] = "(";\n    matrix[7][8] = ")";\n    matrix[8][0] = "-";\n    matrix[8][1] = "=";\n    matrix[8][2] = "+";\n    matrix[8][3] = ";";\n    matrix[8][4] = ":";\n    matrix[8][5] = "\'";\n    matrix[8][6] = "\\"";\n    matrix[8][7] = ",";\n    matrix[8][8] = "<";\n    matrix[9][0] = ".";\n    matrix[9][1] = ">";\n    matrix[9][2] = "[";\n    matrix[9][3] = "{";\n    matrix[9][4] = "]";\n    matrix[9][5] = "}";\n    matrix[9][6] = "/";\n    matrix[9][7] = "?";\n    matrix[9][8] = " ";\n}\n\n// Method responsible for giving the main textencryptor class the cipher text.\nstd::string Cipher::giveCipherText() {\n    return cipherText;\n}\n\n// Method responsible for giving the main textencryptor class the plain text.\nstd::string Cipher::givePlainText() {\n    return plainText;\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-c++"},'//\n//  Cipher.cpp\n//  Text Encryptor\n//\n//  Created by Akshay Subramaniam on 11/5/15.\n//  Copyright (c) 2015 Incultus. All rights reserved.\n//\n\n#include "Cipher.h"\n\n// This is the super class for all ciphers. Its primary purpose is to provide the character matrix that is used for encrypting the playfair and hill ciphers.\nCipher::Cipher(std::string message) : message(message) {\n    initializeMatrix();\n}\n\n// Creates the matrix that the subclasses use.\nvoid Cipher::initializeMatrix() {\n    //Execute without repeating letters\n    matrix[0][0] = "E";\n    matrix[0][1] = "x";\n    matrix[0][2] = "c";\n    matrix[0][3] = "u";\n    matrix[0][4] = "t";\n    matrix[0][5] = "e";\n    matrix[0][6] = "C";\n    matrix[0][7] = "i";\n    matrix[0][8] = "p";\n    matrix[1][0] = "h";\n    matrix[1][1] = "r";\n    //Filling rest of cipher with remaining symbols\n    matrix[1][2] = "a";\n    matrix[1][3] = "b";\n    matrix[1][4] = "d";\n    matrix[1][5] = "f";\n    matrix[1][6] = "g";\n    matrix[1][7] = "j";\n    matrix[1][8] = "k";\n    matrix[2][0] = "l";\n    matrix[2][1] = "m";\n    matrix[2][2] = "n";\n    matrix[2][3] = "o";\n    matrix[2][4] = "q";\n    matrix[2][5] = "s";\n    matrix[2][6] = "v";\n    matrix[2][7] = "w";\n    matrix[2][8] = "y";\n    matrix[3][0] = "z";\n    matrix[3][1] = "A";\n    matrix[3][2] = "B";\n    matrix[3][3] = "D";\n    matrix[3][4] = "F";\n    matrix[3][5] = "G";\n    matrix[3][6] = "H";\n    matrix[3][7] = "I";\n    matrix[3][8] = "J";\n    matrix[4][0] = "K";\n    matrix[4][1] = "L";\n    matrix[4][2] = "M";\n    matrix[4][3] = "N";\n    matrix[4][4] = "O";\n    matrix[4][5] = "P";\n    matrix[4][6] = "Q";\n    matrix[4][7] = "R";\n    matrix[4][8] = "S";\n    matrix[5][0] = "T";\n    matrix[5][1] = "U";\n    matrix[5][2] = "V";\n    matrix[5][3] = "W";\n    matrix[5][4] = "X";\n    matrix[5][5] = "Y";\n    matrix[5][6] = "Z";\n    matrix[5][7] = "0";\n    matrix[5][8] = "1";\n    matrix[6][0] = "2";\n    matrix[6][1] = "3";\n    matrix[6][2] = "4";\n    matrix[6][3] = "5";\n    matrix[6][4] = "6";\n    matrix[6][5] = "7";\n    matrix[6][6] = "8";\n    matrix[6][7] = "9";\n    matrix[6][8] = "!";\n    matrix[7][0] = "@";\n    matrix[7][1] = "#";\n    matrix[7][2] = "$";\n    matrix[7][3] = "%";\n    matrix[7][4] = "^";\n    matrix[7][5] = "&";\n    matrix[7][6] = "*";\n    matrix[7][7] = "(";\n    matrix[7][8] = ")";\n    matrix[8][0] = "-";\n    matrix[8][1] = "=";\n    matrix[8][2] = "+";\n    matrix[8][3] = ";";\n    matrix[8][4] = ":";\n    matrix[8][5] = "\'";\n    matrix[8][6] = "\\"";\n    matrix[8][7] = ",";\n    matrix[8][8] = "<";\n    matrix[9][0] = ".";\n    matrix[9][1] = ">";\n    matrix[9][2] = "[";\n    matrix[9][3] = "{";\n    matrix[9][4] = "]";\n    matrix[9][5] = "}";\n    matrix[9][6] = "/";\n    matrix[9][7] = "?";\n    matrix[9][8] = " ";\n}\n\n// Method responsible for giving the main textencryptor class the cipher text.\nstd::string Cipher::giveCipherText() {\n    return cipherText;\n}\n\n// Method responsible for giving the main textencryptor class the plain text.\nstd::string Cipher::givePlainText() {\n    return plainText;\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-c++"},'//\n//  RunManager.h\n//  File Encryptor\n//\n//  Created by Akshay Subramaniam on 9/6/15.\n//  Copyright (c) 2015 Incultus. All rights reserved.\n//\n\n#ifndef __File_Encryptor__RunManager__\n#define __File_Encryptor__RunManager__\n\n#include &lt;stdio.h&gt;\n#include &lt;SFML/Audio.hpp&gt;\n#include &lt;SFML/Graphics.hpp&gt;\n#include "Encryptor.h"\n#include "Decryptor.h"\n#include "EncryptionHandler.h"\n#include "DecryptionHandler.h"\n#include "ResourcePath.hpp"\n#include &lt;map&gt;\n\nusing namespace std;\n\n#endif /* defined(__File_Encryptor__RunManager__) */\n\nclass RunManager {\npublic:\n    // Class constructor.\n    RunManager(sf::RenderWindow *window);\n\n    // The texts that make up the UI.\n    sf::Text encryptTitleText, decryptTitleText;\n    sf::Text encryptText, decryptText;\n    sf::Text encryptFileLocationText, decryptFileLocationText;\n    sf::Text ECBText, CBCText, CTRText;\n    // The buttons.\n    sf::Text chooseELocation, chooseDLocation;\n    sf::Sprite encryptButton, decryptButton;\n    sf::Sprite ECBButton, CBCButton, CTRButton;\n    sf::Sprite encryptFileSelector, decryptFileSelector;\n\n    void checkButtons(float x, float y);\n    void handleEvents(float x, float y);\n    void handleTyping(char);\n    void checkLocationLength(bool encrypt);\n    void backspace();\n    void drawObjects();\nprivate:\n    // The type that determines which cipher is used in encryption.\n    int cipherType = -1;\n    // Whether or not the user is typing in a location of either encryption or decryption.\n    int typing = 0;\n    // The strings for each location.\n    std::string encryptFileLocation = "", decryptFileLocation = "";\n    // THe shortened strings.\n    std::string concEncryptFileLocation, concDecryptFileLocation;\n    // Render window.\n    sf::RenderWindow &window;\n    // Textures for buttons, and fonts for texts.\n    sf::Texture buttonT, button2T, selectorT;\n    sf::Font buttonFont, titleFont, fileSelectorFont;\n    // Hashmap for button states.\n    std::map&lt;std::string, bool&gt; buttonMap;\n\n    void createUI();\n    void createText();\n    void createHashMap();\n\n    void highlightButton(int, int, sf::Sprite*, std::string, sf::Text*);\n    void pressButton(int, int, sf::Sprite*, std::string, sf::Text*);\n    void handleClick(std::string);\n    void unhighlightButton(sf::Sprite*, bool*, sf::Text*);\n    void unhighlightButtons(int);\n\n    void encryptFile();\n    void decryptFile();\n    void successMessage(bool, bool);\n};')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-c++"},'//\n//  RunManager.cpp\n//  File Encryptor\n//\n//  Created by Akshay Subramaniam on 9/6/15.\n//  Copyright (c) 2015 Incultus. All rights reserved.\n//\n\n#include "RunManager.h"\n\n// This fairly large class handles all clicking and mouse movement.\nRunManager::RunManager(sf::RenderWindow *window) : window(*window) {\n    // Creates all the UIs and creates the hashmap for individual UI handling.\n    createUI();\n    createText();\n    createHashMap();\n}\n\n// This method is responsible for checking whether the user has moused over any of the buttons. If he or she has, it highlights that respective button.\nvoid RunManager::checkButtons(float x, float y) {\n    // Gives the x-coordinate of the mouse position, the y-coordinate of the mouse position, the pointer to the button itself (manifest as a sprite), the hashmap that tells the state of the button, and the pointer to the text of the button.\n    highlightButton(x, y, &encryptButton, "encrypt", &encryptText);\n    highlightButton(x, y, &decryptButton, "decrypt", &decryptText);\n    highlightButton(x, y, &ECBButton, "ECB", &ECBText);\n    highlightButton(x, y, &CBCButton, "CBC", &CBCText);\n    highlightButton(x, y, &CTRButton, "CTR", &CTRText);\n    highlightButton(x, y, &encryptFileSelector, "eFile", &encryptFileLocationText);\n    highlightButton(x, y, &decryptFileSelector, "dFile", &decryptFileLocationText);\n}\n\n// If the user has selected either of the location boxes, allows the user to type text into the location boxes. This is used to create the encryption and decryption file location.\nvoid RunManager::handleTyping(char key) {\n    // If encryption box was selected.\n    if (typing == 1) {\n        // Adds the new character to the location string, as well as the shortened version of the string (which appears on the screen for the user to see).\n        encryptFileLocation += key;\n        concEncryptFileLocation += key;\n        // Sets the on-screen text UI to the shortened string.\n        encryptFileLocationText.setString(concEncryptFileLocation);\n        // Checks if the shortened string needs to be further shortened so that it fits in the location box.\n        checkLocationLength(true);\n    }\n    // If decryption box was selected. Same but for decryption.\n    else if (typing == 2) {\n        decryptFileLocation += key;\n        concDecryptFileLocation += key;\n        decryptFileLocationText.setString(concDecryptFileLocation);\n        checkLocationLength(false);\n    }\n}\n\n// Checks if the shortened string is too long.\nvoid RunManager::checkLocationLength(bool encrypt) {\n    if (encrypt) {\n        // If the location is less than 24 characters, it will use the non-truncated string to display.\n        if (encryptFileLocation.length() &lt; 24)\n            encryptFileLocationText.setString(encryptFileLocation);\n\n        // Otherwise will set the shortened string to the closest / that is at least 23 letters away from the end all the way to the end. Also adds an ellipse before the string to represent its truncation.\n        else if (concEncryptFileLocation.length() &gt; 23 || concEncryptFileLocation.length() &lt; 4)\n            for (int i = 0; i &lt; encryptFileLocation.length(); i ++)\n                if (encryptFileLocation[i] == \'/\' && encryptFileLocation.length() - i &lt; 23) {\n                    concEncryptFileLocation = "..." + encryptFileLocation.substr(i + 1, encryptFileLocation.length() - i);\n                    encryptFileLocationText.setString(concEncryptFileLocation);\n                }\n    }\n    else {\n        // Same but for decryption.\n        if (decryptFileLocation.length() &lt; 24)\n            decryptFileLocationText.setString(decryptFileLocation);\n\n        else if (concDecryptFileLocation.length() &gt; 23 || concDecryptFileLocation.length() &lt; 4)\n            for (int i = 0; i &lt; decryptFileLocation.length(); i ++)\n                if (decryptFileLocation[i] == \'/\' && decryptFileLocation.length() - i &lt; 23) {\n                    concDecryptFileLocation = "..." + decryptFileLocation.substr(i + 1,decryptFileLocation.length() - i);\n                    decryptFileLocationText.setString(concDecryptFileLocation);\n                }\n    }\n}\n\n// Deletes the character at the end of each file location if the user has pressed backspace.\nvoid RunManager::backspace() {\n    // If the user has selected the encrypt file location box and its lenghth is greater than 0.\n    if (typing == 1 && encryptFileLocation.length() &gt; 0) {\n        // Effectively deletes the last character but setting it to the substring up till that point.\n        encryptFileLocation = encryptFileLocation.substr(0, encryptFileLocation.length() - 1);\n        // Also applying to the shortened string.\n        concEncryptFileLocation = concEncryptFileLocation.substr(0, concEncryptFileLocation.length() - 1);\n        // Resets the text string.\n        encryptFileLocationText.setString(concEncryptFileLocation);\n        // Checks for truncation.\n        checkLocationLength(true);\n    }\n    else if (typing == 2) {\n        decryptFileLocation = decryptFileLocation.substr(0, decryptFileLocation.length() - 1);\n        concDecryptFileLocation = concDecryptFileLocation.substr(0, concDecryptFileLocation.length() - 1);\n        decryptFileLocationText.setString(concDecryptFileLocation);\n        checkLocationLength(false);\n    }\n}\n\n// This method checks if any button is pressed, similar to the highlight method.\nvoid RunManager::handleEvents(float x, float y) {\n    pressButton(x, y, &encryptButton, "encrypt", &encryptText);\n    pressButton(x, y, &decryptButton, "decrypt", &decryptText);\n    pressButton(x, y, &ECBButton, "ECB", &ECBText);\n    pressButton(x, y, &CBCButton, "CBC", &CBCText);\n    pressButton(x, y, &CTRButton, "CTR", &CTRText);\n    pressButton(x, y, &encryptFileSelector, "eFile", &encryptFileLocationText);\n    pressButton(x, y, &decryptFileSelector, "dFile", &decryptFileLocationText);\n}\n\n// Does the actual highlighting of the button.\nvoid RunManager::highlightButton(int x, int y, sf::Sprite *button, string key, sf::Text *text) {\n    // Gets the state of the button sprite.\n    bool *keyPointer = &buttonMap.at(key);\n\n    // If the button contains the mouse.\n    if (button-&gt;getGlobalBounds().contains(x, y)) {\n        // If the button state is idle (not highlighted or clicked).\n        if (*keyPointer == 0) {\n            // If highlighted, sets the button color to a lower transparency.\n            button-&gt;setColor(sf::Color(255, 255, 255, 100));\n            // Also sets text to lower transparency, if both exist.\n            text-&gt;setColor(sf::Color(0, 0, 0, 100));\n            *keyPointer = 1;\n        }\n    }\n    // Else if the button does not contain the mouse and its highlighted, the button will be unhighlighted.\n    else if (*keyPointer)\n        unhighlightButton(button, keyPointer, text);\n}\n\nvoid RunManager::pressButton(int x, int y, sf::Sprite *button, string key, sf::Text *text) {\n    bool *keyPointer = &buttonMap.at(key);\n    // If the button contains the mouse position, handles the click accordingly.\n    if (button-&gt;getGlobalBounds().contains(x, y)) {\n        handleClick(key);\n        // If a cipher button is clicked, this will unhighlight all other cipher buttons.\n        unhighlightButtons(cipherType);\n    }\n    else {\n        // If no button was clicked, but a random space was, the encryptfileselector will be unselected, assuming it was selected in the first place.\n        if (button == &encryptFileSelector && typing == 1) {\n            typing = 0;\n            encryptFileSelector.setColor(sf::Color(255, 255, 255));\n            encryptFileLocationText.setColor(sf::Color(0, 0, 0));\n        }\n        // Same but for decryption.\n        if (button == &decryptFileSelector && typing == 2) {\n            typing = 0;\n            decryptFileSelector.setColor(sf::Color(255, 255, 255));\n            decryptFileLocationText.setColor(sf::Color(0, 0, 0));\n        }\n    }\n\n}\n\n// Unhighlights each cipher button, based on whether or not it is selected.\nvoid RunManager::unhighlightButton(sf::Sprite *button, bool *keyPointer, sf::Text *text) {\n    // If the cipher type is playfair but playfair is not moused over, sets its color to green.\n    if (button == &ECBButton && cipherType == 0) {\n        ECBButton.setColor(sf::Color(0, 255, 0));\n        ECBText.setColor(sf::Color(0, 255, 0));\n    }\n\n    // Same for all others.\n    else if (button == &CBCButton && cipherType == 1) {\n        CBCButton.setColor(sf::Color(0, 255, 0));\n        CBCText.setColor(sf::Color(0, 255, 0));\n    }\n\n    else if (button == &CTRButton && cipherType == 2) {\n        CTRButton.setColor(sf::Color(0, 255, 0));\n        CTRText.setColor(sf::Color(0, 255, 0));\n    }\n\n    else if (button == &encryptFileSelector && typing == 1) {\n        encryptFileSelector.setColor(sf::Color(0, 255, 0));\n        encryptFileLocationText.setColor(sf::Color(0, 255, 0));\n    }\n\n    else if (button == &decryptFileSelector && typing == 2) {\n        decryptFileSelector.setColor(sf::Color(0, 255, 0));\n        decryptFileLocationText.setColor(sf::Color(0, 255, 0));\n    }\n\n    // Else the button is simply unhighlighted and its color will be its normal one.\n    else {\n        button-&gt;setColor(sf::Color(255, 255, 255));\n        text-&gt;setColor(sf::Color(0, 0, 0));\n    }\n\n    // Sets its state back to resting state.\n    *keyPointer = 0;\n}\n\n// Unhighlights every other button if a cipher button is clicked.\nvoid RunManager::unhighlightButtons(int b) {\n    switch (b) {\n        case 0:\n            // If the ECB button is clicked, unhighlights all other buttons.\n            CBCButton.setColor(sf::Color(255, 255, 255));\n            CBCText.setColor(sf::Color(0, 0, 0));\n            CTRButton.setColor(sf::Color(255, 255, 255));\n            CTRText.setColor(sf::Color(0, 0, 0));\n            break;\n        case 1:\n            // If the CBC button is clicked, unhighlights all other buttons.\n            ECBButton.setColor(sf::Color(255, 255, 255));\n            ECBText.setColor(sf::Color(0, 0, 0));\n            CTRButton.setColor(sf::Color(255, 255, 255));\n            CTRText.setColor(sf::Color(0, 0, 0));\n            break;\n        case 2:\n            // If the CTR button transposition is clicked, unhighlights all other buttons.\n            ECBButton.setColor(sf::Color(255, 255, 255));\n            ECBText.setColor(sf::Color(0, 0, 0));\n            CBCButton.setColor(sf::Color(255, 255, 255));\n            CBCText.setColor(sf::Color(0, 0, 0));\n            break;\n    }\n}\n\n// Sets the color of the button to green if it was clicked and acts accordingly.\nvoid RunManager::handleClick(string key) {\n    // If ECB makes button green and sets the cipher type accordingly.\n    if (key == "ECB") {\n        cipherType = 0;\n        ECBButton.setColor(sf::Color(0, 255, 0));\n        ECBText.setColor(sf::Color(0, 255, 0));\n    }\n    // Same but for CBC.\n    if (key == "CBC") {\n        cipherType = 1;\n        CBCButton.setColor(sf::Color(0, 255, 0));\n        CBCText.setColor(sf::Color(0, 255, 0));\n    }\n    // Etc.\n    if (key == "CTR") {\n        cipherType = 2;\n        CTRButton.setColor(sf::Color(0, 255, 0));\n        CTRText.setColor(sf::Color(0, 255, 0));\n    }\n\n    // If the encrypt button was clicked the program will encrypt the file based on the location given.\n    if (key == "encrypt")\n        encryptFile();\n    // If the decrypt button was clicked.\n    else if (key == "decrypt")\n        decryptFile();\n\n    // If encrypt file location was clicked.\n    if (key == "eFile") {\n        // Informs program the user is typing in the encryption file location.\n        typing = 1;\n        // Sets encryption file location color.\n        encryptFileSelector.setColor(sf::Color(0, 255, 0));\n        encryptFileLocationText.setColor(sf::Color(0, 255, 0));\n\n        decryptFileSelector.setColor(sf::Color(255, 255, 255));\n        decryptFileLocationText.setColor(sf::Color(0, 0, 0));\n    }\n    // Same but for decryption file location.\n    else if (key == "dFile") {\n        typing = 2;\n        decryptFileSelector.setColor(sf::Color(0, 255, 0));\n        decryptFileLocationText.setColor(sf::Color(0, 255, 0));\n\n        encryptFileSelector.setColor(sf::Color(255, 255, 255));\n        encryptFileLocationText.setColor(sf::Color(0, 0, 0));\n    }\n\n    // If the user was typing but selects a button other than the two file locations, it unhighlights them both and infroms the program the user has stopped typing.\n    if (typing && key != "eFile" && key != "dFile") {\n        typing = 0;\n        encryptFileSelector.setColor(sf::Color(255, 255, 255));\n        encryptFileLocationText.setColor(sf::Color(0, 0, 0));\n        decryptFileSelector.setColor(sf::Color(255, 255, 255));\n        decryptFileLocationText.setColor(sf::Color(0, 0, 0));\n    }\n}\n\nvoid RunManager::drawObjects() {\n    // Draws all UI elements.\n    window.draw(encryptButton);\n    window.draw(decryptButton);\n    window.draw(ECBButton);\n    window.draw(CBCButton);\n    window.draw(CTRButton);\n    window.draw(encryptFileSelector);\n    window.draw(decryptFileSelector);\n\n    window.draw(encryptTitleText);\n    window.draw(decryptTitleText);\n    window.draw(encryptText);\n    window.draw(decryptText);\n    window.draw(CTRButton);\n    window.draw(CTRButton);\n    window.draw(ECBText);\n    window.draw(CBCText);\n    window.draw(CTRText);\n    window.draw(chooseELocation);\n    window.draw(chooseDLocation);\n    window.draw(encryptFileLocationText);\n    window.draw(decryptFileLocationText);\n}\n\n// Creates all the buttons.\nvoid RunManager::createUI() {\n    // Creates the button textures from the file path.\n    buttonT.loadFromFile(resourcePath() + "Button.png");\n    button2T.loadFromFile(resourcePath() + "Button2.png");\n    selectorT.loadFromFile(resourcePath() + "FolderSelector.png");\n\n    // Sets the sprites to the texture by using an intermediate sprite.\n    sf::Sprite encryptButton(button2T);\n    this-&gt;encryptButton = encryptButton;\n    sf::Sprite decryptButton(button2T);\n    this-&gt;decryptButton = decryptButton;\n    sf::Sprite ECBButton(buttonT);\n    this-&gt;ECBButton = ECBButton;\n    sf::Sprite CBCButton(buttonT);\n    this-&gt;CBCButton = CBCButton;\n    sf::Sprite CTRButton(buttonT);\n    this-&gt;CTRButton = CTRButton;\n\n    sf::Sprite encryptFileSelector(selectorT);\n    this-&gt;encryptFileSelector = encryptFileSelector;\n    sf::Sprite decryptFileSelector(selectorT);\n    this-&gt;decryptFileSelector = decryptFileSelector;\n\n    // Sets the respective positions.\n    this-&gt;encryptButton.setPosition(275, 165);\n    this-&gt;decryptButton.setPosition(275, 400);\n\n    this-&gt;ECBButton.setPosition(37.5, 500);\n    this-&gt;CBCButton.setPosition(337.5, 500);\n    this-&gt;CTRButton.setPosition(637.5, 500);\n\n    this-&gt;encryptFileSelector.setPosition(150, 65);\n    this-&gt;decryptFileSelector.setPosition(150, 300);\n}\n\n// Largely same as for buttons.\nvoid RunManager::createText() {\n    // Creates fonts from file path.\n    buttonFont.loadFromFile(resourcePath() + "typewcond_regular.otf");\n    titleFont.loadFromFile(resourcePath() + "sansation.ttf");\n    fileSelectorFont.loadFromFile(resourcePath() + "NixieOne.ttf");\n\n    // Sets base text that is used to create other texts by setting size, color and font.\n    sf::Text blankText;\n    blankText.setFont(buttonFont);\n    blankText.setCharacterSize(32);\n    blankText.setColor(sf::Color::Black);\n\n    sf::Text titleText;\n    titleText.setFont(titleFont);\n    titleText.setColor(sf::Color::Black);\n    titleText.setCharacterSize(34);\n\n    sf::Text selectorText;\n    selectorText.setFont(fileSelectorFont);\n    selectorText.setColor(sf::Color::Black);\n    selectorText.setCharacterSize(34);\n\n    // Sets individual text to base text, sets string and position.\n    ECBText = blankText;\n    ECBText.setString("ECB");\n    ECBText.setPosition(80, 515);\n\n    CBCText = blankText;\n    CBCText.setString("CBC");\n    CBCText.setPosition(380, 515);\n\n    CTRText = blankText;\n    CTRText.setString("CTR");\n    CTRText.setPosition(680, 515);\n\n    encryptText = blankText;\n    encryptText.setString("Encrypt");\n    encryptText.setCharacterSize(52);\n    encryptText.setPosition(315, 165);\n\n    decryptText = blankText;\n    decryptText.setString("Decrypt");\n    decryptText.setCharacterSize(52);\n    decryptText.setPosition(315, 400);\n\n    encryptTitleText = titleText;\n    encryptTitleText.setString("Please select the text file that you wish to encrypt.");\n    encryptTitleText.setPosition(20, 15);\n\n    decryptTitleText = titleText;\n    decryptTitleText.setString("Please select the text file that you wish to decrypt.");\n    decryptTitleText.setPosition(20, 250);\n\n    encryptFileLocationText = selectorText;\n    encryptFileLocationText.setPosition(155, 77.5);\n\n    decryptFileLocationText = selectorText;\n    decryptFileLocationText.setPosition(155, 312.5);\n}\n\nvoid RunManager::createHashMap() {\n    buttonMap.insert(pair&lt;string, int&gt; ("encrypt", 0));\n    buttonMap.insert(pair&lt;string, int&gt; ("decrypt", 0));\n    buttonMap.insert(pair&lt;string, int&gt; ("ECB", 0));\n    buttonMap.insert(pair&lt;string, int&gt; ("CBC", 0));\n    buttonMap.insert(pair&lt;string, int&gt; ("CTR", 0));\n    buttonMap.insert(pair&lt;string, int&gt; ("eFile", 0));\n    buttonMap.insert(pair&lt;string, int&gt; ("dFile", 0));\n}\n\nvoid RunManager::encryptFile() {\n    // User has no selected a cipher type yet.\n    if (cipherType == -1) {\n        successMessage(false, true);\n        return;\n    }\n    EncryptionHandler handler(encryptFileLocation, cipherType);\n    successMessage(handler.loadFile(), true);\n}\n\nvoid RunManager::decryptFile() {\n    DecryptionHandler handler(decryptFileLocation, cipherType);\n    successMessage(handler.loadFile(), false);\n}\n\nvoid RunManager::successMessage(bool success, bool encrypt) {\n    if (success) {\n        if (encrypt) {\n            encryptButton.setColor(sf::Color(0, 255, 0));\n            encryptText.setColor(sf::Color(0, 255, 0));\n        }\n        else {\n            decryptButton.setColor(sf::Color(0, 255, 0));\n            decryptText.setColor(sf::Color(0, 255, 0));\n        }\n    }\n    else {\n        if (encrypt) {\n            encryptButton.setColor(sf::Color(255, 0, 0));\n            encryptText.setColor(sf::Color(255, 0, 0));\n        }\n        else {\n            decryptButton.setColor(sf::Color(255, 0, 0));\n            decryptText.setColor(sf::Color(255, 0, 0));\n        }\n    }\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-c++"},'//\n//  Encryptor.cpp\n//  File Encryptor\n//\n//  Created by Akshay Subramaniam on 9/6/15.\n//  Copyright (c) 2015 Incultus. All rights reserved.\n//\n\n#include "Encryptor.h"\n\nEncryptor::Encryptor(vector&lt;uint8_t&gt; byteVector, int type) : byteVector(byteVector), type(type) {\n    initializeKey();\n    switch (type) {\n        case 0:\n            // Executes ECB cipher encryption.\n            ECBEncrypt();\n            break;\n        case 1:\n            // Executes CBC cipher encryption.\n            CBCEncrypt();\n            break;\n        case 2:\n            // Executes CTR cipher encryption.\n            CTREncrypt();\n            break;\n    }\n    // Gives the identifier for the encryptor.\n    tailEncrypt();\n}\n\nvoid Encryptor::initializeKey() {\n    // Creates the randomly-developed array.\n    uint8_t keyArray[] = {134, 44, 27, 173, 229};\n    // Sets the vector via a fast way using the array.\n    for (int i = 0; i &lt; 5; ++ i)\n        key.push_back(keyArray[i]);\n}\n\n// Standard Electronic Codebook mode with a rotating key.\nvoid Encryptor::ECBEncrypt() {\n    // Encrypts every byte in the file and then adds to the encrypted file vector.\n    for (vector&lt;uint8_t&gt;::iterator byte = byteVector.begin(); byte != byteVector.end(); ++ byte)\n        // XORs the byte with the rotating key, thereby encrypting it.\n        encryptedByteVector.push_back(getXOR(*byte, getKey()));\n}\n\n// Cipher Block Chaining mode with a rotating key.\nvoid Encryptor::CBCEncrypt() {\n    // Gets the randomly generated initialization vector.\n    srand(time(NULL));\n    uint8_t initializationVector = rand() % 256;\n    // XORs the first plaintext byte with the initialization vector.\n    uint8_t oldByte = getXOR(byteVector.front(), initializationVector);\n    // Encrypts the first byte by XORing the newly created byte (old byte) with the key byte to get the encrypted byte.\n    oldByte = getXOR(oldByte, getKey());\n    // Adds the XORd encrypted byte to the encryption byte vector.\n    encryptedByteVector.push_back(oldByte);\n    // Adds the rest of the bytes.\n    for (vector&lt;uint8_t&gt;::iterator byte = byteVector.begin() + 1; byte != byteVector.end(); ++ byte) {\n        // Creates new byte by XORing current plaintext byte with the previous encrypted byte.\n        uint8_t newByte = getXOR(*byte, oldByte);\n        // XORs this new byte with the key byte to get the encrypted byte.\n        newByte = getXOR(newByte, getKey());\n        // Adds the XORd encrypted byte to the encryption byte vector.\n        encryptedByteVector.push_back(newByte);\n        // Sets this byte as the previous vector for the next iteration of the loop.\n        oldByte = newByte;\n    }\n    // Gives the initialization vector as part of the cipher text. This is for decryption purposes.\n    encryptedByteVector.push_back(initializationVector);\n}\n\n// Counter mode with a rotating key.\nvoid Encryptor::CTREncrypt() {\n    // Gets the randomly generated initialization vector.\n    srand(time(NULL));\n    uint8_t initializationVector = rand() % 256;\n    // Acquires the counter byte, which gives the name of this cipher, and the integer that represents it.\n    int counterInt = 0;\n    uint8_t counterByte = counterInt;\n    // The XORd initialization vector and the counter.\n    uint8_t combined;\n    // The encrypted byte.\n    uint8_t encryptedByte;\n    // Adds all the bytes.\n    for (vector&lt;uint8_t&gt;::iterator byte = byteVector.begin(); byte != byteVector.end(); ++ byte) {\n        // Gets the combined initialization vector and the counter by XORing them together.\n        combined = getXOR(counterByte, initializationVector);\n        // XORs the first plaintext byte with the combined byte.\n        encryptedByte = getXOR(*byte, combined);\n        // Encrypts the first byte by XORing the newly created byte with the key byte to get the encrypted byte.\n        encryptedByte = getXOR(encryptedByte, getKey());\n        // Adds the XORd encrypted byte to the encryption byte vector.\n        encryptedByteVector.push_back(encryptedByte);\n        // Increases counter and sets byte accordingly.\n        counterByte = ++ counterInt;\n\n        // If counter is greater than 255, resets the counter.\n        if (counterInt &gt; 255)\n            counterByte = (counterInt = 0);\n    }\n    // Gives the initialization vector as part of the cipher text. This is for decryption purposes.\n    encryptedByteVector.push_back(initializationVector);\n}\n\nvoid Encryptor::tailEncrypt() {\n    uint8_t identifier;\n    switch (type) {\n        case 0:\n            // If the simplest encryption, adds the extra decimal 25.\n            identifier = 25;\n            break;\n        case 1:\n            // If the normal encryption, adds the extra decimal 142.\n            identifier = 142;\n            break;\n        case 2:\n            // If the normal encryption, adds the extra decimal 213.\n            identifier = 213;\n            break;\n    }\n    encryptedByteVector.push_back(identifier);\n}\n\nuint8_t Encryptor::getKey() {\n    // Gets the byte that will be returned by selecting a byte from the key\'s rotation.\n    uint8_t keyByte = key.at(count - 1);\n    // Increases count to rotate the key.\n    ++ count;\n    // Ensures that count is always above zero and below six. That way when count is passed as a position there is no out of bounds exception.\n    if (count != 5)\n        count %= 5;\n    // Returns the byte.\n    return keyByte;\n}\n\n// XORs one byte with another.\nuint8_t Encryptor::getXOR(uint8_t firstByte, uint8_t secondByte) {\n    return firstByte ^= secondByte;\n}\n\n// Returns encrypted file expressed as a vector.\nvector&lt;uint8_t&gt; Encryptor::getEncryptedFile() {\n    return encryptedByteVector;\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-c++"},"//\n//  Decryptor.cpp\n//  File Encryptor\n//\n//  Created by Akshay Subramaniam on 9/6/15.\n//  Copyright (c) 2015 Incultus. All rights reserved.\n//\n\n#include \"Decryptor.h\"\n\nDecryptor::Decryptor(vector&lt;uint8_t&gt; byteVector) : byteVector(byteVector) {\n    // Initializes rotating key.\n    initializeKey();\n    // Removes the identifier of the encrypted file.\n    type = tailDecrypt();\n    switch (type) {\n        case 0:\n            // Executes ECB cipher decryption.\n            ECBDecrypt();\n            break;\n        case 1:\n            // Executes CBC cipher decryption.\n            CBCDecrypt();\n            break;\n        case 2:\n            // Executes CTR cipher decryption.\n            CTRDecrypt();\n            break;\n    }\n}\n\nvoid Decryptor::initializeKey() {\n    // Creates the randomly-developed array.\n    uint8_t keyArray[] = {134, 44, 27, 173, 229};\n    // Sets the vector via a fast way using the array.\n    for (int i = 0; i &lt; 5; ++ i)\n        key.push_back(keyArray[i]);\n}\n\n// Standard Electronic Codebook mode with a rotating key.\nvoid Decryptor::ECBDecrypt() {\n    // Decrypts every byte in the file and then adds to the decrypts file vector.\n    for (vector&lt;uint8_t&gt;::iterator byte = byteVector.begin(); byte != byteVector.end(); ++ byte)\n        // XORs the encrypted byte with the rotating key, thereby decrypting it.\n        decryptedByteVector.push_back(getXOR(*byte, getKey()));\n}\n\n// Cipher Block Chaining mode with a rotating key.\nvoid Decryptor::CBCDecrypt() {\n    // Gets the randomly generated initialization vector.\n    uint8_t initializationVector = byteVector.back();\n    // This is a temporary vector, as it contains the values for the decrypted vector backwards. This is because this program decrypts the CBC cipher in a backwards direction.\n    vector&lt;uint8_t&gt; tempVector;\n    // Removes the initialization vector.\n    byteVector.pop_back();\n    // Sets the count, which should be the LAST count when encrypted.\n    count = byteVector.size() % 5;\n\n    // This loop adds the decrypted bytes in a BACKWARDS fashion to the temporary vector.\n    for (vector&lt;uint8_t&gt;::iterator byte = byteVector.end(); byte != byteVector.begin(); -- byte) {\n        // XORs the encrypted byte with the key to remove the first layer of encryption.\n        uint8_t newByte = getXOR(*byte, getKeyBackwards());\n        // XORs this byte with the previous encrypted byte to get the plaintext byte.\n        newByte = getXOR(newByte, *(byte - 1));\n        // Adds this decrypted byte to the temporary vector.\n        tempVector.push_back(newByte);\n    }\n\n    // The final (positionally first) byte is XORd with the key to get the unveiled byte.\n    uint8_t lastByte = getXOR(byteVector.front(), getKeyBackwards());\n    // XORS the this byte to get the final decrypted byte.\n    lastByte = getXOR(lastByte, initializationVector);\n    // Adds this byte to the temporary vector.\n    tempVector.push_back(lastByte);\n\n    // Reorders the vector by adding elements to the decryption vector backwards.\n    for (vector&lt;uint8_t&gt;::iterator byte = tempVector.end() - 1; byte != tempVector.begin() - 1; -- byte)\n        decryptedByteVector.push_back(*byte);\n}\n\n// Counter mode with a rotating key.\nvoid Decryptor::CTRDecrypt() {\n    // Gets the randomly generated initialization vector, and removes it from the vector list.\n    uint8_t initializationVector = byteVector.back();\n    byteVector.pop_back();\n    // Acquires the counter byte, which gives the name of this cipher, and the integer that represents it.\n    int counterInt = 0;\n    uint8_t counterByte = counterInt;\n    // The XORd initialization vector and the counter.\n    uint8_t combined;\n    // The decrypted byte.\n    uint8_t decryptedByte;\n    // Adds all the bytes.\n    for (vector&lt;uint8_t&gt;::iterator byte = byteVector.begin(); byte != byteVector.end(); ++ byte) {\n        // Removes one layer of encryption from the byte by XORing it with the key.\n        decryptedByte = getXOR(*byte, getKey());\n        // Gets the combined initialization vector and the counter by XORing them together.\n        combined = getXOR(counterByte, initializationVector);\n        // Gets the decrypted byte by XORing it with the combined byte.\n        decryptedByte = getXOR(decryptedByte, combined);\n        // Adds the XORd decrypted byte to the decryption byte vector.\n        decryptedByteVector.push_back(decryptedByte);\n        // Increases counter and sets byte accordingly.\n        counterByte = ++ counterInt;\n\n        // If counter is greater than 255, resets the counter.\n        if (counterInt &gt; 255)\n            counterByte = (counterInt = 0);\n    }\n}\n\nint Decryptor::tailDecrypt() {\n    // Variable for cipher type.\n    int newType = -1;\n    // If the identifier was created by an ECB cipher, and the identifier at the end is the decimal value 25.\n    if (byteVector.back() == 25)\n        newType = 0;\n\n    // If created by a CBC cipher.\n    if (byteVector.back() == 142)\n        newType = 1;\n\n    // If by a CTR cipher.\n    if (byteVector.back() == 213)\n        newType = 2;\n\n    // Removes identifier.\n    byteVector.pop_back();\n    // Gives cipher type.\n    return newType;\n}\n\nuint8_t Decryptor::getKey() {\n    // Gets the byte that will be returned by selecting a byte from the key's rotation.\n    uint8_t keyByte = key.at(count - 1);\n    // Increases count to rotate the key.\n    ++ count;\n    // Ensures that count is always above zero and below one. That way when count is passed as a position there is no out of bounds exception.\n    if (count != 5)\n        count %= 5;\n    // Returns the byte.\n    return keyByte;\n}\n\n// Used for getting the key while going from the end of the byte vector to the beginning.\nuint8_t Decryptor::getKeyBackwards() {\n    // Gets the byte that will be returned by selecting a byte from the key's rotation.\n    uint8_t keyByte = key.at(count);\n    // Decreases count to rotate the key.\n    -- count;\n    // Ensures that count is always above or at zero and below five. That way when count is passed as a position there is no out of bounds exception.\n    if (count &lt; 0)\n        count = 4;\n    // Returns the byte.\n    return keyByte;\n}\n\n// XORs one byte with another.\nuint8_t Decryptor::getXOR(uint8_t firstByte, uint8_t secondByte) {\n    return firstByte ^= secondByte;\n}\n\nvector&lt;uint8_t&gt; Decryptor::getDecryptedFile() {\n    return decryptedByteVector;\n}")}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-c++"},'//\n//  EncryptionHandler.cpp\n//  File Encryptor\n//\n//  Created by Akshay Subramaniam on 9/6/15.\n//  Copyright (c) 2015 Incultus. All rights reserved.\n//\n\n#include "EncryptionHandler.h"\n\nEncryptionHandler::EncryptionHandler(string filePath, int cipherType) : filePath(filePath), cipherType(cipherType) {\n    // Gets the file path and the cipher type. Casts the file path expressed as a string to a constant char pointer, in order to pass this to some methods.\n    filePathChar = this-&gt;filePath.c_str();\n}\n\nbool EncryptionHandler::loadFile() {\n    // Buffer that stores file content.\n    uint8_t *buffer;\n    // The file itself.\n    FILE *file;\n    // Size of the file.\n    long fileSize;\n    // Added file size. This is caused by the addition of the identifier byte, and possibly the initialization vector.\n    long extraSize;\n\n    // If CBC or CTR give the space necessary for the insertion of the initialization vector.\n    if (cipherType &gt; 0)\n        extraSize = 2;\n    else\n        extraSize = 1;\n\n    try {\n        // Gets the file pointer. This is why the earlier conversion as necessary.\n        file = fopen(filePathChar, "rb");\n\n        // If there exists no such file, exits the code without throwing an exception and thus crashing.\n        if (file == NULL) {\n            free(buffer);\n            fclose(file);\n            return false;\n        }\n\n        // Gets the file size.\n        fileSize = getFileSize(file);\n        // Creates a buffer to store the file content. This gives the full memory necessary. Allows space for the identifier byte.\n        buffer = (uint8_t*) malloc(fileSize + extraSize);\n\n        // Copies contents to this buffer (note the use of the original size to properly copy the file contents).\n        fread(buffer, fileSize, 1, file);\n        // This is the byte vector that is used in the actual encryptor.\n        vector&lt;uint8_t&gt; fileVector;\n        // Adds every byte in the buffer to the aforementioned vector.\n        for (int i = 0; i &lt; fileSize; ++ i)\n            fileVector.push_back(buffer[i]);\n\n        // Encrypts the file.\n        Encryptor encryptor(fileVector, cipherType);\n        // Gets the encrypted file, expressed as a vector.\n        vector&lt;uint8_t&gt; newFileVector = encryptor.getEncryptedFile();\n\n        // Writes each encrypted byte to the buffer, including the identifier byte and possibly the initialization vector.\n        for (int i = 0; i &lt; fileSize + extraSize; ++ i)\n            buffer[i] = newFileVector.at(i);\n\n        // Goes back to the beginning.\n        rewind(file);\n\n        // Converts the file to wrtiing mode.\n        file = fopen((const char*) filePathChar, "wb");\n        // Writes the encrypted buffer to the file. This creates the encrypted file.\n        fwrite(buffer, 1, fileSize + extraSize, file);\n\n        // Cleans up the buffer.\n        free(buffer);\n        // Closes the file.\n        fclose(file);\n\n        // Tells the runmanager execution was successful.\n        return true;\n    }\n    // If any exception is thrown, ensures that the program will not crash.\n    catch (...) {\n        // Cleans up and closes.\n        free(buffer);\n        fclose(file);\n        return false;\n    }\n}\n\n// Gets the file size by seeking the end of file and counting the amount of memory processed.\nlong EncryptionHandler::getFileSize(FILE *pFile) {\n    // Gets to the end of the file.\n    fseek(pFile, 0, SEEK_END);\n    // Checks the displacement of position in terms of memory from beginning to the end.\n    long lSize = ftell(pFile);\n    // Sets the file back to the beginning to ensure that next time the file is used to read, it will start from the beginning.\n    rewind(pFile);\n    // Returns the file size.\n    return lSize;\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-c++"},'//\n//  DecryptionHandler.cpp\n//  File Encryptor\n//\n//  Created by Akshay Subramaniam on 11/6/15.\n//  Copyright (c) 2015 Incultus. All rights reserved.\n//\n\n#include "DecryptionHandler.h"\n\nDecryptionHandler::DecryptionHandler(string filePath, int cipherType) : filePath(filePath), cipherType(cipherType) {\n    // Gets the file path and the cipher type. Casts the file path expressed as a string to a constant char pointer, in order to pass this to some methods.\n    filePathChar = this-&gt;filePath.c_str();\n}\n\nbool DecryptionHandler::loadFile() {\n    // Buffer that stores file content.\n    uint8_t *buffer;\n    // The file itself.\n    FILE *file;\n    // Size of the file.\n    long fileSize;\n    // Added file size. This is caused by the addition of the identifier byte, and possibly the initialization vector.\n    long extraSize;\n    // If CBC or CTR give the space necessary for the insertion of the initialization vector.\n    if (cipherType &gt; 0)\n        extraSize = 2;\n    else\n        extraSize = 1;\n\n    try {\n        // Gets the file pointer. This is why the earlier conversion as necessary.\n        file = fopen(filePathChar, "rb");\n\n        // If there exists no such file, exits the code without throwing an exception and thus crashing.\n        if (file == NULL) {\n            free(buffer);\n            fclose(file);\n            return false;\n        }\n\n        // Gets the file size.\n        fileSize = getFileSize(file);\n        // Creates a buffer to store the file content. This gives the full memory necessary.\n        buffer = (uint8_t*) malloc(fileSize);\n\n        // Copies contents to this buffer (note the use of the original size to properly copy the file contents).\n        fread(buffer, fileSize, 1, file);\n        // This is the byte vector that is used in the actual encryptor.\n        vector&lt;uint8_t&gt; fileVector;\n        // Adds every byte in the buffer to the aforementioned vector.\n        for (int i = 0; i &lt; fileSize; ++ i)\n            fileVector.push_back(buffer[i]);\n\n        // Encrypts the file.\n        Decryptor decryptor(fileVector);\n        // Gets the encrypted file, expressed as a vector.\n        vector&lt;uint8_t&gt; newFileVector = decryptor.getDecryptedFile();\n\n        //Re-allocates the memory to buffer, as it does not include the identifier byte any longer and possibly the initialization vector.\n        buffer = (uint8_t*) malloc(fileSize - extraSize);\n\n        // Writes each encrypted byte to the buffer.\n        for (int i = 0; i &lt; fileSize - extraSize; ++ i)\n            buffer[i] = newFileVector.at(i);\n\n        // Goes back to the beginning.\n        rewind(file);\n\n        // Converts the file to wrtiing mode.\n        file = fopen((const char*) filePathChar, "wb");\n        // Writes the encrypted buffer to the file. This creates the encrypted file.\n        fwrite(buffer, 1, fileSize - extraSize, file);\n\n        // Cleans up the buffer.\n        free(buffer);\n        // Closes the file.\n        fclose(file);\n\n        // Tells the runmanager execution was successful.\n        return true;\n    }\n    // If any exception is thrown, ensures that the program will not crash.\n    catch (...) {\n        // Cleans up and closes.\n        free(buffer);\n        fclose(file);\n        return false;\n    }\n}\n\n// Gets the file size by seeking the end of file and counting the amount of memory processed.\nlong DecryptionHandler::getFileSize(FILE *pFile) {\n    // Gets to the end of the file.\n    fseek(pFile, 0, SEEK_END);\n    // Checks the displacement of position in terms of memory from beginning to the end.\n    long lSize = ftell(pFile);\n    // Sets the file back to the beginning to ensure that next time the file is used to read, it will start from the beginning.\n    rewind(pFile);\n    // Returns the file size.\n    return lSize;\n}')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-python"},'import GraphicsHelper\nimport pygame\nimport random\n\nclass CarHandler:\n\n    #Creates all the sprites and initializes all controller variables.\n    def __init__(self, main):\n        #Creates the list and tuple that contains the car sprites and traffic sprites respectively.\n        self.carGroup = []\n        self.trafficLights = ()\n        #Time relevant variables which are used to track time, and by extension execute events after a certain amount of time.\n        self.time = 0\n        self.checkInterval = 0\n        #Max number of cars on the screen\n        self.maxCars = 15\n        self.speed = 1.5\n        #Amount of mistakes the uer can make\n        self.chances = 3\n        #Creates all the traffic light sprites.\n        self.createTrafficLights()\n        #These are textures (not sprites) used for the game.\n        self.background = GraphicsHelper.GraphicsHelper.getImage("Resources/screen.bmp")\n        self.retryButton = GraphicsHelper.retryButton("Resources/retrybutton.bmp", (400, 500))\n        #Initialization of fonts that are used in the game.\n        font = pygame.font.Font("Resources/OptimusPrinceps.ttf", 72)\n        font2 = pygame.font.Font("Resources/OptimusPrinceps.ttf", 36)\n        self.loseGame = font.render("You Lost", 1, (255, 0, 0))\n        self.retry = font2.render("Retry?", 1, (0, 255, 0))\n        #Boolean which detects whether the game should be running, or show the lose screen.\n        self.lost = False\n        #Main class used purely for switching rendering between the game itself and the lose screen.\n        self.main = main\n\n    def getBackground(self):\n        return self.background\n\n    #Creates the traffic light sprites.\n    def createTrafficLights(self):\n        image = "Resources/light.bmp"\n        #Creates a traffic light with the image from the resources folder. The Tuple is the position of the sprite.\n        light = GraphicsHelper.trafficSprite(image, (89, 89))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (211, 89))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (341, 89))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (463, 89))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (591, 89))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (713, 89))\n        self.trafficLights += (light,)\n\n        light = GraphicsHelper.trafficSprite(image, (89, 209))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (211, 209))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (341, 209))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (463, 209))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (591, 209))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (713, 209))\n        self.trafficLights += (light,)\n\n        light = GraphicsHelper.trafficSprite(image, (89, 391))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (211, 391))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (341, 391))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (463, 391))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (591, 391))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (713, 391))\n        self.trafficLights += (light,)\n\n        light = GraphicsHelper.trafficSprite(image, (89, 511))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (211, 511))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (341, 511))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (463, 511))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (591, 511))\n        self.trafficLights += (light,)\n        light = GraphicsHelper.trafficSprite(image, (713, 511))\n        self.trafficLights += (light,)\n\n    #Returns all the sprite necessary for rendering, depending on the state of the game.\n    def getSprites(self):\n        if not self.lost:\n            #Game is still running.\n            return pygame.sprite.RenderPlain((self.carGroup, self.trafficLights))\n        else:\n            #Game is lost.\n            return pygame.sprite.RenderPlain(self.retryButton)\n\n    #If a mistake is made, flashes the screen red.\n    def flashScreen(self):\n        #Texture that is the flash on the screen is set to the background.\n        self.background = GraphicsHelper.GraphicsHelper.getImage("Resources/mistake.bmp")\n        oldTime = pygame.time.get_ticks()\n        #Delays the reset of the background so it appears as a flash.\n        self.main.delayResetBackground()\n\n    #Set the background back to normal.\n    def resetBackground(self):\n        if self.chances > 0:\n            #If the user still has some chances left.\n            self.background = GraphicsHelper.GraphicsHelper.getImage("Resources/screen.bmp")\n        else:\n            #If the user has no chances left, the game recognizes the user has lost.\n            self.lost = True\n            self.background = GraphicsHelper.GraphicsHelper.getImage("Resources/losegamescreen.bmp")\n\n\n    #Updates the game.\n    def update(self, deltaTime):\n        #Increase the time by the period that has elasped since the last update so that the current time is obtained.\n        self.time += deltaTime\n        self.checkInterval += deltaTime\n        #If the user has not lost, all the sprites are updated and routinely checked.\n        if not self.lost:\n            self.checkAdd()\n            self.checkDelete()\n            self.checkStop()\n            self.checkCollision()\n\n    #Based on how much time has passed, the game checks whether to add a new car sprite.\n    def checkAdd(self):\n        if self.checkInterval / 1000 > 1 and len(self.carGroup) < self.maxCars:\n            #Resets the interval so an additional one second is required to start the next check.\n            self.checkInterval = 0\n            #Gets a random direction to set the car in.\n            direction = self.getRandomDirection()\n            #Creates a new car with a set speed, image, a random color, and a random location based off the direction.\n            car = GraphicsHelper.carSprite("Resources/car.bmp", self.speed, direction, self.getRandomColor(), self.getLocation(direction))\n            #Adds the car to the rendering group.\n            self.carGroup.append(car)\n\n    #Checks whether a car should be deleted.\n    def checkDelete(self):\n        for car in self.carGroup:\n            #These two if statements check whether the car is out of bounds of the screen (outside of it).\n            if car.position[0] > 800 or car.position[0] < 0:\n                self.carGroup.remove(car)\n            if car.position[1] > 600 or car.position[1] < 0:\n                self.carGroup.remove(car)\n            #This if statement checks that if a car has stayed in the screen for more than 15 seconds, the car is deleted. This\n            #is to ensure that the user cannot simply indefinitely stop a car. This is counted as a mistake.\n            if (car.getTime() / 1000 > 15):\n                self.carGroup.remove(car)\n                self.chances -= 1\n                self.flashScreen()\n\n    #Checks whether the car should stop at a stop sign, or whether the car should stop because a car in front of it on the same\n    #lane has stopped.\n    def checkStop(self):\n        for car in self.carGroup:\n            if not car.checkCarStop(self.carGroup):\n                car.checkTrafficLightStops(self.trafficLights)\n\n    #Checks whether a sprites bounds contains another, and if so, deletes that sprite and removes a chance.\n    def checkCollision(self):\n        group = pygame.sprite.RenderPlain(self.carGroup)\n        for car in self.carGroup:\n            group.remove(car)\n            if pygame.sprite.spritecollide(car, group, True):\n                self.carGroup.remove(car)\n                self.chances -= 1\n                self.flashScreen()\n\n    #Checks whether a sprite contains a mouse click.\n    def checkClicked(self, mPos):\n        for light in self.trafficLights:\n            #For the traffic light.\n            light.detectChange(mPos)\n        if self.retryButton.detectMouse(mPos) and self.lost:\n            #For the retry button.\n            self.main.restartGame()\n\n    #Checks whether the user is hovering over the button, so that it is highlighted while he/she is doing so.\n    def checkHover(self, mPos):\n        if self.retryButton.detectMouse(mPos) and self.lost:\n            #Highlights the button.\n            self.retryButton = GraphicsHelper.retryButton("Resources/retrybuttonhighlighted.bmp", (400, 500))\n        else:\n            #Unhighlights the button\n            self.retryButton = GraphicsHelper.retryButton("Resources/retrybutton.bmp", (400, 500))\n\n    def getRandomColor(self):\n        #Creates a random color by getting three random color elements from 0 to 255.\n        red = random.randint(0, 255)\n        blue = random.randint(0, 255)\n        green = random.randint(0, 255)\n        color = pygame.Color(red)\n        color.r = red\n        color.g = green\n        color.b = blue\n        return color\n\n    def getRandomDirection(self):\n        return random.randint(0, 3)\n\n    #Based on the direction, creates a location.\n    def getLocation(self, direction):\n        #Since each direction has different locations, creates the range of randomness based on the direction.\n        if (direction < 2):\n            position = random.randint(0, 1)\n        else:\n            position = random.randint(0, 2)\n\n        if direction == 0:\n            #Right, on the top lane.\n            if position == 0:\n                return 0, 175\n            if position == 1:\n            #Right, on the bottom lane.\n                return 0, 475\n        if direction == 1:\n            if position == 0:\n                return 800, 125\n            if position == 1:\n                return 800, 425\n        if direction == 2:\n            if position == 0:\n                return 125, 0\n            if position == 1:\n                return 375, 0\n            if position == 2:\n                return 625, 0\n        if direction == 3:\n            if position == 0:\n                return 175, 600\n            if position == 1:\n                return 425, 600\n            if position == 2:\n                return 675, 600')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-python"},'import pygame\nimport CarHandler\n\n#Class responsible for the drawing and periodic updating of sprites\nclass Main():\n    #DELAY is the unique ID necessary to poll the reset background event.\n    DELAY = 20\n\n    def __init__(self):\n        #Creates the objects necessary for running the game\n        pygame.init()\n        #Canvas where the sprites and the background are drawn\n        self.screen = pygame.display.set_mode((800, 600))\n        pygame.display.set_caption("Traffic Director")\n        #This clock sets the frames per second at which the game runs\n        self.clock = pygame.time.Clock()\n        #This object handles the creation of every sprite.\n        self.handler = CarHandler.CarHandler(self)\n        #This boolean is what keeps the program running. When set to true, the program halts.\n        self.closed = False\n        self.FPS = 60\n        #Starts the loop that runs the program.\n        self.runGame()\n\n    def runGame(self):\n        #This while loop is what runs the game, and only stops when the program is closed by the user.\n        while not self.closed:\n            #Gets the time in between the ticks of the clock, which should roughly be 1/60th of a second.\n            deltaTime = self.clock.tick(self.FPS)\n            #Polls the game for events, such as mouse movement or clicks.\n            for event in pygame.event.get():\n                #Polls to see if the user has closed the game.\n                if event.type == pygame.QUIT:\n                    self.closed = True\n                #Polls to see if the user has clicked the mouse.\n                elif event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:\n                    self.handler.checkClicked(pygame.mouse.get_pos())\n                #Polls to see if the user has moved the mouse.\n                elif event.type == pygame.MOUSEMOTION:\n                    self.handler.checkHover(pygame.mouse.get_pos())\n                #Polls to see if the program should reset the background\n                elif event.type == self.DELAY:\n                    self.handler.resetBackground()\n\n            #Clears the screen, to draw NEW sprites. If the screen is not cleared, old images will remain, clogging the screen.\n            self.screen.fill((0, 0, 0))\n            #Updates all the sprites.\n            self.handler.update(deltaTime)\n            #Creates the background\n            background = self.handler.getBackground()\n            #Creates the group of sprites.\n            group = self.handler.getSprites()\n            #Draws the background.\n            self.screen.blit(background, background.get_rect())\n            #Draws and updates the sprites.\n            group.update(deltaTime)\n            group.draw(self.screen)\n            #Checks to see whether to display the lose grame.\n            if self.handler.lost:\n                self.showLoseScreen()\n            pygame.display.update()\n\n        #CLoses the program\n        pygame.quit()\n        quit()\n\n    #Deletes the current sprite storage class and creates another, effectively restarting the program.\n    def restartGame(self):\n        del self.handler\n        self.handler = CarHandler.CarHandler(self)\n\n    #Displays all objects relevant to the lose screen.\n    def showLoseScreen(self):\n        self.screen.blit(self.handler.loseGame, (260, 200))\n        self.screen.blit(self.handler.retry, (345, 480))\n\n    #Delays the resetting of the background after the screen flash is set to the background to emulate a screen flash.\n    def delayResetBackground(self):\n        pygame.time.set_timer(self.DELAY, 200)\n\n#Begins the program.\nMain()')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-python"},"#Class intended to return the pygame surface from the image path. Essentially converts the string path into an image the\n#library can use.\nimport pygame\n\nclass GraphicsHelper:\n    @staticmethod\n    #Static method that obtains the actual image from the string path.\n    def getImage(path):\n        image = pygame.image.load(path)\n        return image\n\n#Car class\nclass carSprite(pygame.sprite.Sprite):\n    def __init__(self, image, speed, direction, color, (posX, posY)):\n        pygame.sprite.Sprite.__init__(self)\n\n        #Rotates the image based on the direction of the car.\n        if direction > 1:\n            #Rotates the car 90 degrees if the car is going up or down. Otherwise leaves it be.\n            self.image = pygame.transform.rotate(GraphicsHelper.getImage(image), 90)\n        else:\n            self.image = GraphicsHelper.getImage(image)\n\n        #Sets the color of the sprite by filling the image.\n        self.image.fill(color)\n        #Sets the rect of the sprite, which is where the image is drawn.\n        self.rect = self.image.get_rect()\n        #Sets the position of the sprite itself.\n        self.position = (posX, posY)\n        #Sets the speed and the direction. The time is also set to zero, and sets the car to be moving.\n        self.speed = speed\n        self.direction = direction\n        self.time = 0\n        self.moving = True\n\n    #Moves the sprite, and then updates the location of the image.\n    def update(self, deltaTime):\n        if self.moving:\n            self.move()\n        self.rect.center = self.position\n        self.time += deltaTime\n\n    def getTime(self):\n        return self.time\n\n    def move(self):\n        #Sets the position of the sprite based on direction.\n        posX, posY = self.position\n        #Sets the x-component of the position vector.\n        if self.direction == 0:\n            posX += self.speed\n        elif self.direction == 1:\n            posX -= self.speed\n        #Sets the y-component of the position vector.\n        elif self.direction == 2:\n            posY += self.speed\n        elif self.direction == 3:\n            posY -= self.speed\n\n        #Sets the new position.\n        self.position = posX, posY\n\n    #Checks if a traffic light corresponding to the car's lane is red, and stops the car if so.\n    def checkTrafficLightStops(self, lights):\n        hasStopped = False\n        #Creates the components of the position vector.\n        posX = self.position[0]\n        posY = self.position[1]\n\n        #Checks for red traffic lights based on the direction.\n        if self.direction == 0:\n            #Chooses the corresponding traffic light based on the lane of the car.\n            if posY == 175:\n                #Checks for traffic lights based on the fact that the car is on the top lane and is moving right.\n                hasStopped = self.checkStop(0, lights)\n            else:\n                #Otherwise the car is on the bottom lane, and checks accordingly.\n                hasStopped = self.checkStop(1, lights)\n        if self.direction == 1:\n            if posY == 125:\n                hasStopped = self.checkStop(2, lights)\n            else:\n                hasStopped = self.checkStop(3, lights)\n        if self.direction == 2:\n            if posX == 125:\n                hasStopped = self.checkStop(4, lights)\n            elif posX == 375:\n                hasStopped = self.checkStop(5, lights)\n            else:\n                hasStopped = self.checkStop(6, lights)\n        if self.direction == 3:\n            if posX == 175:\n                hasStopped = self.checkStop(7, lights)\n            elif posX == 425:\n                hasStopped = self.checkStop(8, lights)\n            else:\n                hasStopped = self.checkStop(9, lights)\n\n        #If the car has NOT stopped, the car is set to move.\n        if not hasStopped:\n            self.moving = True\n\n    #A more complicated method that checks whether a traffic light on a lane is within certain distance of the car.\n    def checkStop(self, type, lights):\n        posX = self.position[0]\n        posY = self.position[1]\n        for light in lights:\n            if not light.go:\n                #Sets the components of the light position.\n                lPosX = light.position[0]\n                lPosY = light.position[1]\n                #The type in this method is actually the integer that corresponds to the lane AND the direction of the car.\n                if type == 0:\n                    #Top lane, right direction. Thus, the traffic light position must be on the lane.\n                    if lPosY == 209 and (lPosX == 89 or lPosX == 341 or lPosX == 591) and lPosX - posX < 10 and posX < lPosX:\n                        #Checks if the traffic lights on this lane are within a certain distance of the car. The car must also\n                        #be behind the traffic light, not in front.\n                        self.moving = False\n                        return True\n                if type == 1:\n                    if lPosY == 511 and (lPosX == 89 or lPosX == 341 or lPosX == 591) and lPosX - posX < 10 and posX < lPosX:\n                        self.moving = False\n                        return True\n                if type == 2:\n                    if lPosY == 89 and (lPosX == 211 or lPosX == 463 or lPosX == 713) and posX - lPosX < 10 and posX > lPosX:\n                        self.moving = False\n                        return True\n                if type == 3:\n                    if lPosY == 391 and (lPosX == 211 or lPosX == 463 or lPosX == 713) and posX - lPosX < 10 and posX > lPosX:\n                        self.moving = False\n                        return True\n                if type == 4:\n                    if lPosX == 89 and (lPosY == 89 or lPosY == 391) and lPosY - posY < 10 and posY < lPosY:\n                        self.moving = False\n                        return True\n                if type == 5:\n                    if lPosX == 341 and (lPosY == 89 or lPosY == 391) and lPosY - posY < 10 and posY < lPosY:\n                        self.moving = False\n                        return True\n                if type == 6:\n                    if lPosX == 591 and (lPosY == 89 or lPosY == 391) and lPosY - posY < 10 and posY < lPosY:\n                        self.moving = False\n                        return True\n                if type == 7:\n                    if lPosX == 211 and (lPosY == 209 or lPosY == 511) and posY - lPosY < 10 and posY > lPosY:\n                        self.moving = False\n                        return True\n                if type == 8:\n                    if lPosX == 463 and (lPosY == 209 or lPosY == 511) and posY - lPosY < 10 and posY > lPosY:\n                        self.moving = False\n                        return True\n                if type == 9:\n                    if lPosX == 713 and (lPosY == 209 or lPosY == 511) and posY - lPosY < 10 and posY > lPosY:\n                        self.moving = False\n                        return True\n        return False\n\n    #Checks if a car is stopped in front of this car.\n    def checkCarStop(self, carGroup):\n        posX = self.position[0]\n        posY = self.position[1]\n\n        for car in carGroup:\n            #Car position broken down into components.\n            cPosX = car.position[0]\n            cPosY = car.position[1]\n            #Checks if the car is within the same lane, not moving, and is within a certain distance of this car.\n            if self.direction == 0 and cPosY == posY and cPosX - posX < 50 and cPosX > posX and not car.moving:\n                #If the car is moving to the right.\n                self.moving = False\n                return True\n            if self.direction == 1 and cPosY == posY and posX - cPosX < 50 and cPosX < posX and not car.moving:\n                self.moving = False\n                return True\n            if self.direction == 2 and cPosX == posX and cPosY - posY < 50 and cPosY > posY and not car.moving:\n                self.moving = False\n                return True\n            if self.direction == 3 and cPosX == posX and posY - cPosY < 50 and cPosY < posY and not car.moving:\n                self.moving = False\n                return True\n\n        self.moving = True\n        return False\n\n#Traffic light class\nclass trafficSprite(pygame.sprite.Sprite):\n    def __init__(self, image, (posX, posY)):\n        pygame.sprite.Sprite.__init__(self)\n        self.position = (posX, posY)\n        self.image = GraphicsHelper.getImage(image)\n        self.rect = self.image.get_rect()\n        self.rect.center = self.position\n        self.go = True\n        self.image.fill((0, 255, 0))\n\n    #If click changes color, and changes interaction with cars.\n    def changeColor(self):\n        self.go = not self.go\n        #Switches between the two colors and states.\n        if self.go:\n            self.image.fill((0, 255, 0))\n        else:\n            self.image.fill((255, 0, 0))\n\n    #Detects and initiates the change if the user has clicked on the traffic light.\n    def detectChange(self, mPos):\n        if self.rect.collidepoint(mPos):\n            self.changeColor()\n\n    def getStop(self):\n        return self.go\n\n#Retry Button class\nclass retryButton(pygame.sprite.Sprite):\n    def __init__(self, image, (posX, posY)):\n        pygame.sprite.Sprite.__init__(self)\n        self.position = (posX, posY)\n        self.image = GraphicsHelper.getImage(image)\n        self.rect = self.image.get_rect()\n        self.rect.center = self.position\n\n    def detectMouse(self, mPos):\n        return self.rect.collidepoint(mPos)")}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-ruby"},"#This class determines whether an object will be drawn, and more importantly where it will be drawn.\nclass Camera\n  attr_accessor :camX\n  attr_accessor :camY\n  attr_accessor :width\n  attr_accessor :height\n  #camX and camY comprise the position of the camera, which determines what is drawn on the screen and where.\n  def initialize(x, y)\n    @camX = x\n    @camY = y\n    @width = 600\n    @height = 400\n  end\n  #This draws the given sprite at a point on the camera that it may be seen. This is to simulate the screen moving, when in\n  #fact the screen stays still and the game moves around it.\n  def translateX(x)\n    return x - @camX\n  end\n  #If the object is in view of the camera, draws it. Otherwise, does not.\n  def isInView?(x)\n    if x + 8 > @camX and x + 8 < @camX + @width\n      return true\n    else\n      return false\n    end\n  end\n\n  def update(pX)\n    @camX = pX - @width / 2\n  end\nend")}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-ruby"},'require \'Gosu\'\nrequire \'Texplay\'\nrequire_relative \'Block\'\nrequire_relative \'Player\'\nrequire_relative \'ExitDoor\'\nrequire_relative \'HealthBar\'\nrequire_relative \'Camera\'\nrequire_relative \'Turret\'\nrequire_relative \'Wall\'\nrequire_relative \'Spike\'\nrequire_relative \'XShooter\'\nrequire_relative \'Charger\'\nrequire_relative \'MissileLauncher\'\n\nclass Map\n  attr_accessor :DobjectArray\n  attr_accessor :PobjectArray\n  attr_accessor :EobjectArray\n\n  attr_accessor :camera\n  attr_accessor :player\n  attr_accessor :victory\n  attr_accessor :win\n\n  attr_accessor :checkRespawn\n  attr_accessor :enemyContainsPoint\n  attr_accessor :continue\n  attr_accessor :reset\n\n  attr_accessor :respawnX\n  attr_accessor :respawnY\n\n  def initialize(main)\n    #Gets the main program.\n    @main = main\n    #Sets the level of the game.\n    @level = 0\n    #Creates all the objects.\n    drawFromPixmap\n    #Background image of the game.\n    @background_image = Gosu::Image.new("Assets/space.png", :tileable => true)\n    #The mask of the game, which is used for washing the screen.\n    @mask = Gosu::Image.new("Assets/mask.png", :tileable => true)\n    #The victory screen, for when the player successfully completes the level.\n    @victoryScreen = Gosu::Image.new("Assets/victoryscreen.png", :tileable => true)\n    #The win screen, for when the player successfully completes the game.\n    @winScreen = Gosu::Image.new("Assets/winscreen.png", :tileable => true)\n    #The fade time which is used to reduce/increase the alpha of the mask over time.\n    @fadeTime = 0\n  end\n\n  # Creates all the tiles, using the information given by the pixelmap.\n  def drawFromPixmap\n    #Initializes the two object arrays, one for static, and one for dynamic.\n    @DobjectArray = Array.new\n    @SobjectArray = Array.new\n    #This is the array that is used for collision.\n    @KobjectArray = Array.new(400)\n    @KobjectArray.map! {Array.new(25, nil)}\n    #Initializes the object array for projectiles.\n    @PobjectArray = Array.new\n    #Initializes the object array for effects.\n    @EobjectArray = Array.new\n    #Initializes the array that contains all the respawn points.\n    @respawnArray = Array.new\n    #Sets victory and winto false.\n    @victory = false\n    @win = false\n    #Sets the pixel map in accordance with the level.\n    case @level\n    when 0\n      pixelMap = Gosu::Image.new("Assets/pixelmapL1.png")\n    when 1\n      pixelMap = Gosu::Image.new("Assets/pixelmapL2.png")\n    when 2\n      pixelMap = Gosu::Image.new("Assets/pixelmapL3.png")\n    end\n    #Iterates through all pixels in the pixelmap, creating objects depending on the color of the pixel.\n    for x in 0..399\n      for y in 0..24\n        #Gets the color and the type of object of the pixel.\n        color = pixelMap.get_pixel(x, y)\n        #If the color is black, move on, as it does not represent anything significant. This speeds up initialization\n        #significantly.\n        if color[0] == 0 and color[1] == 0 and color[2] == 0\n          next\n        end\n        #If the pixel is black, ignore, as it does not represent anything.\n        key = getFromPixel(color)\n        #Creates a block, as the pixel represents a block.\n        if key == "block"\n          block = Block::Block.new(x * 16, y * 16, self)\n          @SobjectArray.push(block)\n          #Sets that coordinate on the map to true for collision purposes.\n          @KobjectArray[x][y] = true\n        end\n        #Creates the player, as the pixel represents the player spawn.\n        if key == "player"\n          @player = Player::Player.new(x * 16, y * 16, self)\n          #Creates the first respawn point.\n          @respawnX = x * 16\n          @respawnY = y * 16\n          @healthBar = HealthBar::HealthBar.new(self)\n          @DobjectArray.push(@player)\n        end\n        #Adds a respawn point, as the pixel represents a respawn point.\n        if key == "respawn"\n          @respawnArray.push([x * 16, y * 16])\n        end\n        #Adds the exit door, as the pixel represents the exit door.\n        if key == "exitdoor"\n          @exitDoor = ExitDoor::ExitDoor.new(x * 16, y * 16, self)\n          @DobjectArray.unshift(@exitDoor)\n        end\n        #Creates a turret, as the pixel represents the turret spawn.\n        if key == "turret"\n          turret = Turret::Turret.new(x * 16, y * 16, self)\n          @DobjectArray.push(turret)\n        end\n        #Creates a wall enemy, as the pixel represents the wall enemy spawn.\n        if key == "wall"\n          wall = Wall::Wall.new(x * 16, y * 16, self)\n          @DobjectArray.push(wall)\n        end\n        #Creates a spike enemy, as the pixel represents the spike enemy spawn.\n        if key == "spike"\n          spike = Spike::Spike.new(x * 16, y * 16, self)\n          @DobjectArray.push(spike)\n        end\n        #Creates an xshooter enemy, as the pixel represents the xshooter enemy spawn.\n        if key == "xshooter"\n          xshooter = XShooter::XShooter.new(x * 16, y * 16, self)\n          @DobjectArray.push(xshooter)\n        end\n        #Creates a charger enemy, as the pixel represents the charger enemy spawn.\n        if key == "charger"\n          charger = Charger::Charger.new(x * 16, y * 16, self)\n          @DobjectArray.push(charger)\n        end\n        #Creates a missile launcher enemy, as the pixel represents the missile launcher enemy spawn.\n        if key == "missile launcher"\n          mLauncher = MissileLauncher::MissileLauncher.new(x * 16, y * 16, self)\n          @DobjectArray.push(mLauncher)\n        end\n      end\n    end\n    #Creates the camera.\n    @camera = Camera::Camera.new(@player.x, @player.y)\n    #The x and y of the respawn point.\n    @respawnX = 0\n    @respawnY = 0\n  end\n\n  #This tells the game what object to generate\n  def getFromPixel(color)\n    key = Gosu::Image.new("Assets/key.png")\n    #Red pixel, therefore it is a block.\n    if key.get_pixel(0, 0) == color\n      return "block"\n    end\n    #Green pixel, therefore it is a turret.\n    if key.get_pixel(0, 1) == color\n      return "turret"\n    end\n    #Cyan pixel, therefore it is a wall enemy.\n    if key.get_pixel(0, 2) == color\n      return "wall"\n    end\n    #Pink pixel, therefore it is a spike enemy.\n    if key.get_pixel(0, 3) == color\n      return "spike"\n    end\n    #Yellow pixel, therefore it is a xshooter enemy.\n    if key.get_pixel(0, 4) == color\n      return "xshooter"\n    end\n    #Maroon pixel, therefore it is a charger enemy.\n    if key.get_pixel(1, 0) == color\n      return "charger"\n    end\n    #Dark Green pixel, therefore it is a missile launcher enemy.\n    if key.get_pixel(1, 1) == color\n      return "missile launcher"\n    end\n    #Light gray pixel, therefore it is a respawn point.\n    if key.get_pixel(4, 2) == color\n      return "exitdoor"\n    end\n    #Gray pixel, therefore it is a respawn point.\n    if key.get_pixel(4, 3) == color\n      return "respawn"\n    end\n    #White pixel, therefore it is a player spawn.\n    if key.get_pixel(4, 4) == color\n      return "player"\n    end\n\n    return "none"\n  end\n\n  #If the tile is occupied by a blocker, returns true. Otherwise, returns false. This fashion of doing collision\n  #greatly increases FPS.\n  def returnBlocked?(x, y)\n    #Gets the coordinate of the position in terms of tiles. If the key object array reveals that\n    #this coordinate space is occupied, returns true. Otherwise, returns false.\n    if @KobjectArray[x / 16][(y + 16) / 16] == true\n      return true\n    else\n      return false\n    end\n  end\n\n  #Iterates through all enemy objects. If one of them contains the point, it is damaged and the method returns true.\n  def enemyContainsPoint?(x, y)\n    @DobjectArray.each do |object|\n      if object.is_a? Enemy and (object.x + object.width / 2 - x).abs <= object.width / 2 and (object.y - object.height / 2 - y).abs <= object.height / 2\n        object.loseHealth\n        return true\n      end\n    end\n    return false\n  end\n\n  #Draws each individual object in the map by iterating through all tiles.\n  def draw\n    #Updates the map if necessary.\n    update\n    #If the level is completed, draws a black screen with text on it. Also returns to prevent uncessary updates.\n    if @victory and !@win\n      @victoryScreen.draw(0, 0, 0)\n      return\n    #Same but for if the player wins the game.\n    elsif @victory and @win\n      @winScreen.draw(0, 0, 0)\n      return\n    end\n    #Draws background image. Note that it is drawn using the modulus operator. This is to ensure that the background "scrolls"\n    #through the screen, and does not only go through once. Further, the position is negative, and is offset by 600. This is to\n    #make the background move backwards while the player appears to move forwards. The division by 4 creates parallax\n    #scrolling, as the background moves at a slower pace than the camera does.\n    @background_image.draw(-((camera.camX + 400) / 4 % 1600) + 600, 0, 0)\n    #Draws each DYNAMIC object in the map.\n    @DobjectArray.each do |object|\n      object.draw\n    end\n    #Draws each PROJECTILE object in the map.\n    @PobjectArray.each do |object|\n      object.draw\n    end\n    #Draws each Static object in the map.\n    @SobjectArray.each do |object|\n      object.draw\n    end\n    #Draws each EFFECT object in the map.\n    @EobjectArray.each do |object|\n      object.draw\n    end\n    #Draws healthbar last.\n    @healthBar.draw\n    #If the game is fading in/out, a mask draws on the screen to emulate washing in/out.\n    if @fadingIn\n      @mask.draw(0, 0, 0, 1, 1, getAlphaIn)\n    elsif @fadingOut\n      @mask.draw(0, 0, 0, 1, 1, getAlphaOut)\n    end\n  end\n\n  #Updates the map as necessary.\n  def update\n    #If the map is fading, increments the fade time.\n    if @fadingOut or @fadingIn\n      @fadeTime += 1\n      #After fade time reaches 50, stops fading in/out.\n      if @fadeTime > 100\n        @fadeTime = 0\n        #If fading out, starts fading in immediately afterwards, and respawns the player.\n        if @fadingOut\n          @fadingOut = false\n          @fadingIn = true\n          @fadeIn\n          @player.respawn\n        #Otherwise just stops fading in.\n        elsif @fadingIn\n          @fadingIn = false\n        end\n      end\n    end\n    #Checks for whether the player has won.\n    checkVictory\n  end\n\n  #Checks if the player is past any of the respawn points. If so, sets the new respawn point.\n  def checkRespawn\n    @respawnArray.each do |respawn|\n      if @player.x > respawn[0] and respawn[0] > respawnX\n        @respawnX = respawn[0]\n        @respawnY = respawn[1]\n      end\n    end\n  end\n\n  #Checks if the player is currently inside the exit door. If so, starts the victory process.\n  def checkVictory\n    if @player.x > @exitDoor.x - @exitDoor.width / 2 and @player.x < @exitDoor.x + @exitDoor.width / 2 and @player.y >\n      @exitDoor.y - @exitDoor.height / 2 and @player.y < @exitDoor.y + @exitDoor.height / 2\n      winGame\n    end\n  end\n\n  #Sets fading out to true, so that the program knows to draw the mask.\n  def fadeOut\n    @fadingOut = true\n  end\n\n  #Sets fading in to true, so that the program knows to draw the mask.\n  def fadeIn\n    @fadingIn = true\n  end\n\n  #Based on the fade time, this gradually increases the opacity of the mask to create a fading out effect.\n  def getAlphaOut\n    if @fadeTime < 5\n      return 0x11_000000\n    elsif @fadeTime < 10\n      return 0x22_000000\n    elsif @fadeTime < 15\n      return 0x33_000000\n    elsif @fadeTime < 20\n      return 0x44_000000\n    elsif @fadeTime < 25\n      return 0x55_000000\n    elsif @fadeTime < 30\n      return 0x66_000000\n    elsif @fadeTime < 35\n      return 0x77_000000\n    elsif @fadeTime < 40\n      return 0x88_000000\n    elsif @fadeTime < 45\n      return 0x99_000000\n    elsif @fadeTime < 50\n      return 0xaa_000000\n    elsif @fadeTime < 55\n      return 0xbb_000000\n    elsif @fadeTime < 60\n      return 0xcc_000000\n    elsif @fadeTime < 65\n      return 0xdd_000000\n    elsif @fadeTime < 70\n      return 0xee_000000\n    else\n      return 0xff_000000\n    end\n  end\n  #Based on the fade time, this gradually decreases the opacity of the mask to create a fading in effect.\n  def getAlphaIn\n    if @fadeTime < 5\n      return 0xff_000000\n    elsif @fadeTime < 10\n      return 0xee_000000\n    elsif @fadeTime < 15\n      return 0xdd_000000\n    elsif @fadeTime < 20\n      return 0xcc_000000\n    elsif @fadeTime < 25\n      return 0xbb_000000\n    elsif @fadeTime < 30\n      return 0xaa_000000\n    elsif @fadeTime < 35\n      return 0x99_000000\n    elsif @fadeTime < 40\n      return 0x88_000000\n    elsif @fadeTime < 45\n      return 0x77_000000\n    elsif @fadeTime < 50\n      return 0x66_000000\n    elsif @fadeTime < 55\n      return 0x55_000000\n    elsif @fadeTime < 60\n      return 0x44_000000\n    elsif @fadeTime < 65\n      return 0x33_000000\n    elsif @fadeTime < 70\n      return 0x22_000000\n    else\n      return 0x11_000000\n    end\n  end\n\n  #Sets victory to true. If on the final level, also sets win to true.\n  def winGame\n    @victory = true\n    if @level == 2\n      @win = true\n    end\n  end\n\n  #Continues to the next level by incrementing the level and then launching the draw from pixmap.\n  def continue\n    @victory = false\n    @level += 1\n    drawFromPixmap\n  end\n\n  #Restarts the level by launching the draw from pixmap without changing the level.\n  def reset\n    @victory = false\n    @win = false\n    drawFromPixmap\n  end\nend')}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-ruby"},"require 'gosu'\nrequire_relative 'MapObject'\nrequire_relative 'PlayerBullet'\nrequire_relative 'PlayerDeath'\n#The main player.\nclass Player < MapObject\n  attr_accessor :jump\n  attr_accessor :shoot\n  attr_accessor :containsPoint\n  attr_accessor :loseHealth\n  attr_accessor :freeze\n  attr_accessor :unFreeze\n\n  attr_accessor :health\n  attr_accessor :color\n\n  def initialize(x, y, map)\n    super x, y, Gosu::Image.new(\"Assets/player.png\"), map\n    @velX = 0\n    @velY = 0\n    @health = 5\n    @invulnerableTime = 0\n    @direction = 1\n    @jumping = false\n    @dJumping = false\n  end\n\n  #Instantly moves the player to the given location.\n  def move(x, y)\n    @x, @y = x, y\n  end\n\n  #Sets the velocity of the player.\n  def setVelocity(x, y)\n    @velX, @velY = x, y\n  end\n\n  #Returns true if the player contains the point. This is useful for registering a collision with enemies.\n  def containsPoint?(x, y)\n    if (@x + 8 - x).abs <= 8 and (@y - 8 - y).abs <= 8\n      return true\n    else\n      return false\n    end\n  end\n\n  #Checks if the cell the player would be in is blocked. If so returns true. Otherwise, returns false.\n  def isBlocked?\n    for x in @x.round..(@x + @width).round\n      for y in (@y - @height).round..@y.round\n        if @map.returnBlocked?(x, y)\n          return true\n        end\n      end\n    end\n    return false\n  end\n\n  #Checks if the player is currently below the screen (falls off a cliff or fails to land on a platform). If so, kills\n  #the player\n  def outOfBounds\n    if @y > 400\n      death\n    end\n  end\n\n  #This moves the player by the velocity in its individual components. Also detects collision.\n  def tryMove\n    #Factors in gravity's acceleration.\n    @velY -= @GRAVITY\n    #Terminal velocity is 4.\n    if @velY > 4\n      @velY = 4\n    end\n    #Checks for any collisions with blocks.\n    detectCollision\n  end\n\n  #Tries to move the player by each velocity component. However, if the area is blocked, moves the player back and sets\n  #that velocity component to zero.\n  def detectCollision\n    #Current x and y, soon to be old x and y.\n    oldX = @x\n    oldY = @y\n    #Moves on the x-axis, then checks if the new position of the player is blocked. If so, returns the player to the old\n    #position.\n    @x += @velX\n    if isBlocked?\n      @x = oldX\n      @velX = 0\n    end\n    #Same but for the y-axis. Note that this may allow the player to jump again.\n    @y += @velY\n    if isBlocked?\n      #If the player is travelling downwards, he is allowed to jump/double jump again.\n      if @velY > 0\n        @jumping = false\n        @dJumping = false\n      end\n      @y = oldY\n      @velY = 0\n    end\n  end\n\n  #Shoots a bullet out from the center of the player. This bullet can collide with enemies and damage them.\n  def shoot\n    #This count is the number of bullets currently on the map.\n    bCount = 0\n    #For every bullet in the projectile map, adds one to the bullet count.\n    @map.PobjectArray.each do |object|\n      if object.is_a? PlayerBullet\n        bCount += 1\n      end\n    end\n    #If five bullets are on the map, no more can be created until one is destroyed.\n    if bCount == 5\n      return\n    end\n    #Else creates the bullet and launches it. Also adds it to the rendering list.\n    bullet = PlayerBullet.new(@x, @y, @direction, @map)\n    @map.PobjectArray.push(bullet)\n  end\n\n  #Sets a high initial y-velocity to emulate the player jumping. Also tells the program that the player is currently jumping\n  #and therefore cannot jump again.\n  def jump\n    @velY = -20\n    @jumping = true\n  end\n\n  #Sets a high initial y-velocity to emulate the player double jumping. Also tells the program that the player is currently\n  #double jumping and therefore cannot double jump again.\n  def doubleJump\n    @velY = -15\n    @dJumping = true\n  end\n\n  #If the player is not currently jumping, makes the player jump.\n  def decideJump\n    #Player can jump if he is not falling and he hasn't jumped.\n    if !@jumping and @velY <= 0\n      jump\n    #Player can double jump if he has not double jumped.\n    elsif !@dJumping\n      doubleJump\n    end\n  end\n\n  #Loses one health point.\n  def loseHealth\n    #If the player is invulnerable, he cannot take damage until he is vulnerable once again.\n    if @invulnerable\n      return\n    end\n    #Otherwise, the player is hurt and set to invulnerable for a short period. Also colors the player red and resets the\n    #invulnerable timer.\n    @health -= 1\n    #If the health of the player is zero, kills the player.\n    if health == 0\n      death\n    #Otherwise makes the player invulnerable for a short time.\n    else\n      @invulnerable = true\n      @invulnerableTime = 0\n      @color = 0xff_ff0000\n    end\n  end\n\n  #Makes player vulnerable if time is greater than 15 and resets the player's color.\n  def checkInvulnerableEnd\n    if @invulnerableTime > 75\n      @invulnerable = false\n      @color = 0xff_ffffff\n    end\n  end\n\n  #Updates all time-related variables.\n  def updateTime\n    #Increments invulnerable time if invulnerable. If greater than the invulnerability period, makes the player vulnerable.\n    if @invulnerable\n      @invulnerableTime += 1\n      checkInvulnerableEnd\n    end\n  end\n\n  #This updates the player's object. Essentially, sets the velocity, depending on the player's inputs, and then moves the player\n  #afterwards.\n  def update\n    #Updates all times\n    updateTime\n    #Checks whether the player has activated a new respawn point.\n    @map.checkRespawn\n    #Checks whether the player has gone out of bounds (below the screen).\n    outOfBounds\n\n    #A or D keys pressed. A moves backwards, D forwards.\n    if Gosu::button_down? Gosu::KbA\n      setVelocity(-3.5, @velY)\n      @direction = -1\n    elsif Gosu::button_down? Gosu::KbD\n      setVelocity(3.5, @velY)\n      @direction = 1\n    else\n      setVelocity(0, @velY)\n    end\n    #Updates the camera and moves the player.\n    @map.camera.update(@x)\n    tryMove\n  end\n\n  #Kills the player, blacks out the screen, and respawns him.\n  def death\n    #Halts the player.\n    @velX = 0\n    @velY = 0\n    #Creates a player death effect in a star pattern.\n    death1 = PlayerDeath.new(@x, @y, 0, @map)\n    death2 = PlayerDeath.new(@x, @y, Math::PI / 4, @map)\n    death3 = PlayerDeath.new(@x, @y, Math::PI / 2, @map)\n    death4 = PlayerDeath.new(@x, @y, Math::PI * 3 / 4, @map)\n    death5 = PlayerDeath.new(@x, @y, Math::PI, @map)\n    death6 = PlayerDeath.new(@x, @y, Math::PI * 5 / 4, @map)\n    death7 = PlayerDeath.new(@x, @y, Math::PI * 3 / 2, @map)\n    death8 = PlayerDeath.new(@x, @y, Math::PI * 7 / 4, @map)\n    #Adds to the rendering list.\n    @map.EobjectArray.push(death1)\n    @map.EobjectArray.push(death2)\n    @map.EobjectArray.push(death3)\n    @map.EobjectArray.push(death4)\n    @map.EobjectArray.push(death5)\n    @map.EobjectArray.push(death6)\n    @map.EobjectArray.push(death7)\n    @map.EobjectArray.push(death8)\n    #Removes the player from the rendering list.\n    @map.DobjectArray.delete(self)\n    #Fades out the screen.\n    @map.fadeOut\n  end\n  #Respawns the player.\n  def respawn\n    #Moves the player to the respawn point.\n    move(@map.respawnX, @map.respawnY)\n    #Adds the player to the rendering list.\n    @map.DobjectArray.push(self)\n    #Resets health.\n    @health = 5\n    #Resets invulnerability.\n    @invulnerable = false\n    @invulnerableTime = 0\n    @color = 0xff_ffffff\n  end\nend")}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-ruby"},"require 'gosu'\nrequire_relative 'MapObject'\nrequire_relative 'EnemyDeath'\n#The enemy super class. Closely resembles the player class.\nclass Enemy < MapObject\n  def initialize(x, y, image, map, health)\n    super x, y, image, map\n    @invulnerableTime = 0\n    @health = health\n  end\n\n  def move(x, y)\n    @x, @y = x, y\n  end\n\n  def setVelocity(x, y)\n    @velX, @velY = x, y\n  end\n\n  def tryMove\n    @velY -= @GRAVITY\n    if @velY > 4\n      @velY = 4\n    end\n    detectCollision\n  end\n\n  def isBlocked?()\n    for x in @x.round..(@x + @width).round\n      for y in (@y - @height).round..@y.round\n        if @map.returnBlocked?(x, y)\n          return true\n        end\n      end\n    end\n    return false\n  end\n\n  def detectCollision\n    oldX = @x\n    oldY = @y\n    @x += @velX\n    if isBlocked?\n      @x = oldX\n      @velX = 0\n    end\n    @y += @velY\n    if isBlocked?\n      @y = oldY\n      @velY = 0\n      @jumping = false\n    end\n  end\n\n  def jump\n    @velY = -25\n    @jumping = true\n  end\n\n  #This method kills the enemy by first creating an enemy death animation, and then removing the enemy itself.\n  def die\n    #This spawns the enemy death effects in such a way that they are all travelling apart. Essentially, creates four\n    #enemy death effects, setting each at a different angle. This creates an X-pattern. This angle is used to create the\n    #velocity of each of the 4 enemy death animations (which are small particles).\n    death1 = EnemyDeath.new(@x, @y, 45 * Math::PI / 180, @map, @pColor)\n    death2 = EnemyDeath.new(@x, @y, 135 * Math::PI / 180, @map, @pColor)\n    death3 = EnemyDeath.new(@x, @y, 225 * Math::PI / 180, @map, @pColor)\n    death4 = EnemyDeath.new(@x, @y, 315 * Math::PI / 180, @map, @pColor)\n    #Adds to the rendering list.\n    @map.EobjectArray.push(death1)\n    @map.EobjectArray.push(death2)\n    @map.EobjectArray.push(death3)\n    @map.EobjectArray.push(death4)\n    #Deletes self from the program.\n    @map.DobjectArray.delete(self)\n  end\n\n  #If the enemy collides with the player, it will cause him to lose health.\n  def collidesWithPlayer\n    for x in @x.round..(@x + @width).round\n      for y in (@y - @height).round..@y.round\n        if @map.player.containsPoint?(x, y)\n          @map.player.loseHealth\n        end\n      end\n    end\n  end\n\n  def loseHealth\n    #If the enemy has a health of -1, that means it cannot be hurt and is an invincible enemy.\n    if @invulnerable or @health == -1\n      return\n    end\n    @health -= 1\n    if @health == 0\n      die\n      return\n    else\n      @invulnerable = true\n      @invulnerableTime = 0\n      @color = 0xff_ffffff\n    end\n  end\n\n  def checkInvulnerableEnd\n    if @invulnerableTime > 50\n      @invulnerable = false\n      @color = @pColor\n    end\n  end\n\n  #Updates all time-related variables.\n  def updateTime\n    #Increments invulnerable time if invulnerable. If greater than the invulnerability period, makes the enemy vulnerable.\n    if @invulnerable\n      @invulnerableTime += 1\n      checkInvulnerableEnd\n    end\n  end\n\n  def update\n  end\n\nend")}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-ruby"},"require 'gosu'\nrequire_relative 'MapObject'\nrequire_relative 'Enemy'\nrequire_relative 'Bullet'\n#An XShooter class. This enemy shoots at the player in a cross and X pattern.\nclass XShooter < Enemy\n  #Initializes the different angles and times used in the XShooter.\n  def initialize(x, y, map)\n    super x, y, Gosu::Image.new(\"Assets/xshooter.png\"), map, 2\n    @shootTime = 0\n    @resetTime = 31\n    @color = 0xff_00ffff\n    @pColor = 0xff_00ffff\n    @angle = 0\n    @shootAngle = 0\n    @rotateTime = 0\n  end\n\n  #Updates the XShooter in various ways.\n  def update\n    #Updates invulnerability timing.\n    updateTime\n    #If the XShooter has rotated long enough, and has nearly achieved the desired angle, shoots.\n    if @shootTime > 100 and (@angle - @shootAngle).abs < 0.2\n      #Sets the XShooter's angle to the shooting angle (which is 0 initially) and shoots four bullets.\n      @angle = @shootAngle\n      shoot\n      #Increases the shoot angle so that the XShooter will change its shape the next time it shoots.\n      @shootAngle += Math::PI / 4\n      #Ensures the angle does not become too high.\n      @shootAngle = @shootAngle % (Math::PI * 2)\n      #Resets the shoot time and the reset time. This temporarily freezes the XShooter and resets the cooldown for its next\n      #shot.\n      @shootTime = 0\n      @resetTime = 0\n    end\n    #If the XShooter has remained frozen for long enough, will rotate the XShooter. Note the use of rotateTime. This is to\n    #ensure the XShooter does not rotate too quickly.\n    if @resetTime > 30 and @rotateTime > 1\n      rotate\n      @rotateTime = 0\n    end\n    #Increments all the different timings.\n    @shootTime += 1\n    @resetTime += 1\n    @rotateTime += 1\n  end\n\n  #Creates four bullets, fired at four angles.\n  def shoot\n    bullet1 = Bullet.new(@x, @y, @angle, @map, @pColor)\n    bullet2 = Bullet.new(@x, @y, @angle + Math::PI / 2, @map, @pColor)\n    bullet3 = Bullet.new(@x, @y, @angle + Math::PI, @map, @pColor)\n    bullet4 = Bullet.new(@x, @y, @angle + Math::PI * 3 / 2, @map, @pColor)\n\n    @map.PobjectArray.push(bullet1)\n    @map.PobjectArray.push(bullet2)\n    @map.PobjectArray.push(bullet3)\n    @map.PobjectArray.push(bullet4)\n  end\n\n  #Rotates the Xshooter so that it is constantly spinning.\n  def rotate\n    @angle += Math::PI / 16\n    @angle = @angle % (Math::PI * 2)\n  end\nend")}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(7),c=n.n(l),u=n(8),d=(n.n(u),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){return s.a.createElement(c.a,{component:"pre",className:"language-ruby"},"require 'gosu'\nrequire_relative 'MapObject'\nrequire_relative 'Enemy'\nrequire_relative 'Missile'\n#A missile launcher class that orbits in a circle while firing missiles at the player.\nclass MissileLauncher < Enemy\n\n  def initialize(x, y, map)\n    super x, y, Gosu::Image.new(\"Assets/missilelauncher.png\"), map, 3\n    @shootTime = 0\n    @color = 0xff_ffff00\n    @pColor = 0xff_ffff00\n    @spawnX = x\n    @spawnY = y\n    @angle = 0\n  end\n\n  #Updates the missile launcher so that it continuously circles. Every once in a while, will also fire a missile.\n  def update\n    updateTime\n    circle\n    if @shootTime > 200\n      shoot\n      @shootTime = 0\n    end\n    @shootTime += 1\n  end\n\n  #Creates a missile, which is launched at the player. This missile follows the player and will attempt to bash into him.\n  def shoot\n    missile = Missile.new(@x + Math.cos(@angle), @y + Math.sin(@angle), @map, @pColor)\n    @map.PobjectArray.push(missile)\n  end\n\n  #Constantly circles around its spawn point, by readjusting its angle and applying functions to it.\n  def circle\n    #Increments angle by a small amount.\n    @angle += Math::PI / 64\n    #Sets its position based upon the cosine and sine of its angle. Note the use of 50 to amplify its radius in movement.\n    @x = Math.cos(@angle) * 50 + @spawnX\n    @y = Math.sin(@angle) * 50 + @spawnY\n    #Ensures that the angle does not become too large.\n    @angle %= (Math::PI * 2)\n  end\nend")}}]),t}(s.a.Component);t.a=p},function(e,t,n){"use strict";function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,"b",function(){return j}),n.d(t,"a",function(){return I}),n.d(t,"c",function(){return N}),n.d(t,"d",function(){return B});var i,o,a,s,l=n(23),c=n(251),u=n.n(c),d=n(252),p=n.n(d),f=n(253),h=n.n(f),m=n(254),g=n.n(m),y=n(255),b=n.n(y),v=n(256),w=n.n(v),x=n(257),T=n.n(x),S=n(258),C=n.n(S),k=n(259),O=n.n(k),E=n(260),P=n.n(E),j=(i={},r(i,l.f,"https://github.com/AkshaySG14/AkshaySG14.github.io"),r(i,l.e,"https://github.com/AkshaySG14/Fates-Reprise"),r(i,l.g,"https://github.com/AkshaySG14/MapBlue"),r(i,l.b,"https://github.com/AkshaySG14/Dark-and-Light"),r(i,l.h,"https://github.com/AkshaySG14/Circle-Game"),r(i,l.j,"https://github.com/AkshaySG14/Pixel-Knight"),r(i,l.a,"https://github.com/AkshaySG14/Color-Synthesizer"),r(i,l.c,"https://github.com/AkshaySG14/Document-Encryptor"),r(i,l.d,"https://github.com/AkshaySG14/File-Encryptor"),r(i,l.l,"https://github.com/AkshaySG14/Traffic-Director"),r(i,l.k,"https://github.com/AkshaySG14/Space-Shooter"),i),I=(o={},r(o,l.f,u.a),r(o,l.e,p.a),r(o,l.g,h.a),r(o,l.b,g.a),r(o,l.h,"https://play.google.com/store/apps/details?id=memori.circle&hl=en"),r(o,l.j,b.a),r(o,l.a,w.a),r(o,l.c,T.a),r(o,l.d,C.a),r(o,l.l,O.a),r(o,l.k,P.a),o),_="Mac Application Download",R="Jar Download",A="Source Code Download",N=(a={},r(a,l.f,A),r(a,l.e,R),r(a,l.g,_),r(a,l.b,R),r(a,l.h,"Google Playstore Link"),r(a,l.j,R),r(a,l.a,_),r(a,l.c,_),r(a,l.d,_),r(a,l.l,A),r(a,l.k,_),a),B=(s={},r(s,l.f,"WebsiteSourceCode.zip"),r(s,l.e,"FatesReprise.jar"),r(s,l.g,"MapBlue.jar"),r(s,l.b,"DarkAndLight.jar"),r(s,l.h,null),r(s,l.j,"PixelKnight.jar"),r(s,l.a,"ColorSynthesizer.zip"),r(s,l.c,"DocumentEncryptor.zip"),r(s,l.d,"FileEncryptor.zip"),r(s,l.l,"TrafficDirector.zip"),r(s,l.k,"SpaceShooter.zip"),s)},function(e,t,n){e.exports=n.p+"static/media/SourceCode.3a709878.zip"},function(e,t,n){e.exports=n.p+"static/media/FatesReprise.f7f07584.jar"},function(e,t,n){e.exports=n.p+"static/media/MapBlue.62340e93.zip"},function(e,t,n){e.exports=n.p+"static/media/DarkAndLight.639e7a47.jar"},function(e,t,n){e.exports=n.p+"static/media/PixelKnight.3ae9ce20.jar"},function(e,t,n){e.exports=n.p+"static/media/ColorSynthesizer.047fa95e.zip"},function(e,t,n){e.exports=n.p+"static/media/DocumentEncryptor.b4f7298b.zip"},function(e,t,n){e.exports=n.p+"static/media/FileEncryptor.fee09b7f.zip"},function(e,t,n){e.exports=n.p+"static/media/TrafficDirector.0d80c2ec.zip"},function(e,t,n){e.exports=n.p+"static/media/SpaceShooter.6a0b1867.zip"},function(e,t,n){"use strict";function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,"a",function(){return v});var i,o=n(0),a=n.n(o),s=n(23),l=n(262),c=n(263),u=n(264),d=n(265),p=n(266),f=n(267),h=n(268),m=n(269),g=n(270),y=n(271),b=n(272),v=(i={},r(i,s.f,a.a.createElement(l.a,null)),r(i,s.e,a.a.createElement(c.a,null)),r(i,s.g,a.a.createElement(u.a,null)),r(i,s.b,a.a.createElement(d.a,null)),r(i,s.h,a.a.createElement(p.a,null)),r(i,s.j,a.a.createElement(f.a,null)),r(i,s.a,a.a.createElement(h.a,null)),r(i,s.c,a.a.createElement(m.a,null)),r(i,s.d,a.a.createElement(g.a,null)),r(i,s.l,a.a.createElement(y.a,null)),r(i,s.k,a.a.createElement(b.a,null)),i)},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),l(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("br",null),s.a.createElement("h1",null,"Welcome to Akshay's Applications"),s.a.createElement("p",null,"My love for programming began in a very humble environment. Back around the early 2000's when I was very young, I used to program Warcraft III: The Frozen Throne games. Though my youthful inexperience prevented me from finishing the majority of my custom games, these early attempts sparked my passion for programming, and I learned a great deal of coding principles from working with the psuedo-language JASS.",s.a.createElement("br",null),s.a.createElement("br",null),"As I grew, I began to learn actual programming languages, and utilized my newly-gained knowledge to create the various programs on this site. These applications do not only serve as outlets for my love of programming, but also show how far I've come as a software developer since I began. They also greatly boosted my knowledge of each individual programming language and software development as a whole."),s.a.createElement("p",null,"This site is a compilation of all the different projects I've worked on thus far. These have been written in a variety of languages and are based on different rendering engines.",s.a.createElement("br",null),s.a.createElement("br",null),"Note that these projects are coded without the use of any software to develop them such as GameSalad or other GameMakers. This means that they are for the most part written completely from scratch (some entirely so), and can be read solely based on knowledge accrued from study of the various programming languages."),s.a.createElement("h3",null,"How This Website Was Made"),s.a.createElement("p",null,"This site was made in React-Redux, with some third party libraries for UI purposes (such as React-Bootstrap, awesome-fonts, etc.). Originally, this website was made in HTML, CSS, and Javascript (with some heavy jQuery). However, after realizing the wonders of React-Redux and the immense efficiency it brings to the website and the maintainability and clarity it adds to the code, I decided to redesign the website in React-Redux. I learned React-Redux primarily during my internships, but the actual construction of the site was done with the help of React documentation and several online websites (Stack Overflow being the primary one). The end result is an app that is much cleaner and easier to maintain than my previous HTML website, and one that is far speedier, maintainable, and scalable than the one I had before."))}}]),t}(s.a.Component);t.a=c},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),l(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("br",null),s.a.createElement("h1",null,"Fate's Reprise"),s.a.createElement("p",null,"Fate's Reprise is a desktop game, and is heavily inspired by the handheld game Link's Awakening. Fate's Reprise is a top-down game where the player controls a single character named Daur. The goal of the game is to rescue eight gods who are trapped in formidable dungeons. Fate's Reprise makes use of fluid combat, puzzle-solving, and interesting dialogue to create an intriguing and deep game that users will find both challenging and interesting. By battling with both sword and spells, the game offers a variety of ways to tackle enemies and bosses as well as numerous, difficult puzzles.",s.a.createElement("br",null),s.a.createElement("br",null),"As a computer game, Fate's Reprise is operated through the keyboard exclusively. The basic movement controls are the WASD scheme. Press F to talk to someone or activate a button/event. Press J, K, or L to use the items in the game. Press Esc to go to the pause menu, where the user may equip items using the WASD and JKL keys. Pressing the Esc key when a shop windows is open will close it. Additionally, by pressing the secondary button (X) on the pause screen, the user may go to a secondary screen, where the user can view his/her quest items and save/quit the game. Pressing the X button on the normal screen will bring up the map of the overworld/dungeons.",s.a.createElement("br",null),s.a.createElement("br",null),"For anyone wishing to play the game itself, a jar is available for download, which allows any OS to easily launch and run the game. It is located in the Jar Folder in the main folder. Simply double click and play. If for whatever reason this doesn't work, the jar file can be launched via terminal/command line. However, the jar file name must be changed to something without a space and apostrophe before being launched via terminal/command line.",s.a.createElement("br",null),s.a.createElement("br",null),"Some of the sounds of the game are taken directly from Link to the Past, Link's Awakening, and Link Oracle of Seasons/Ages. Some were created by myself using the various chiptunes soundmakers online. The music of the game is all directly ripped from Link's Awakening, as it was a great source of inspiration for Fate's Reprise."),s.a.createElement("h3",null,"How and Why Fate's Reprise Was Made"),s.a.createElement("p",null,"Initially, Fate's Reprise was made as an attempt to expand upon my knowledge of Java after completing my first desktop game, Pixel Knight. As I felt Pixel Knight to be too simple and unpolished for my liking, I sought to use my acquired knowledge to create a polished and aesthetically pleasing game. To date, Fate's Reprise is the most complicated coding project I have attempted, and it shows in the numerous, varied aspects of the game.",s.a.createElement("br",null),s.a.createElement("br",null),"Language-wise, Fate's Reprise is completely written in Java, and is built upon the Libgdx Java framework. However, Libgdx is mostly used for the rendering of the sprites and the background, and thus is largely unnecessary to understand the code of this game. The game can be understood with a decent understanding of Java, and can be read and used as a learning tool.",s.a.createElement("br",null)))}}]),t}(s.a.Component);t.a=c},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),l(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("br",null),s.a.createElement("h1",null,"Map Blue"),s.a.createElement("p",null,"Map Blue is an iOS app that was made during the first-year University of Michigan course ENGR 100. A collaborative effort, Map Blue was developed by my ENGR 100 team - consisting of University of Michigan engineers Nadya Barghouty, James Jiang, Sharon Sun, and Akshay Subramaniam.",s.a.createElement("br",null),s.a.createElement("br",null),"Designed to be a simple app, Map Blue itself features only four screens: a building screen, a room screen, and a primary/secondary map screen. The building screen is where users can select the building for which they wish to be given a map and proper directions, although only one building, the EECS building, has been fully fleshed out. The room screen is where the user selects which room they are coming from, and which room they wish to go to. The main reason for the design decision behind the user manually entering their location, rather than tracking their location and only asking for their destination, was that it was immensely difficult to accurately keep track of a user's location inside of a building via geolocation. The second reason behind it was that if the user were to have spotty connection while their location was being determined via geolocation, it would greatly hamper efforts to guide them. Thus, requiring the user to enter their current location and destination eliminated the difficulty of tracking their location via GPS, and prevented a spotty connection from frustrating users.",s.a.createElement("br",null),s.a.createElement("br",null),"The final two screens, the primary and secondary map screens, show electronic displays of the building floorplans for the building the user has selected. The primary map screen shows the layout of the floor the user is on and the directions the user needs to get from their current location to their destination (or the stairs leading to their destination should it lie on another floor). On the other hand, the secondary, and potentially unneeded, map screen shows the second floor the user must traverse with corresponding directions.",s.a.createElement("br",null),s.a.createElement("br",null),"To try out this mobile app, one can download the simulation files and run it via Xcode, either through the iPhone simulator or directly on a device that uses iOS."),s.a.createElement("h3",null,"How and Why Map Blue Was Made"),s.a.createElement("p",null,"Map Blue was our final group project for ENGR 100 - Urban Mobility. It was about a month-long endeavor whose purpose was to construct a mobility-focused app that could assist University of Michigan students. After noticing that the EECS, Dow, and GG Brown buildings were challenging for students to navigate through, especially for new students, we designed and developed Map Blue, an app that specifically targeted improving mobility indoors. Although we did not manage to fully flesh out the app, we did succeed in creating a function app that was tested with actual users, and creating a full presentation and display for it.",s.a.createElement("br",null),s.a.createElement("br",null),"On the more technical side, Map Blue was an iOS app entirely designed in Swift. It was made as an iOS app because the team felt that Swift and iOS app development as a whole was a fast, efficient, and easy way to develop an app that would reach a large amount of users. Though a little rough around the edges due to time constrains, Map Blue has a robust and extensible software architecture that could easily form the base of a fully functional and useful app. Developing Map Blue also certainly taught me how to properly design an iOS app, and create a flexible and efficient architecture in Swift that serves the user's needs in milliseconds.",s.a.createElement("br",null)))}}]),t}(s.a.Component);t.a=c},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),l(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("br",null),s.a.createElement("h1",null,"Dark and Light"),s.a.createElement("p",null,"Dark and Light is a light-based game that is quite simple to operate. The player controls one small green ball that can move in any direction. Because the game takes place in complete darkness, the player can also switch on and off a green flash light. However, the player does not only have to contend with darkness alone, he is also antagonized by numerous enemies who use different shades of light to injure the player. Navigating through the darkness, the player must reach the end of the level safely, solving puzzles and dodging enemies along the way.",s.a.createElement("br",null),s.a.createElement("br",null),"The game can only be played through the use of a computer (either Mac or PC), and is run through a Java jar. Both a keyboard and a mouse are necessary to play this game. Language-wise, the game is written solely in Java, and utilizes the Libgdx framework, as well as the box2d and box2dlight extensions. The programming behind the game consists mainly of math, in the areas of both physics and geometry. Despite this, the game only requries an elementary understanding of math to comprehend, and the code itself is not terribly difficult to comprehend.",s.a.createElement("br",null),s.a.createElement("br",null),"The basic controls of the game are as follows: WASD keys for movement and a mouse for rotating the flashlight and turning it on/off."),s.a.createElement("h3",null,"How and Why Dark and Light Was Made"),s.a.createElement("p",null,"Dark and Light was a project made to play with the Box2D phyiscs and lights library. As I had never used lighting or serious physics in my previous applications, I wished to experiment with these concepts in code. The game itself makes extensive use of the Box2D library, and uses real force concepts to create the lighting and physics effects.",s.a.createElement("br",null),s.a.createElement("br",null),"Language-wise, Dark and Light is completely written in Java, and is built upon the Libgdx and Box2D Java libraries. However, Libgdx is mostly used for the rendering of the sprites and the background, and thus is largely unnecessary to understand the code of this game. Similarly Box2D is only used for rendering and some movement. The game can be understood with a decent understanding of Java, and can be read and used as a learning tool.",s.a.createElement("br",null)))}}]),t}(s.a.Component);t.a=c},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),l(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("br",null),s.a.createElement("h1",null,"Memori"),s.a.createElement("p",null,"Memori is a simple memory game involving patterns. Memori was a game developed for android, and consists of players memorizing and then repeating randomly selected patterns of circles. The game itself was developed on android studio, and uses no game engine to support itself. Thus, the code may be a little verbose. Nevertheless, the code does function and should provide for a learning experience for aspiring android developers. To access the game itself, the application must be downloaded from the android store.",s.a.createElement("br",null),"NOTE: The game is only available on android and can only be downloaded through the Google Play Store"),s.a.createElement("h3",null,"How and Why Memori Was Made"),s.a.createElement("p",null,"Inspired by the power of Java after taking AP Computer Science, I decided to attempt to hardcode an Android application. Thus I began developing Memori, and created the game after a couple of months learning how to code in Android. After much hard work, I finally produced a finished product that could be published, and released it on the Google Play Store.",s.a.createElement("br",null),s.a.createElement("br",null),"Language-wise, Memori is coded with absolutely no engine or software assistance. Thus, Memori can be read without any knowledge other than a basic understanding of Java and cursory knowledge of the Android APIs. However, the game does require basic runtime knowledge such as locking and running threads, multithreading, and basic rendering concepts.",s.a.createElement("br",null),s.a.createElement("br",null),"The code for Memori is noticeably untidy, as it was my first attempt at a legitimate, long-term application. That being said, it should still be decently readable and didactic.",s.a.createElement("br",null)))}}]),t}(s.a.Component);t.a=c},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),l(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("br",null),s.a.createElement("h1",null,"Pixel Knight"),s.a.createElement("p",null,"Pixel Knight is a desktop platformer game much like Shovel Knight or Super Mario World. Pixel Knight follows the tale of a lone knight in search of adventure in the Iben Peninsula, and features numerous enemies, levels, and puzzles.",s.a.createElement("br",null),s.a.createElement("br",null),"As a computer game, Pixel Knight is operated through the use of arrow keys, the keyboard, and the mouse/trackpad, although some of the settings can be changed in game. Arrow keys are used in the title and over world screen, while the mouse/trackpad is used in option screens and the controls screen. In-game controls are entirely modifiable, although the default controls use the WASD setup in addition to the left, right, and middle mouse buttons.",s.a.createElement("br",null),s.a.createElement("br",null),"The game was made through use of the Java framework Libgdx, but still mostly operates upon the principles of Java. The code should be quite easy to read and understand, as long as the reader has a strong grasp of the Java language and Libgdx. For anyone wishing to play the game itself, a jar is available for download, that allows any OS to easily launch and run the game."),s.a.createElement("h3",null,"How and Why Pixel Knight Was Made"),s.a.createElement("p",null,"Pixel Knight was made as a follow-up to Memori. Where Memori is an android game that is rather simple in design, Pixel Knight is a fully-fledged desktop platformer game that took me months to finish. It was also a game that was much harder to write, as I had to create a platformer with little knowledge beforehand. Essentially, Pixel Knight was an attempt to really challenge and flex my coding abilities, and allowed me to see the extent to which I could create an application using pure Java (with a little help from Libgdx). Though it was nowhere near as complex as I would have liked, Pixel Knight was the first fully-developed desktop game I had made, and stands as a symbol of my commitment to self-improvement.",s.a.createElement("br",null),s.a.createElement("br",null),"Language-wise, Pixel Knight is completely written in Java, and is built upon the Libgdx Java framework. However, Libgdx is mostly used for the rendering of the sprites and the background, and thus is largely unnecessary to understand the code of this game. The game can be understood with a decent understanding of Java, and can be read and used as a learning tool.",s.a.createElement("br",null)))}}]),t}(s.a.Component);t.a=c},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),l(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("br",null),s.a.createElement("h1",null,"Color Synthesizer"),s.a.createElement("p",null,'Color Synthesizer is a mac application that allows the user to interact with a "pixel board". By coloring pixels on the board, the user can create a variety of colorful patterns of any shape or size. The application allows the user to change the cursor size, to erase or fill the pixel board, and to create nearly any color through three color sliders.',s.a.createElement("br",null),s.a.createElement("br",null),"The application itself was created in Xcode, and written in C++ as a learning experience. Though written completely in C++, the code is built on the SFML, which provided the functions necessary for the code to work. Regardless, anyone versed in C++ would be able to easily examine the code.",s.a.createElement("br",null),s.a.createElement("br",null),"To launch the application, a mac with the latest OS is required. The application itself can be launched immediately once downloaded. Due to the simplicity of the application, it only requires a mouse/trackpad. The user should be able to easily navigate through the UI to interact with the application.",s.a.createElement("br",null),s.a.createElement("br",null),"NOTE: This application can only be downloaded on Mac Operating Systems."),s.a.createElement("h3",null,"How and Why Color Synthesizer Was Made"),s.a.createElement("p",null,"My first attempts at writing C++ gradually coalesced into the development Color Synthesizer. Though originally a simple application designed purely for exploratory purposes, Color Synthesizer was developed as a fully-fledged application with the help of the the Simple and Fast Multimedia Library (SFML). Thus, Color Synthesizer, though basic in its composition, is a completed application that users can not only interact with but learn from as well.",s.a.createElement("br",null),s.a.createElement("br",null),"Color Synthesizer is entirely written in C++, and only differs from the basic language in that it uses the SFML for rendering purposes. However, the code can very easily be understood by someone versed in C++, and uses basic logic for the majority of its functions.",s.a.createElement("br",null)))}}]),t}(s.a.Component);t.a=c},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),l(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("br",null),s.a.createElement("h1",null,"Document Encryptor"),s.a.createElement("p",null,"Document Encryptor is a mac based application that allows the user to encrypt a text file (in the format txt) using one of three ciphers. These ciphers are old ciphers and are not meant to represent new techniques, but are merely applications of very basic cryptology methods. The ciphers are: the Playfair Cipher, the Hill Cipher, and the Double Columnar Transposition Cipher. Each of these ciphers can be selected to encrypt the text document, and additionally the Double Columnar Transposition Cipher can be combined with the other two to create an even more complex cipher. The program also decrypts any files it has encrypted in the past. The user need not even select which cipher to decrypt with; the program figures this out by itself. For encryption, the program simply requires the user to input the file location, and which cipher to use. For decryption, the user need only enter the location of the file that needs to be decrypted.",s.a.createElement("br",null),s.a.createElement("br",null),"The application was created in Xcode, and written in C++ as a way to familiarize myself with cryptology. Though written completely in C++, the code is built on the SFML, which provided the necessary functions for the code to work. Regardless, anyone versed in C++ would be able to easily examine the code.",s.a.createElement("br",null),s.a.createElement("br",null),"To launch the application, a mac with the latest OS is required. The application itself can be launched immediately once downloaded. It requires a mouse/trackpad and a keyboard to operate. The user should be able to easily navigate through the UI to interact with the application. Note that the full file path of the document should be entered. For example: /Users/akshaysubramaniam/Documents/Example.txt.",s.a.createElement("br",null),s.a.createElement("br",null),"Note that some symbols will NOT work with the program. These are symbols such as [\"], ['], or [~]. Symbols like [.], [,], and all shift+number keys will work. In creating a text file, the user is advised to use a minimal amount of symbols. If a error should crash the program, it will most likely result from the usage of an illegal symbol.",s.a.createElement("br",null),s.a.createElement("br",null),"NOTE: This application can only be downloaded on Mac Operating Systems."),s.a.createElement("h3",null,"How and Why Document Encryptor Was Made"),s.a.createElement("p",null,"After finishing Color Synthesizer, I began to develop an interest in developing more mathematically heavy applications in C++. Research led me to learing about crytography, which I began to take an active interest in. As a result, I started to code in C++ the beginnings of a crytography application. My initial desire was to implement a modern crytography application, but I later opted to do a simpler application to get the basics of crytography down. This was the motivation behind the creation of the Document Encryptor app, which uses primitive cryptographic methods to encrypt text strings.",s.a.createElement("br",null),s.a.createElement("br",null),"Document Encryptor is entirely written in C++, and only differs from the basic language in that it uses the SFML for rendering purposes. However, the code can very easily be understood by someone versed in C++, and simply uses basic logic for the majority of its functions.",s.a.createElement("br",null)))}}]),t}(s.a.Component);t.a=c},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),l(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("br",null),s.a.createElement("h1",null,"File Encryptor"),s.a.createElement("p",null,"File Encryptor is another mac based app that can encrypt ANY file type. The program is able to encrypt a file through one of three ciphers, all block ciphers. The three block cipher modes are: Electronic Codebook, Cipher Block Chaining, and Counter. These ciphers operate directly on the file's memory contents, meaning the bytes themselves are encrypted. Thus, this program will completely transform the file, making it unreadable once encrypted.",s.a.createElement("br",null),s.a.createElement("br",null),"The application was created in Xcode, and written in C++ as a way to familiarize myself with digital cryptology. Though written completely in C++, the code is built on the SFML, which provided the necessary functions for the code to work. Regardless, anyone versed in C++ would be able to easily examine the code.",s.a.createElement("br",null),s.a.createElement("br",null),"To launch the application, a mac with the latest OS is required. The application itself can be launched immediately once downloaded. It requires a mouse/trackpad and a keyboard to operate. The user should be able to easily navigate through the UI to interact with the application. Note that the full file path of the document should be entered. For example: /Users/akshaysubramaniam/Documents/Example.png.",s.a.createElement("br",null),s.a.createElement("br",null),"Note that the program WILL make the file unreadable once encrypted, meaning the user cannot access it properly. However, once decrypted, the file will be interactable with as normal.",s.a.createElement("br",null),s.a.createElement("br",null),"NOTE: This application can only be downloaded on Mac Operating Systems."),s.a.createElement("h3",null,"How and Why File Encryptor Was Made"),s.a.createElement("p",null,"There's truly not much to say about File Encryptor, as it is simply a follow-up to Document Encryptor. As Document Encryptor was only capable of encrypting text files, I sought to create an application that could encrypt anything, and more importantly, do so using modern encryption methods. After a few days of studying digital encryption, I created File Encryptor, which has the capabilities of encrypting any file with the modern, albeit basic methods of encryption.",s.a.createElement("br",null),s.a.createElement("br",null),"File Encryptor is entirely written in C++, and only differs from the basic language in that it uses the SFML for rendering purposes. However, the code can very easily be understood by someone versed in C++, and simply uses basic logic for the majority of its functions.",s.a.createElement("br",null)))}}]),t}(s.a.Component);t.a=c},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),l(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("br",null),s.a.createElement("h1",null,"Traffic Director"),s.a.createElement("p",null,"Traffic director is a very simplistic game made in python. The goal of traffic director is to direct traffic on three intersections, and ensure that cars get to their destination while not colliding and while not staying on the road too long. The game is operated via mouse clicks exclusively. The only thing the user has to do is to change the traffic lights on the roads from red to green and vice-versa. A red light stops all cars at the intersection, while a green light lets them pass.",s.a.createElement("br",null),s.a.createElement("br",null),"Traffic director was made in Python, and uses the pygame module to draw the sprites on the screen. The code is extremely easy to digest, and is prime learning material for those new to the script.",s.a.createElement("br",null),s.a.createElement("br",null),"NOTE: Unfortunately, I was unable to package the game properly, and the game must be run via python from one's computer with pygame downloaded."),s.a.createElement("h3",null,"How and Why Traffic Director Was Made"),s.a.createElement("p",null,"Before Traffic Director I had never thought of making an application in Python. Eventually, I became curious and decided to learn Python and make a Python-based game. That game was of course Traffic Director, and utilizing the PyGame, a Python multimedia library, I successfully wrote the game both quickly and thoroughly.",s.a.createElement("br",null),s.a.createElement("br",null),"Traffic Director is written in easily-digestible Python. It uses the PyGame multimedia library for rendering purposes, and as such a basic understanding of PyGame is needed to understand the entirety of the source code, but largely irrelevant for assessing the fundamentals of the code.",s.a.createElement("br",null)))}}]),t}(s.a.Component);t.a=c},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),l(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("br",null),s.a.createElement("h1",null,"Space Shooter"),s.a.createElement("p",null,"Space Shooter is a desktop game that resembles a basic shooter platformer. It is a 2-D platformer where the player controls a small box that is able to shoot bullets. The game's objectives are simple: the player must reach the end door of each of the three levels and must take care to avoid enemies along the way to win. The game's premise and its controls are simple and easy to understand.",s.a.createElement("br",null),s.a.createElement("br",null),"Space Shooter is operated through the keyboard exclusively. The player uses the WASD keys to maneuver through the game, and J to shoot.",s.a.createElement("br",null),s.a.createElement("br",null),"The game was written in Ruby, and utilizes the Gosu framework for rendering the game. Unlike the other games I have made, excluding the drawing and rendering of the sprites in the game, the game engine was entirely designed by myself, from the creation of the manner through which the game is generated, to the way the game objects are rendered. What is seen on the screen was created through the combination of a pixel map and the use of a custom-made camera.",s.a.createElement("br",null),s.a.createElement("br",null),"NOTE: A MAC ONLY application is available for examination or for perusal. This application is essentially a Ruby launcher for the game."),s.a.createElement("h3",null,"How and Why Space Shooter Was Made"),s.a.createElement("p",null,"As my last game, Space Shooter was meant to serve as a way to familiarize myself with a more modern programming language - Ruby. Though decently similar to Python in my opinion, I found Ruby to be a very flexible and high-level language that allowed me to easily program a game (much unlike the wrestling matches with Java and C++). Using the Gosu development library PURELY for rendering, I created Space Shooter. The game itself has a CUSTOM-BUILT engine that was specifically made by me to make the creation of the game much simpler. This differs from my previous in that I built an engine from the ground-up to make the game much simpler.",s.a.createElement("br",null),s.a.createElement("br",null),"Language-wise, Space Shooter is written in Ruby and utilizes the Gosu development library. Due to its nearly complete originality, the code is a bit raw but entirely readable.",s.a.createElement("br",null)))}}]),t}(s.a.Component);t.a=c},function(e,t,n){"use strict";function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,"a",function(){return b});var i,o=n(0),a=n.n(o),s=n(23),l=n(274),c=n(426),u=n(431),d=n(438),p=n(445),f=n(452),h=n(459),m=n(466),g=n(473),y=n(482),b=(i={},r(i,s.f,null),r(i,s.e,a.a.createElement(l.a,null)),r(i,s.g,a.a.createElement(c.a,null)),r(i,s.b,a.a.createElement(u.a,null)),r(i,s.h,a.a.createElement(d.a,null)),r(i,s.j,a.a.createElement(p.a,null)),r(i,s.a,a.a.createElement(f.a,null)),r(i,s.c,a.a.createElement(h.a,null)),r(i,s.d,a.a.createElement(m.a,null)),r(i,s.l,a.a.createElement(g.a,null)),r(i,s.k,a.a.createElement(y.a,null)),i)},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(19),c=n(417),u=n.n(c),d=n(418),p=n.n(d),f=n(419),h=n.n(f),m=n(420),g=n.n(m),y=n(421),b=n.n(y),v=n(422),w=n.n(v),x=n(423),T=n.n(x),S=n(424),C=n.n(S),k=n(425),O=n.n(k),E=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),P=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),E(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("hr",{id:"screenshots"}),s.a.createElement("h2",null,"Screenshots"),s.a.createElement("div",{className:"row"},s.a.createElement(l.a,{sm:4},s.a.createElement(l.c,{src:u.a,alt:"Fate's Reprise screenshot One",thumbnail:!0})),s.a.createElement(l.a,{sm:4},s.a.createElement(l.c,{src:p.a,alt:"Fate's Reprise screenshot Two",thumbnail:!0})),s.a.createElement(l.a,{sm:4},s.a.createElement(l.c,{src:h.a,alt:"Fate's Reprise screenshot Three",thumbnail:!0}))),s.a.createElement("div",{className:"row"},s.a.createElement(l.a,{sm:4},s.a.createElement(l.c,{src:g.a,alt:"Fate's Reprise screenshot Four",thumbnail:!0})),s.a.createElement(l.a,{sm:4},s.a.createElement(l.c,{src:b.a,alt:"Fate's Reprise screenshot Five",thumbnail:!0})),s.a.createElement(l.a,{sm:4},s.a.createElement(l.c,{src:w.a,alt:"Fate's Reprise screenshot Six",thumbnail:!0}))),s.a.createElement("div",{className:"row"},s.a.createElement(l.a,{sm:4},s.a.createElement(l.c,{src:T.a,alt:"Fate's Reprise screenshot Seven",thumbnail:!0})),s.a.createElement(l.a,{sm:4},s.a.createElement(l.c,{src:C.a,alt:"Fate's Reprise screenshot Eight",thumbnail:!0})),s.a.createElement(l.a,{sm:4},s.a.createElement(l.c,{src:O.a,alt:"Fate's Reprise screenshot Nine",thumbnail:!0}))))}}]),t}(s.a.Component);t.a=P},function(e,t,n){"use strict";var r=n(3),i=n(2),o=n(0),a=n.n(o),s=n(103);a.a.Component},function(e,t,n){n(277),e.exports=n(16).Object.assign},function(e,t,n){var r=n(20);r(r.S+r.F,"Object",{assign:n(279)})},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,n){"use strict";var r=n(31),i=n(69),o=n(42),a=n(47),s=n(101),l=Object.assign;e.exports=!l||n(30)(function(){var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach(function(e){t[e]=e}),7!=l({},e)[n]||Object.keys(l({},t)).join("")!=r})?function(e,t){for(var n=a(e),l=arguments.length,c=1,u=i.f,d=o.f;l>c;)for(var p,f=s(arguments[c++]),h=u?r(f).concat(u(f)):r(f),m=h.length,g=0;m>g;)d.call(f,p=h[g++])&&(n[p]=f[p]);return n}:l},function(e,t,n){var r=n(32),i=n(102),o=n(281);e.exports=function(e){return function(t,n,a){var s,l=r(t),c=i(l.length),u=o(a,c);if(e&&n!=n){for(;c>u;)if((s=l[u++])!=s)return!0}else for(;c>u;u++)if((e||u in l)&&l[u]===n)return e||u||0;return!e&&-1}}},function(e,t,n){var r=n(65),i=Math.max,o=Math.min;e.exports=function(e,t){return e=r(e),e<0?i(e+t,0):o(e,t)}},function(e,t,n){e.exports=n(283)},function(e,t,n){n(284);var r=n(16).Object;e.exports=function(e,t){return r.create(e,t)}},function(e,t,n){var r=n(20);r(r.S,"Object",{create:n(70)})},function(e,t,n){var r=n(25),i=n(39),o=n(31);e.exports=n(29)?Object.defineProperties:function(e,t){i(e);for(var n,a=o(t),s=a.length,l=0;s>l;)r.f(e,n=a[l++],t[n]);return e}},function(e,t,n){var r=n(24).document;e.exports=r&&r.documentElement},function(e,t,n){e.exports=n(288)},function(e,t,n){n(289),e.exports=n(16).Object.getOwnPropertySymbols},function(e,t,n){"use strict";var r=n(24),i=n(26),o=n(29),a=n(20),s=n(104),l=n(290).KEY,c=n(30),u=n(67),d=n(71),p=n(46),f=n(18),h=n(105),m=n(291),g=n(292),y=n(293),b=n(39),v=n(40),w=n(32),x=n(62),T=n(41),S=n(70),C=n(294),k=n(295),O=n(25),E=n(31),P=k.f,j=O.f,I=C.f,_=r.Symbol,R=r.JSON,A=R&&R.stringify,N=f("_hidden"),B=f("toPrimitive"),M={}.propertyIsEnumerable,L=u("symbol-registry"),D=u("symbols"),G=u("op-symbols"),F=Object.prototype,H="function"==typeof _,V=r.QObject,U=!V||!V.prototype||!V.prototype.findChild,X=o&&c(function(){return 7!=S(j({},"a",{get:function(){return j(this,"a",{value:7}).a}})).a})?function(e,t,n){var r=P(F,t);r&&delete F[t],j(e,t,n),r&&e!==F&&j(F,t,r)}:j,W=function(e){var t=D[e]=S(_.prototype);return t._k=e,t},Y=H&&"symbol"==typeof _.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof _},z=function(e,t,n){return e===F&&z(G,t,n),b(e),t=x(t,!0),b(n),i(D,t)?(n.enumerable?(i(e,N)&&e[N][t]&&(e[N][t]=!1),n=S(n,{enumerable:T(0,!1)})):(i(e,N)||j(e,N,T(1,{})),e[N][t]=!0),X(e,t,n)):j(e,t,n)},K=function(e,t){b(e);for(var n,r=g(t=w(t)),i=0,o=r.length;o>i;)z(e,n=r[i++],t[n]);return e},q=function(e,t){return void 0===t?S(e):K(S(e),t)},$=function(e){var t=M.call(this,e=x(e,!0));return!(this===F&&i(D,e)&&!i(G,e))&&(!(t||!i(this,e)||!i(D,e)||i(this,N)&&this[N][e])||t)},J=function(e,t){if(e=w(e),t=x(t,!0),e!==F||!i(D,t)||i(G,t)){var n=P(e,t);return!n||!i(D,t)||i(e,N)&&e[N][t]||(n.enumerable=!0),n}},Q=function(e){for(var t,n=I(w(e)),r=[],o=0;n.length>o;)i(D,t=n[o++])||t==N||t==l||r.push(t);return r},Z=function(e){for(var t,n=e===F,r=I(n?G:w(e)),o=[],a=0;r.length>a;)!i(D,t=r[a++])||n&&!i(F,t)||o.push(D[t]);return o};H||(_=function(){if(this instanceof _)throw TypeError("Symbol is not a constructor!");var e=p(arguments.length>0?arguments[0]:void 0),t=function(n){this===F&&t.call(G,n),i(this,N)&&i(this[N],e)&&(this[N][e]=!1),X(this,e,T(1,n))};return o&&U&&X(F,e,{configurable:!0,set:t}),W(e)},s(_.prototype,"toString",function(){return this._k}),k.f=J,O.f=z,n(106).f=C.f=Q,n(42).f=$,n(69).f=Z,o&&!n(45)&&s(F,"propertyIsEnumerable",$,!0),h.f=function(e){return W(f(e))}),a(a.G+a.W+a.F*!H,{Symbol:_});for(var ee="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),te=0;ee.length>te;)f(ee[te++]);for(var ne=E(f.store),re=0;ne.length>re;)m(ne[re++]);a(a.S+a.F*!H,"Symbol",{for:function(e){return i(L,e+="")?L[e]:L[e]=_(e)},keyFor:function(e){if(!Y(e))throw TypeError(e+" is not a symbol!");for(var t in L)if(L[t]===e)return t},useSetter:function(){U=!0},useSimple:function(){U=!1}}),a(a.S+a.F*!H,"Object",{create:q,defineProperty:z,defineProperties:K,getOwnPropertyDescriptor:J,getOwnPropertyNames:Q,getOwnPropertySymbols:Z}),R&&a(a.S+a.F*(!H||c(function(){var e=_();return"[null]"!=A([e])||"{}"!=A({a:e})||"{}"!=A(Object(e))})),"JSON",{stringify:function(e){for(var t,n,r=[e],i=1;arguments.length>i;)r.push(arguments[i++]);if(n=t=r[1],(v(t)||void 0!==e)&&!Y(e))return y(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!Y(t))return t}),r[1]=t,A.apply(R,r)}}),_.prototype[B]||n(38)(_.prototype,B,_.prototype.valueOf),d(_,"Symbol"),d(Math,"Math",!0),d(r.JSON,"JSON",!0)},function(e,t,n){var r=n(46)("meta"),i=n(40),o=n(26),a=n(25).f,s=0,l=Object.isExtensible||function(){return!0},c=!n(30)(function(){return l(Object.preventExtensions({}))}),u=function(e){a(e,r,{value:{i:"O"+ ++s,w:{}}})},d=function(e,t){if(!i(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!o(e,r)){if(!l(e))return"F";if(!t)return"E";u(e)}return e[r].i},p=function(e,t){if(!o(e,r)){if(!l(e))return!0;if(!t)return!1;u(e)}return e[r].w},f=function(e){return c&&h.NEED&&l(e)&&!o(e,r)&&u(e),e},h=e.exports={KEY:r,NEED:!1,fastKey:d,getWeak:p,onFreeze:f}},function(e,t,n){var r=n(24),i=n(16),o=n(45),a=n(105),s=n(25).f;e.exports=function(e){var t=i.Symbol||(i.Symbol=o?{}:r.Symbol||{});"_"==e.charAt(0)||e in t||s(t,e,{value:a.f(e)})}},function(e,t,n){var r=n(31),i=n(69),o=n(42);e.exports=function(e){var t=r(e),n=i.f;if(n)for(var a,s=n(e),l=o.f,c=0;s.length>c;)l.call(e,a=s[c++])&&t.push(a);return t}},function(e,t,n){var r=n(63);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,t,n){var r=n(32),i=n(106).f,o={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],s=function(e){try{return i(e)}catch(e){return a.slice()}};e.exports.f=function(e){return a&&"[object Window]"==o.call(e)?s(e):i(r(e))}},function(e,t,n){var r=n(42),i=n(41),o=n(32),a=n(62),s=n(26),l=n(98),c=Object.getOwnPropertyDescriptor;t.f=n(29)?c:function(e,t){if(e=o(e),t=a(t,!0),l)try{return c(e,t)}catch(e){}if(s(e,t))return i(!r.f.call(e,t),e[t])}},function(e,t,n){e.exports=n(297)},function(e,t,n){n(298),e.exports=n(16).Object.keys},function(e,t,n){var r=n(47),i=n(31);n(299)("keys",function(){return function(e){return i(r(e))}})},function(e,t,n){var r=n(20),i=n(16),o=n(30);e.exports=function(e,t){var n=(i.Object||{})[e]||Object[e],a={};a[e]=t(n),r(r.S+r.F*o(function(){n(1)}),"Object",a)}},function(e,t,n){"use strict";function r(e,t){var n={};return Object.keys(e).forEach(function(e){n[o(e)]=s}),n}function i(e,t){return void 0!==e[t]}function o(e){return"default"+e.charAt(0).toUpperCase()+e.substr(1)}function a(e){return!!(e&&e.prototype&&e.prototype.isReactComponent)}t.__esModule=!0,t.uncontrolledPropTypes=r,t.isProp=i,t.defaultKey=o,t.isReactComponent=a;var s=(function(e){e&&e.__esModule}(n(28)),function(){})},function(e,t,n){n(302),e.exports=n(16).Object.entries},function(e,t,n){var r=n(20),i=n(108)(!0);r(r.S,"Object",{entries:function(e){return i(e)}})},function(e,t,n){"use strict";var r=n(33),i=n.n(r),o=n(3),a=n(4),s=n(2),l=n(5),c=n.n(l),u=n(0),d=n.n(u),p=n(1),f=n.n(p),h=n(6),m=n(12),g=n(72),y={onDismiss:f.a.func,closeLabel:f.a.string},b={closeLabel:"Close alert"},v=function(e){function t(){return e.apply(this,arguments)||this}return Object(s.a)(t,e),t.prototype.render=function(){var e,t=this.props,n=t.onDismiss,r=t.closeLabel,i=t.className,s=t.children,l=Object(a.a)(t,["onDismiss","closeLabel","className","children"]),u=Object(h.f)(l),p=u[0],f=u[1],m=!!n,y=Object(o.a)({},Object(h.d)(p),(e={},e[Object(h.e)(p,"dismissable")]=m,e));return d.a.createElement("div",Object(o.a)({},f,{role:"alert",className:c()(i,y)}),m&&d.a.createElement(g.a,{onClick:n,label:r}),s)},t}(d.a.Component);v.propTypes=y,v.defaultProps=b;Object(h.c)(i()(m.d),m.d.INFO,Object(h.a)("alert",v))},function(e,t,n){n(305),e.exports=n(16).Object.values},function(e,t,n){var r=n(20),i=n(108)(!1);r(r.S,"Object",{values:function(e){return i(e)}})},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(6),f={pullRight:d.a.bool},h={pullRight:!1},m=function(e){function t(){return e.apply(this,arguments)||this}Object(o.a)(t,e);var n=t.prototype;return n.hasContent=function(e){var t=!1;return c.a.Children.forEach(e,function(e){t||(e||0===e)&&(t=!0)}),t},n.render=function(){var e=this.props,t=e.pullRight,n=e.className,o=e.children,a=Object(i.a)(e,["pullRight","className","children"]),l=Object(p.f)(a),u=l[0],d=l[1],f=Object(r.a)({},Object(p.d)(u),{"pull-right":t,hidden:!this.hasContent(o)});return c.a.createElement("span",Object(r.a)({},d,{className:s()(n,f)}),o)},t}(c.a.Component);m.propTypes=f,m.defaultProps=h;Object(p.a)("badge",m)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(110),d=n(6),p=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.className,n=Object(i.a)(e,["className"]),o=Object(d.f)(n),a=o[0],l=o[1],u=Object(d.d)(a);return c.a.createElement("ol",Object(r.a)({},l,{role:"navigation","aria-label":"breadcrumbs",className:s()(t,u)}))},t}(c.a.Component);p.Item=u.a;Object(d.a)("breadcrumb",p)},function(e,t,n){"use strict";e.exports=n(309)},function(e,t,n){"use strict";function r(e){if("object"===typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case p:case s:case c:case l:return e;default:switch(e=e&&e.$$typeof){case d:case f:case u:return e;default:return t}}case a:return t}}}Object.defineProperty(t,"__esModule",{value:!0});var i="function"===typeof Symbol&&Symbol.for,o=i?Symbol.for("react.element"):60103,a=i?Symbol.for("react.portal"):60106,s=i?Symbol.for("react.fragment"):60107,l=i?Symbol.for("react.strict_mode"):60108,c=i?Symbol.for("react.profiler"):60114,u=i?Symbol.for("react.provider"):60109,d=i?Symbol.for("react.context"):60110,p=i?Symbol.for("react.async_mode"):60111,f=i?Symbol.for("react.forward_ref"):60112,h=i?Symbol.for("react.timeout"):60113;t.typeOf=r,t.AsyncMode=p,t.ContextConsumer=d,t.ContextProvider=u,t.Element=o,t.ForwardRef=f,t.Fragment=s,t.Profiler=c,t.Portal=a,t.StrictMode=l,t.isValidElementType=function(e){return"string"===typeof e||"function"===typeof e||e===s||e===p||e===c||e===l||e===h||"object"===typeof e&&null!==e&&(e.$$typeof===u||e.$$typeof===d||e.$$typeof===f)},t.isAsyncMode=function(e){return r(e)===p},t.isContextConsumer=function(e){return r(e)===d},t.isContextProvider=function(e){return r(e)===u},t.isElement=function(e){return"object"===typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return r(e)===f},t.isFragment=function(e){return r(e)===s},t.isProfiler=function(e){return r(e)===c},t.isPortal=function(e){return r(e)===a},t.isStrictMode=function(e){return r(e)===l}},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(6),d=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.className,n=Object(i.a)(e,["className"]),o=Object(u.f)(n),a=o[0],l=o[1],d=Object(u.d)(a);return c.a.createElement("div",Object(r.a)({},l,{role:"toolbar",className:s()(t,d)}))},t}(c.a.Component);Object(u.a)("btn-toolbar",d)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(11),s=n(5),l=n.n(s),c=n(0),u=n.n(c),d=n(1),p=n.n(d),f=n(312),h=n(111),m=n(75),g=n(17),y=n(6),b=n(14),v={slide:p.a.bool,indicators:p.a.bool,interval:p.a.number,controls:p.a.bool,pauseOnHover:p.a.bool,wrap:p.a.bool,onSelect:p.a.func,onSlideEnd:p.a.func,activeIndex:p.a.number,defaultActiveIndex:p.a.number,direction:p.a.oneOf(["prev","next"]),prevIcon:p.a.node,prevLabel:p.a.string,nextIcon:p.a.node,nextLabel:p.a.string},w={slide:!0,interval:5e3,pauseOnHover:!0,wrap:!0,indicators:!0,controls:!0,prevIcon:u.a.createElement(m.a,{glyph:"chevron-left"}),prevLabel:"Previous",nextIcon:u.a.createElement(m.a,{glyph:"chevron-right"}),nextLabel:"Next"},x=function(e){function t(t,n){var r;r=e.call(this,t,n)||this,r.handleMouseOver=r.handleMouseOver.bind(Object(a.a)(r)),r.handleMouseOut=r.handleMouseOut.bind(Object(a.a)(r)),r.handlePrev=r.handlePrev.bind(Object(a.a)(r)),r.handleNext=r.handleNext.bind(Object(a.a)(r)),r.handleItemAnimateOutEnd=r.handleItemAnimateOutEnd.bind(Object(a.a)(r));var i=t.defaultActiveIndex;return r.state={activeIndex:null!=i?i:0,previousActiveIndex:null,direction:null},r.isUnmounted=!1,r}Object(o.a)(t,e);var n=t.prototype;return n.componentDidMount=function(){this.waitForNext()},n.componentWillReceiveProps=function(e){var t=this.getActiveIndex();null!=e.activeIndex&&e.activeIndex!==t&&(clearTimeout(this.timeout),this.setState({previousActiveIndex:t,direction:null!=e.direction?e.direction:this.getDirection(t,e.activeIndex)})),null==e.activeIndex&&this.state.activeIndex>=e.children.length&&this.setState({activeIndex:0,previousActiveIndex:null,direction:null})},n.componentWillUnmount=function(){clearTimeout(this.timeout),this.isUnmounted=!0},n.getActiveIndex=function(){var e=this.props.activeIndex;return null!=e?e:this.state.activeIndex},n.getDirection=function(e,t){return e===t?null:e>t?"prev":"next"},n.handleItemAnimateOutEnd=function(){var e=this;this.setState({previousActiveIndex:null,direction:null},function(){e.waitForNext(),e.props.onSlideEnd&&e.props.onSlideEnd()})},n.handleMouseOut=function(){this.isPaused&&this.play()},n.handleMouseOver=function(){this.props.pauseOnHover&&this.pause()},n.handleNext=function(e){var t=this.getActiveIndex()+1;if(t>b.a.count(this.props.children)-1){if(!this.props.wrap)return;t=0}this.select(t,e,"next")},n.handlePrev=function(e){var t=this.getActiveIndex()-1;if(t<0){if(!this.props.wrap)return;t=b.a.count(this.props.children)-1}this.select(t,e,"prev")},n.pause=function(){this.isPaused=!0,clearTimeout(this.timeout)},n.play=function(){this.isPaused=!1,this.waitForNext()},n.select=function(e,t,n){if(clearTimeout(this.timeout),!this.isUnmounted){var r=this.props.slide?this.getActiveIndex():null;n=n||this.getDirection(r,e);var i=this.props.onSelect;if(i&&(i.length>1?(t?(t.persist(),t.direction=n):t={direction:n},i(e,t)):i(e)),null==this.props.activeIndex&&e!==r){if(null!=this.state.previousActiveIndex)return;this.setState({activeIndex:e,previousActiveIndex:r,direction:n})}}},n.waitForNext=function(){var e=this.props,t=e.slide,n=e.interval,r=e.activeIndex;!this.isPaused&&t&&n&&null==r&&(this.timeout=setTimeout(this.handleNext,n))},n.renderControls=function(e){var t=e.wrap,n=e.children,r=e.activeIndex,i=e.prevIcon,o=e.nextIcon,a=e.bsProps,s=e.prevLabel,c=e.nextLabel,d=Object(y.e)(a,"control"),p=b.a.count(n);return[(t||0!==r)&&u.a.createElement(g.a,{key:"prev",className:l()(d,"left"),onClick:this.handlePrev},i,s&&u.a.createElement("span",{className:"sr-only"},s)),(t||r!==p-1)&&u.a.createElement(g.a,{key:"next",className:l()(d,"right"),onClick:this.handleNext},o,c&&u.a.createElement("span",{className:"sr-only"},c))]},n.renderIndicators=function(e,t,n){var r=this,i=[];return b.a.forEach(e,function(e,n){i.push(u.a.createElement("li",{key:n,className:n===t?"active":null,onClick:function(e){return r.select(n,e)}})," ")}),u.a.createElement("ol",{className:Object(y.e)(n,"indicators")},i)},n.render=function(){var e=this,t=this.props,n=t.slide,o=t.indicators,a=t.controls,s=t.wrap,d=t.prevIcon,p=t.prevLabel,f=t.nextIcon,h=t.nextLabel,m=t.className,g=t.children,v=Object(i.a)(t,["slide","indicators","controls","wrap","prevIcon","prevLabel","nextIcon","nextLabel","className","children"]),w=this.state,x=w.previousActiveIndex,T=w.direction,S=Object(y.g)(v,["interval","pauseOnHover","onSelect","onSlideEnd","activeIndex","defaultActiveIndex","direction"]),C=S[0],k=S[1],O=this.getActiveIndex(),E=Object(r.a)({},Object(y.d)(C),{slide:n});return u.a.createElement("div",Object(r.a)({},k,{className:l()(m,E),onMouseOver:this.handleMouseOver,onMouseOut:this.handleMouseOut}),o&&this.renderIndicators(g,O,C),u.a.createElement("div",{className:Object(y.e)(C,"inner")},b.a.map(g,function(t,r){var i=r===O,o=n&&r===x;return Object(c.cloneElement)(t,{active:i,index:r,animateOut:o,animateIn:i&&null!=x&&n,direction:T,onAnimateOutEnd:o?e.handleItemAnimateOutEnd:null})})),a&&this.renderControls({wrap:s,children:g,activeIndex:O,prevIcon:d,prevLabel:p,nextIcon:f,nextLabel:h,bsProps:C}))},t}(u.a.Component);x.propTypes=v,x.defaultProps=w,x.Caption=f.a,x.Item=h.a;Object(y.a)("carousel",x)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(9),d=n.n(u),p=n(6),f={componentClass:d.a},h={componentClass:"div"},m=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.componentClass,n=e.className,o=Object(i.a)(e,["componentClass","className"]),a=Object(p.f)(o),l=a[0],u=a[1],d=Object(p.d)(l);return c.a.createElement(t,Object(r.a)({},u,{className:s()(n,d)}))},t}(c.a.Component);m.propTypes=f,m.defaultProps=h,t.a=Object(p.a)("carousel-caption",m)},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.properties=t.end=void 0;var i=n(314),o=r(i),a=n(74),s=r(a);t.end=o.default,t.properties=s.default,t.default={end:o.default,properties:s.default}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t,n){function r(e){e.target===e.currentTarget&&(clearTimeout(i),e.target.removeEventListener(s.default.end,r),t.call(this))}var i,a={target:e,currentTarget:e};s.default.end?null==n&&(n=o(e)||0):n=0,s.default.end?(e.addEventListener(s.default.end,r,!1),i=setTimeout(function(){return r(a)},1.5*(n||100))):setTimeout(r.bind(null,a),0)}function o(e){var t=(0,c.default)(e,s.default.duration),n=-1===t.indexOf("ms")?1e3:1;return parseFloat(t)*n}Object.defineProperty(t,"__esModule",{value:!0});var a=n(74),s=r(a),l=n(44),c=r(l);i._parseDuration=o,t.default=i,e.exports=t.default},function(e,t,n){"use strict";function r(e){return e.replace(i,function(e,t){return t.toUpperCase()})}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r;var i=/-(.)/g;e.exports=t.default},function(e,t,n){"use strict";function r(e){return(0,o.default)(e).replace(a,"-ms-")}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r;var i=n(317),o=function(e){return e&&e.__esModule?e:{default:e}}(i),a=/^ms-/;e.exports=t.default},function(e,t,n){"use strict";function r(e){return e.replace(i,"-$1").toLowerCase()}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r;var i=/([A-Z])/g;e.exports=t.default},function(e,t,n){"use strict";function r(e){if(!e)throw new TypeError("No Element passed to `getComputedStyle()`");var t=e.ownerDocument;return"defaultView"in t?t.defaultView.opener?e.ownerDocument.defaultView.getComputedStyle(e,null):window.getComputedStyle(e,null):{getPropertyValue:function(t){var n=e.style;"float"==(t=(0,o.default)(t))&&(t="styleFloat");var r=e.currentStyle[t]||null;if(null==r&&n&&n[t]&&(r=n[t]),s.test(r)&&!a.test(t)){var i=n.left,l=e.runtimeStyle,c=l&&l.left;c&&(l.left=e.currentStyle.left),n.left="fontSize"===t?"1em":r,r=n.pixelLeft+"px",n.left=i,c&&(l.left=c)}return r}}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r;var i=n(112),o=function(e){return e&&e.__esModule?e:{default:e}}(i),a=/^(top|right|bottom|left)$/,s=/^([+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|))(?!px)[a-z%]+$/i;e.exports=t.default},function(e,t,n){"use strict";function r(e,t){return"removeProperty"in e.style?e.style.removeProperty(t):e.style.removeAttribute(t)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r,e.exports=t.default},function(e,t,n){"use strict";function r(e){return!(!e||!i.test(e))}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r;var i=/^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;e.exports=t.default},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(15),f=(n.n(p),n(6)),h={inline:d.a.bool,disabled:d.a.bool,title:d.a.string,validationState:d.a.oneOf(["success","warning","error",null]),inputRef:d.a.func},m={inline:!1,disabled:!1,title:""},g=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.inline,n=e.disabled,o=e.validationState,a=e.inputRef,l=e.className,u=e.style,d=e.title,p=e.children,h=Object(i.a)(e,["inline","disabled","validationState","inputRef","className","style","title","children"]),m=Object(f.f)(h),g=m[0],y=m[1],b=c.a.createElement("input",Object(r.a)({},y,{ref:a,type:"checkbox",disabled:n}));if(t){var v,w=(v={},v[Object(f.e)(g,"inline")]=!0,v.disabled=n,v);return c.a.createElement("label",{className:s()(l,w),style:u,title:d},b,p)}var x=Object(r.a)({},Object(f.d)(g),{disabled:n});return o&&(x["has-"+o]=!0),c.a.createElement("div",{className:s()(l,x),style:u},c.a.createElement("label",{title:d},b,p))},t}(c.a.Component);g.propTypes=h,g.defaultProps=m;Object(f.a)("checkbox",g)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(9),f=n.n(p),h=n(6),m=n(113),g=n(12),y={componentClass:f.a,visibleXsBlock:d.a.bool,visibleSmBlock:d.a.bool,visibleMdBlock:d.a.bool,visibleLgBlock:d.a.bool},b={componentClass:"div"},v=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.componentClass,n=e.className,o=Object(i.a)(e,["componentClass","className"]),a=Object(h.f)(o),l=a[0],u=a[1],d=Object(h.d)(l);return g.a.forEach(function(e){var t="visible"+Object(m.a)(e)+"Block";u[t]&&(d["visible-"+e+"-block"]=!0),delete u[t]}),c.a.createElement(t,Object(r.a)({},u,{className:s()(n,d)}))},t}(c.a.Component);v.propTypes=y,v.defaultProps=b;Object(h.a)("clearfix",v)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(15),f=(n.n(p),n(6)),h={htmlFor:d.a.string,srOnly:d.a.bool},m={srOnly:!1},g={$bs_formGroup:d.a.object},y=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.context.$bs_formGroup,t=e&&e.controlId,n=this.props,o=n.htmlFor,a=void 0===o?t:o,l=n.srOnly,u=n.className,d=Object(i.a)(n,["htmlFor","srOnly","className"]),p=Object(f.f)(d),h=p[0],m=p[1],g=Object(r.a)({},Object(f.d)(h),{"sr-only":l});return c.a.createElement("label",Object(r.a)({},m,{htmlFor:a,className:s()(u,g)}))},t}(c.a.Component);y.propTypes=h,y.defaultProps=m,y.contextTypes=g;Object(f.a)("control-label",y)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(9),f=n.n(p),h=n(6),m=n(12),g={componentClass:f.a,xs:d.a.number,sm:d.a.number,md:d.a.number,lg:d.a.number,xsHidden:d.a.bool,smHidden:d.a.bool,mdHidden:d.a.bool,lgHidden:d.a.bool,xsOffset:d.a.number,smOffset:d.a.number,mdOffset:d.a.number,lgOffset:d.a.number,xsPush:d.a.number,smPush:d.a.number,mdPush:d.a.number,lgPush:d.a.number,xsPull:d.a.number,smPull:d.a.number,mdPull:d.a.number,lgPull:d.a.number},y={componentClass:"div"},b=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.componentClass,n=e.className,o=Object(i.a)(e,["componentClass","className"]),a=Object(h.f)(o),l=a[0],u=a[1],d=[];return m.a.forEach(function(e){function t(t,n){var r=""+e+t,i=u[r];null!=i&&d.push(Object(h.e)(l,""+e+n+"-"+i)),delete u[r]}t("",""),t("Offset","-offset"),t("Push","-push"),t("Pull","-pull");var n=e+"Hidden";u[n]&&d.push("hidden-"+e),delete u[n]}),c.a.createElement(t,Object(r.a)({},u,{className:s()(n,d)}))},t}(c.a.Component);b.propTypes=g,b.defaultProps=y,t.a=Object(h.a)("col",b)},function(e,t,n){"use strict";function r(){var e=this.constructor.getDerivedStateFromProps(this.props,this.state);null!==e&&void 0!==e&&this.setState(e)}function i(e){function t(t){var n=this.constructor.getDerivedStateFromProps(e,t);return null!==n&&void 0!==n?n:null}this.setState(t.bind(this))}function o(e,t){try{var n=this.props,r=this.state;this.props=e,this.state=t,this.__reactInternalSnapshotFlag=!0,this.__reactInternalSnapshot=this.getSnapshotBeforeUpdate(n,r)}finally{this.props=n,this.state=r}}function a(e){var t=e.prototype;if(!t||!t.isReactComponent)throw new Error("Can only polyfill class components");if("function"!==typeof e.getDerivedStateFromProps&&"function"!==typeof t.getSnapshotBeforeUpdate)return e;var n=null,a=null,s=null;if("function"===typeof t.componentWillMount?n="componentWillMount":"function"===typeof t.UNSAFE_componentWillMount&&(n="UNSAFE_componentWillMount"),"function"===typeof t.componentWillReceiveProps?a="componentWillReceiveProps":"function"===typeof t.UNSAFE_componentWillReceiveProps&&(a="UNSAFE_componentWillReceiveProps"),"function"===typeof t.componentWillUpdate?s="componentWillUpdate":"function"===typeof t.UNSAFE_componentWillUpdate&&(s="UNSAFE_componentWillUpdate"),null!==n||null!==a||null!==s){var l=e.displayName||e.name,c="function"===typeof e.getDerivedStateFromProps?"getDerivedStateFromProps()":"getSnapshotBeforeUpdate()";throw Error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n"+l+" uses "+c+" but also contains the following legacy lifecycles:"+(null!==n?"\n  "+n:"")+(null!==a?"\n  "+a:"")+(null!==s?"\n  "+s:"")+"\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://fb.me/react-async-component-lifecycle-hooks")}if("function"===typeof e.getDerivedStateFromProps&&(t.componentWillMount=r,t.componentWillReceiveProps=i),"function"===typeof t.getSnapshotBeforeUpdate){if("function"!==typeof t.componentDidUpdate)throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");t.componentWillUpdate=o;var u=t.componentDidUpdate;t.componentDidUpdate=function(e,t,n){var r=this.__reactInternalSnapshotFlag?this.__reactInternalSnapshot:n;u.call(this,e,t,r)}}return e}Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"polyfill",function(){return a}),r.__suppressDeprecationWarning=!0,i.__suppressDeprecationWarning=!0,o.__suppressDeprecationWarning=!0},function(e,t,n){"use strict";function r(e){var t="transition"+e+"Timeout",n="transition"+e;return function(e){if(e[n]){if(null==e[t])return new Error(t+" wasn't supplied to CSSTransitionGroup: this can cause unreliable animations and won't be supported in a future version of React. See https://fb.me/react-animation-transition-group-timeout for more information.");if("number"!==typeof e[t])return new Error(t+" must be a number (in milliseconds)")}return null}}t.__esModule=!0,t.classNamesShape=t.timeoutsShape=void 0,t.transitionTimeout=r;var i=n(1),o=function(e){return e&&e.__esModule?e:{default:e}}(i);t.timeoutsShape=o.default.oneOfType([o.default.number,o.default.shape({enter:o.default.number,exit:o.default.number}).isRequired]),t.classNamesShape=o.default.oneOfType([o.default.string,o.default.shape({enter:o.default.string,exit:o.default.string,active:o.default.string}),o.default.shape({enter:o.default.string,enterDone:o.default.string,enterActive:o.default.string,exit:o.default.string,exitDone:o.default.string,exitActive:o.default.string})])},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(328),a=n.n(o),s=n(2),l=n(11),c=n(5),u=n.n(c),d=n(77),p=n.n(d),f=n(0),h=n.n(f),m=n(1),g=n.n(m),y=n(13),b=n.n(y),v=n(116),w=n.n(v),x=n(6),T=n(10),S=n(14),C={open:g.a.bool,pullRight:g.a.bool,onClose:g.a.func,labelledBy:g.a.oneOfType([g.a.string,g.a.number]),onSelect:g.a.func,rootCloseEvent:g.a.oneOf(["click","mousedown"])},k={bsRole:"menu",pullRight:!1},O=function(e){function t(t){var n;return n=e.call(this,t)||this,n.handleRootClose=n.handleRootClose.bind(Object(l.a)(n)),n.handleKeyDown=n.handleKeyDown.bind(Object(l.a)(n)),n}Object(s.a)(t,e);var n=t.prototype;return n.getFocusableMenuItems=function(){var e=b.a.findDOMNode(this);return e?a()(e.querySelectorAll('[tabIndex="-1"]')):[]},n.getItemsAndActiveIndex=function(){var e=this.getFocusableMenuItems();return{items:e,activeIndex:e.indexOf(document.activeElement)}},n.focusNext=function(){var e=this.getItemsAndActiveIndex(),t=e.items,n=e.activeIndex;if(0!==t.length){t[n===t.length-1?0:n+1].focus()}},n.focusPrevious=function(){var e=this.getItemsAndActiveIndex(),t=e.items,n=e.activeIndex;if(0!==t.length){t[0===n?t.length-1:n-1].focus()}},n.handleKeyDown=function(e){switch(e.keyCode){case p.a.codes.down:this.focusNext(),e.preventDefault();break;case p.a.codes.up:this.focusPrevious(),e.preventDefault();break;case p.a.codes.esc:case p.a.codes.tab:this.props.onClose(e,{source:"keydown"})}},n.handleRootClose=function(e){this.props.onClose(e,{source:"rootClose"})},n.render=function(){var e,t=this,n=this.props,o=n.open,a=n.pullRight,s=n.labelledBy,l=n.onSelect,c=n.className,d=n.rootCloseEvent,p=n.children,f=Object(i.a)(n,["open","pullRight","labelledBy","onSelect","className","rootCloseEvent","children"]),m=Object(x.g)(f,["onClose"]),g=m[0],y=m[1],b=Object(r.a)({},Object(x.d)(g),(e={},e[Object(x.e)(g,"right")]=a,e));return h.a.createElement(w.a,{disabled:!o,onRootClose:this.handleRootClose,event:d},h.a.createElement("ul",Object(r.a)({},y,{role:"menu",className:u()(c,b),"aria-labelledby":s}),S.a.map(p,function(e){return h.a.cloneElement(e,{onKeyDown:Object(T.a)(e.props.onKeyDown,t.handleKeyDown),onSelect:Object(T.a)(e.props.onSelect,l)})})))},t}(h.a.Component);O.propTypes=C,O.defaultProps=k,t.a=Object(x.a)("dropdown-menu",O)},function(e,t,n){e.exports=n(329)},function(e,t,n){n(330),n(335),e.exports=n(16).Array.from},function(e,t,n){"use strict";var r=n(331)(!0);n(332)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})})},function(e,t,n){var r=n(65),i=n(64);e.exports=function(e){return function(t,n){var o,a,s=String(i(t)),l=r(n),c=s.length;return l<0||l>=c?e?"":void 0:(o=s.charCodeAt(l),o<55296||o>56319||l+1===c||(a=s.charCodeAt(l+1))<56320||a>57343?e?s.charAt(l):o:e?s.slice(l,l+2):a-56320+(o-55296<<10)+65536)}}},function(e,t,n){"use strict";var r=n(45),i=n(20),o=n(104),a=n(38),s=n(78),l=n(333),c=n(71),u=n(334),d=n(18)("iterator"),p=!([].keys&&"next"in[].keys()),f=function(){return this};e.exports=function(e,t,n,h,m,g,y){l(n,t,h);var b,v,w,x=function(e){if(!p&&e in k)return k[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},T=t+" Iterator",S="values"==m,C=!1,k=e.prototype,O=k[d]||k["@@iterator"]||m&&k[m],E=O||x(m),P=m?S?x("entries"):E:void 0,j="Array"==t?k.entries||O:O;if(j&&(w=u(j.call(new e)))!==Object.prototype&&w.next&&(c(w,T,!0),r||"function"==typeof w[d]||a(w,d,f)),S&&O&&"values"!==O.name&&(C=!0,E=function(){return O.call(this)}),r&&!y||!p&&!C&&k[d]||a(k,d,E),s[t]=E,s[T]=f,m)if(b={values:S?E:x("values"),keys:g?E:x("keys"),entries:P},y)for(v in b)v in k||o(k,v,b[v]);else i(i.P+i.F*(p||C),t,b);return b}},function(e,t,n){"use strict";var r=n(70),i=n(41),o=n(71),a={};n(38)(a,n(18)("iterator"),function(){return this}),e.exports=function(e,t,n){e.prototype=r(a,{next:i(1,n)}),o(e,t+" Iterator")}},function(e,t,n){var r=n(26),i=n(47),o=n(66)("IE_PROTO"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=i(e),r(e,o)?e[o]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},function(e,t,n){"use strict";var r=n(97),i=n(20),o=n(47),a=n(336),s=n(337),l=n(102),c=n(338),u=n(339);i(i.S+i.F*!n(341)(function(e){Array.from(e)}),"Array",{from:function(e){var t,n,i,d,p=o(e),f="function"==typeof this?this:Array,h=arguments.length,m=h>1?arguments[1]:void 0,g=void 0!==m,y=0,b=u(p);if(g&&(m=r(m,h>2?arguments[2]:void 0,2)),void 0==b||f==Array&&s(b))for(t=l(p.length),n=new f(t);t>y;y++)c(n,y,g?m(p[y],y):p[y]);else for(d=b.call(p),n=new f;!(i=d.next()).done;y++)c(n,y,g?a(d,m,[i.value,y],!0):i.value);return n.length=y,n}})},function(e,t,n){var r=n(39);e.exports=function(e,t,n,i){try{return i?t(r(n)[0],n[1]):t(n)}catch(t){var o=e.return;throw void 0!==o&&r(o.call(e)),t}}},function(e,t,n){var r=n(78),i=n(18)("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||o[i]===e)}},function(e,t,n){"use strict";var r=n(25),i=n(41);e.exports=function(e,t,n){t in e?r.f(e,t,i(0,n)):e[t]=n}},function(e,t,n){var r=n(340),i=n(18)("iterator"),o=n(78);e.exports=n(16).getIteratorMethod=function(e){if(void 0!=e)return e[i]||e["@@iterator"]||o[r(e)]}},function(e,t,n){var r=n(63),i=n(18)("toStringTag"),o="Arguments"==r(function(){return arguments}()),a=function(e,t){try{return e[t]}catch(e){}};e.exports=function(e){var t,n,s;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=a(t=Object(e),i))?n:o?r(t):"Object"==(s=r(t))&&"function"==typeof t.callee?"Arguments":s}},function(e,t,n){var r=n(18)("iterator"),i=!1;try{var o=[7][r]();o.return=function(){i=!0},Array.from(o,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!i)return!1;var n=!1;try{var o=[7],a=o[r]();a.next=function(){return{done:n=!0}},o[r]=function(){return a},e(o)}catch(e){}return n}},function(e,t,n){"use strict";var r=n(4),i=n(2),o=n(3),a=n(0),s=n.n(a),l=n(1),c=n.n(l),u=n(50),d=n(52),p=Object(o.a)({},u.a.propTypes,{bsStyle:c.a.string,bsSize:c.a.string,title:c.a.node.isRequired,noCaret:c.a.bool,children:c.a.node}),f=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.bsSize,n=e.bsStyle,i=e.title,a=e.children,l=Object(r.a)(e,["bsSize","bsStyle","title","children"]),c=Object(d.a)(l,u.a.ControlledComponent),p=c[0],f=c[1];return s.a.createElement(u.a,Object(o.a)({},p,{bsSize:t,bsStyle:n}),s.a.createElement(u.a.Toggle,Object(o.a)({},f,{bsSize:t,bsStyle:n}),i),s.a.createElement(u.a.Menu,null,a))},t}(s.a.Component);f.propTypes=p,t.a=f},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(9),f=n.n(p),h=n(6),m={horizontal:d.a.bool,inline:d.a.bool,componentClass:f.a},g={horizontal:!1,inline:!1,componentClass:"form"},y=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.horizontal,n=e.inline,o=e.componentClass,a=e.className,l=Object(i.a)(e,["horizontal","inline","componentClass","className"]),u=Object(h.f)(l),d=u[0],p=u[1],f=[];return t&&f.push(Object(h.e)(d,"horizontal")),n&&f.push(Object(h.e)(d,"inline")),c.a.createElement(o,Object(r.a)({},p,{className:s()(a,f)}))},t}(c.a.Component);y.propTypes=m,y.defaultProps=g;Object(h.a)("form",y)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(9),f=n.n(p),h=n(15),m=(n.n(h),n(345)),g=n(346),y=n(6),b=n(12),v={componentClass:f.a,type:d.a.string,id:d.a.string,inputRef:d.a.func},w={componentClass:"input"},x={$bs_formGroup:d.a.object},T=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e,t=this.context.$bs_formGroup,n=t&&t.controlId,o=this.props,a=o.componentClass,l=o.type,u=o.id,d=void 0===u?n:u,p=o.inputRef,f=o.className,h=o.bsSize,m=Object(i.a)(o,["componentClass","type","id","inputRef","className","bsSize"]),g=Object(y.f)(m),v=g[0],w=g[1];if("file"!==l&&(e=Object(y.d)(v)),h){var x=b.b[h]||h;e[Object(y.e)({bsClass:"input"},x)]=!0}return c.a.createElement(a,Object(r.a)({},w,{type:l,id:d,ref:p,className:s()(f,e)}))},t}(c.a.Component);T.propTypes=v,T.defaultProps=w,T.contextTypes=x,T.Feedback=m.a,T.Static=g.a;Object(y.a)("form-control",Object(y.b)([b.c.SMALL,b.c.LARGE],T))},function(e,t,n){"use strict";var r=n(4),i=n(3),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(75),f=n(6),h={bsRole:"feedback"},m={$bs_formGroup:d.a.object},g=function(e){function t(){return e.apply(this,arguments)||this}Object(o.a)(t,e);var n=t.prototype;return n.getGlyph=function(e){switch(e){case"success":return"ok";case"warning":return"warning-sign";case"error":return"remove";default:return null}},n.renderDefaultFeedback=function(e,t,n,r){var o=this.getGlyph(e&&e.validationState);return o?c.a.createElement(p.a,Object(i.a)({},r,{glyph:o,className:s()(t,n)})):null},n.render=function(){var e=this.props,t=e.className,n=e.children,o=Object(r.a)(e,["className","children"]),a=Object(f.f)(o),l=a[0],u=a[1],d=Object(f.d)(l);if(!n)return this.renderDefaultFeedback(this.context.$bs_formGroup,t,d,u);var p=c.a.Children.only(n);return c.a.cloneElement(p,Object(i.a)({},u,{className:s()(p.props.className,t,d)}))},t}(c.a.Component);g.defaultProps=h,g.contextTypes=m,t.a=Object(f.a)("form-control-feedback",g)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(9),d=n.n(u),p=n(6),f={componentClass:d.a},h={componentClass:"p"},m=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.componentClass,n=e.className,o=Object(i.a)(e,["componentClass","className"]),a=Object(p.f)(o),l=a[0],u=a[1],d=Object(p.d)(l);return c.a.createElement(t,Object(r.a)({},u,{className:s()(n,d)}))},t}(c.a.Component);m.propTypes=f,m.defaultProps=h,t.a=Object(p.a)("form-control-static",m)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(6),f=n(12),h=n(14),m={controlId:d.a.string,validationState:d.a.oneOf(["success","warning","error",null])},g={$bs_formGroup:d.a.object.isRequired},y=function(e){function t(){return e.apply(this,arguments)||this}Object(o.a)(t,e);var n=t.prototype;return n.getChildContext=function(){var e=this.props;return{$bs_formGroup:{controlId:e.controlId,validationState:e.validationState}}},n.hasFeedback=function(e){var t=this;return h.a.some(e,function(e){return"feedback"===e.props.bsRole||e.props.children&&t.hasFeedback(e.props.children)})},n.render=function(){var e=this.props,t=e.validationState,n=e.className,o=e.children,a=Object(i.a)(e,["validationState","className","children"]),l=Object(p.g)(a,["controlId"]),u=l[0],d=l[1],f=Object(r.a)({},Object(p.d)(u),{"has-feedback":this.hasFeedback(o)});return t&&(f["has-"+t]=!0),c.a.createElement("div",Object(r.a)({},d,{className:s()(n,f)}),o)},t}(c.a.Component);y.propTypes=m,y.childContextTypes=g;Object(p.a)("form-group",Object(p.b)([f.c.LARGE,f.c.SMALL],y))},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(6),d=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.className,n=Object(i.a)(e,["className"]),o=Object(u.f)(n),a=o[0],l=o[1],d=Object(u.d)(a);return c.a.createElement("span",Object(r.a)({},l,{className:s()(t,d)}))},t}(c.a.Component);Object(u.a)("help-block",d)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(6),f={responsive:d.a.bool,rounded:d.a.bool,circle:d.a.bool,thumbnail:d.a.bool},h={responsive:!1,rounded:!1,circle:!1,thumbnail:!1},m=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e,t=this.props,n=t.responsive,o=t.rounded,a=t.circle,l=t.thumbnail,u=t.className,d=Object(i.a)(t,["responsive","rounded","circle","thumbnail","className"]),f=Object(p.f)(d),h=f[0],m=f[1],g=(e={},e[Object(p.e)(h,"responsive")]=n,e[Object(p.e)(h,"rounded")]=o,e[Object(p.e)(h,"circle")]=a,e[Object(p.e)(h,"thumbnail")]=l,e);return c.a.createElement("img",Object(r.a)({},m,{className:s()(u,g)}))},t}(c.a.Component);m.propTypes=f,m.defaultProps=h,t.a=Object(p.a)("img",m)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(351),d=n(352),p=n(6),f=n(12),h=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.className,n=Object(i.a)(e,["className"]),o=Object(p.f)(n),a=o[0],l=o[1],u=Object(p.d)(a);return c.a.createElement("span",Object(r.a)({},l,{className:s()(t,u)}))},t}(c.a.Component);h.Addon=u.a,h.Button=d.a;Object(p.a)("input-group",Object(p.b)([f.c.LARGE,f.c.SMALL],h))},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(6),d=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.className,n=Object(i.a)(e,["className"]),o=Object(u.f)(n),a=o[0],l=o[1],d=Object(u.d)(a);return c.a.createElement("span",Object(r.a)({},l,{className:s()(t,d)}))},t}(c.a.Component);t.a=Object(u.a)("input-group-addon",d)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(6),d=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.className,n=Object(i.a)(e,["className"]),o=Object(u.f)(n),a=o[0],l=o[1],d=Object(u.d)(a);return c.a.createElement("span",Object(r.a)({},l,{className:s()(t,d)}))},t}(c.a.Component);t.a=Object(u.a)("input-group-btn",d)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(0),s=n.n(a),l=n(5),c=n.n(l),u=n(9),d=n.n(u),p=n(6),f={componentClass:d.a},h={componentClass:"div"},m=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.componentClass,n=e.className,o=Object(i.a)(e,["componentClass","className"]),a=Object(p.f)(o),l=a[0],u=a[1],d=Object(p.d)(l);return s.a.createElement(t,Object(r.a)({},u,{className:c()(n,d)}))},t}(s.a.Component);m.propTypes=f,m.defaultProps=h;Object(p.a)("jumbotron",m)},function(e,t,n){"use strict";var r=n(33),i=n.n(r),o=n(3),a=n(4),s=n(2),l=n(5),c=n.n(l),u=n(0),d=n.n(u),p=n(6),f=n(12),h=function(e){function t(){return e.apply(this,arguments)||this}Object(s.a)(t,e);var n=t.prototype;return n.hasContent=function(e){var t=!1;return d.a.Children.forEach(e,function(e){t||(e||0===e)&&(t=!0)}),t},n.render=function(){var e=this.props,t=e.className,n=e.children,r=Object(a.a)(e,["className","children"]),i=Object(p.f)(r),s=i[0],l=i[1],u=Object(o.a)({},Object(p.d)(s),{hidden:!this.hasContent(n)});return d.a.createElement("span",Object(o.a)({},l,{className:c()(t,u)}),n)},t}(d.a.Component);Object(p.a)("label",Object(p.c)(i()(f.d).concat([f.e.DEFAULT,f.e.PRIMARY]),f.e.DEFAULT,h))},function(e,t,n){"use strict";function r(e){return e?m.a.some(e,function(e){return e.type!==f.a||e.props.href||e.props.onClick})?"div":"ul":"div"}var i=n(3),o=n(4),a=n(2),s=n(5),l=n.n(s),c=n(0),u=n.n(c),d=n(9),p=n.n(d),f=n(120),h=n(6),m=n(14),g={componentClass:p.a},y=function(e){function t(){return e.apply(this,arguments)||this}return Object(a.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.children,n=e.componentClass,a=void 0===n?r(t):n,s=e.className,d=Object(o.a)(e,["children","componentClass","className"]),p=Object(h.f)(d),g=p[0],y=p[1],b=Object(h.d)(g),v="ul"===a&&m.a.every(t,function(e){return e.type===f.a});return u.a.createElement(a,Object(i.a)({},y,{className:l()(s,b)}),v?m.a.map(t,function(e){return Object(c.cloneElement)(e,{listItem:!0})}):t)},t}(u.a.Component);y.propTypes=g;Object(h.a)("list-group",y)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(9),f=n.n(p),h=n(54),m=n(6),g={align:d.a.oneOf(["top","middle","bottom"]),componentClass:f.a},y={componentClass:"div"},b=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.componentClass,n=e.align,o=e.className,a=Object(i.a)(e,["componentClass","align","className"]),l=Object(m.f)(a),u=l[0],d=l[1],p=Object(m.d)(u);return n&&(p[Object(m.e)(h.a.defaultProps,n)]=!0),c.a.createElement(t,Object(r.a)({},d,{className:s()(o,p)}))},t}(c.a.Component);b.propTypes=g,b.defaultProps=y,t.a=Object(m.a)("media-body",b)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(9),d=n.n(u),p=n(6),f={componentClass:d.a},h={componentClass:"h4"},m=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.componentClass,n=e.className,o=Object(i.a)(e,["componentClass","className"]),a=Object(p.f)(o),l=a[0],u=a[1],d=Object(p.d)(l);return c.a.createElement(t,Object(r.a)({},u,{className:s()(n,d)}))},t}(c.a.Component);m.propTypes=f,m.defaultProps=h,t.a=Object(p.a)("media-heading",m)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(54),f=n(6),h={align:d.a.oneOf(["top","middle","bottom"])},m=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.align,n=e.className,o=Object(i.a)(e,["align","className"]),a=Object(f.f)(o),l=a[0],u=a[1],d=Object(f.d)(l);return t&&(d[Object(f.e)(p.a.defaultProps,t)]=!0),c.a.createElement("div",Object(r.a)({},u,{className:s()(n,d)}))},t}(c.a.Component);m.propTypes=h,t.a=Object(f.a)("media-left",m)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(6),d=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.className,n=Object(i.a)(e,["className"]),o=Object(u.f)(n),a=o[0],l=o[1],d=Object(u.d)(a);return c.a.createElement("ul",Object(r.a)({},l,{className:s()(t,d)}))},t}(c.a.Component);t.a=Object(u.a)("media-list",d)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(6),d=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.className,n=Object(i.a)(e,["className"]),o=Object(u.f)(n),a=o[0],l=o[1],d=Object(u.d)(a);return c.a.createElement("li",Object(r.a)({},l,{className:s()(t,d)}))},t}(c.a.Component);t.a=Object(u.a)("media",d)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(54),f=n(6),h={align:d.a.oneOf(["top","middle","bottom"])},m=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.align,n=e.className,o=Object(i.a)(e,["align","className"]),a=Object(f.f)(o),l=a[0],u=a[1],d=Object(f.d)(l);return t&&(d[Object(f.e)(p.a.defaultProps,t)]=!0),c.a.createElement("div",Object(r.a)({},u,{className:s()(n,d)}))},t}(c.a.Component);m.propTypes=h,t.a=Object(f.a)("media-right",m)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(11),s=n(5),l=n.n(s),c=n(0),u=n.n(c),d=n(1),p=n.n(d),f=n(49),h=n.n(f),m=n(17),g=n(6),y=n(10),b={active:p.a.bool,disabled:p.a.bool,divider:h()(p.a.bool,function(e){var t=e.divider,n=e.children;return t&&n?new Error("Children will not be rendered for dividers"):null}),eventKey:p.a.any,header:p.a.bool,href:p.a.string,onClick:p.a.func,onSelect:p.a.func},v={divider:!1,disabled:!1,header:!1},w=function(e){function t(t,n){var r;return r=e.call(this,t,n)||this,r.handleClick=r.handleClick.bind(Object(a.a)(r)),r}Object(o.a)(t,e);var n=t.prototype;return n.handleClick=function(e){var t=this.props,n=t.href,r=t.disabled,i=t.onSelect,o=t.eventKey;n&&!r||e.preventDefault(),r||i&&i(o,e)},n.render=function(){var e=this.props,t=e.active,n=e.disabled,o=e.divider,a=e.header,s=e.onClick,c=e.className,d=e.style,p=Object(i.a)(e,["active","disabled","divider","header","onClick","className","style"]),f=Object(g.g)(p,["eventKey","onSelect"]),h=f[0],b=f[1];return o?(b.children=void 0,u.a.createElement("li",Object(r.a)({},b,{role:"separator",className:l()(c,"divider"),style:d}))):a?u.a.createElement("li",Object(r.a)({},b,{role:"heading",className:l()(c,Object(g.e)(h,"header")),style:d})):u.a.createElement("li",{role:"presentation",className:l()(c,{active:t,disabled:n}),style:d},u.a.createElement(m.a,Object(r.a)({},b,{role:"menuitem",tabIndex:"-1",onClick:Object(y.a)(s,this.handleClick)})))},t}(u.a.Component);w.propTypes=b,w.defaultProps=v,t.a=Object(g.a)("dropdown",w)},function(e,t,n){"use strict";function r(e){return w.a.createElement(_.a,Object(l.a)({},e,{timeout:X.TRANSITION_DURATION}))}function i(e){return w.a.createElement(_.a,Object(l.a)({},e,{timeout:X.BACKDROP_TRANSITION_DURATION}))}var o=n(4),a=n(2),s=n(11),l=n(3),c=n(5),u=n.n(c),d=n(364),p=n.n(d),f=n(34),h=n.n(f),m=n(21),g=n.n(m),y=n(121),b=n.n(y),v=n(0),w=n.n(v),x=n(1),T=n.n(x),S=n(13),C=n.n(S),k=n(368),O=n.n(k),E=n(123),P=n.n(E),j=n(9),I=n.n(j),_=n(53),R=n(125),A=n(126),N=n(127),B=n(128),M=n(129),L=n(6),D=n(10),G=n(52),F=n(12),H=Object(l.a)({},O.a.propTypes,A.a.propTypes,{backdrop:T.a.oneOf(["static",!0,!1]),backdropClassName:T.a.string,keyboard:T.a.bool,animation:T.a.bool,dialogComponentClass:I.a,autoFocus:T.a.bool,enforceFocus:T.a.bool,restoreFocus:T.a.bool,show:T.a.bool,onHide:T.a.func,onEnter:T.a.func,onEntering:T.a.func,onEntered:T.a.func,onExit:T.a.func,onExiting:T.a.func,onExited:T.a.func,container:O.a.propTypes.container}),V=Object(l.a)({},O.a.defaultProps,{animation:!0,dialogComponentClass:A.a}),U={$bs_modal:T.a.shape({onHide:T.a.func})},X=function(e){function t(t,n){var r;return r=e.call(this,t,n)||this,r.handleEntering=r.handleEntering.bind(Object(s.a)(r)),r.handleExited=r.handleExited.bind(Object(s.a)(r)),r.handleWindowResize=r.handleWindowResize.bind(Object(s.a)(r)),r.handleDialogClick=r.handleDialogClick.bind(Object(s.a)(r)),r.setModalRef=r.setModalRef.bind(Object(s.a)(r)),r.state={style:{}},r}Object(a.a)(t,e);var n=t.prototype;return n.getChildContext=function(){return{$bs_modal:{onHide:this.props.onHide}}},n.componentWillUnmount=function(){this.handleExited()},n.setModalRef=function(e){this._modal=e},n.handleDialogClick=function(e){e.target===e.currentTarget&&this.props.onHide()},n.handleEntering=function(){p.a.on(window,"resize",this.handleWindowResize),this.updateStyle()},n.handleExited=function(){p.a.off(window,"resize",this.handleWindowResize)},n.handleWindowResize=function(){this.updateStyle()},n.updateStyle=function(){if(g.a){var e=this._modal.getDialogElement(),t=e.scrollHeight,n=h()(e),r=P()(C.a.findDOMNode(this.props.container||n.body)),i=t>n.documentElement.clientHeight;this.setState({style:{paddingRight:r&&!i?b()():void 0,paddingLeft:!r&&i?b()():void 0}})}},n.render=function(){var e=this.props,t=e.backdrop,n=e.backdropClassName,a=e.animation,s=e.show,c=e.dialogComponentClass,d=e.className,p=e.style,f=e.children,h=e.onEntering,m=e.onExited,g=Object(o.a)(e,["backdrop","backdropClassName","animation","show","dialogComponentClass","className","style","children","onEntering","onExited"]),y=Object(G.a)(g,O.a),b=y[0],v=y[1],x=s&&!a&&"in";return w.a.createElement(O.a,Object(l.a)({},b,{ref:this.setModalRef,show:s,containerClassName:Object(L.e)(g,"open"),transition:a?r:void 0,backdrop:t,backdropTransition:a?i:void 0,backdropClassName:u()(Object(L.e)(g,"backdrop"),n,x),onEntering:Object(D.a)(h,this.handleEntering),onExited:Object(D.a)(m,this.handleExited)}),w.a.createElement(c,Object(l.a)({},v,{style:Object(l.a)({},this.state.style,p),className:u()(d,x),onClick:!0===t?this.handleDialogClick:null}),f))},t}(w.a.Component);X.propTypes=H,X.defaultProps=V,X.childContextTypes=U,X.Body=R.a,X.Header=B.a,X.Title=M.a,X.Footer=N.a,X.Dialog=A.a,X.TRANSITION_DURATION=300,X.BACKDROP_TRANSITION_DURATION=150;Object(L.a)("modal",Object(L.b)([F.c.LARGE,F.c.SMALL],X))},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.listen=t.filter=t.off=t.on=void 0;var i=n(79),o=r(i),a=n(80),s=r(a),l=n(365),c=r(l),u=n(367),d=r(u);t.on=o.default,t.off=s.default,t.filter=c.default,t.listen=d.default,t.default={on:o.default,off:s.default,filter:c.default,listen:d.default}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t){return function(n){var r=n.currentTarget,i=n.target;(0,l.default)(r,e).some(function(e){return(0,a.default)(e,i)})&&t.call(this,n)}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=i;var o=n(35),a=r(o),s=n(366),l=r(s);e.exports=t.default},function(e,t,n){"use strict";function r(e,t){var n,r="#"===t[0],a="."===t[0],s=r||a?t.slice(1):t,l=i.test(s);return l?r?(e=e.getElementById?e:document,(n=e.getElementById(s))?[n]:[]):o(e.getElementsByClassName&&a?e.getElementsByClassName(s):e.getElementsByTagName(t)):o(e.querySelectorAll(t))}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r;var i=/^[\w-]*$/,o=Function.prototype.bind.call(Function.prototype.call,[].slice);e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var i=n(21),o=r(i),a=n(79),s=r(a),l=n(80),c=r(l),u=function(){};o.default&&(u=function(e,t,n,r){return(0,s.default)(e,t,n,r),function(){(0,c.default)(e,t,n,r)}}),t.default=u,e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function a(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},l=n(115),c=r(l),u=n(35),d=r(u),p=n(21),f=r(p),h=n(1),m=r(h),g=n(55),y=r(g),b=n(369),v=r(b),w=n(9),x=r(w),T=n(0),S=r(T),C=n(13),k=r(C),O=n(15),E=r(O),P=n(370),j=r(P),I=n(124),_=r(I),R=n(376),A=r(R),N=n(117),B=r(N),M=n(377),L=r(M),D=n(57),G=r(D),F=n(36),H=r(F),V=new j.default,U=function(e){function t(){var n,r,a;i(this,t);for(var s=arguments.length,l=Array(s),c=0;c<s;c++)l[c]=arguments[c];return n=r=o(this,e.call.apply(e,[this].concat(l))),X.call(r),a=n,o(r,a)}return a(t,e),t.prototype.omitProps=function(e,t){var n=Object.keys(e),r={};return n.map(function(n){Object.prototype.hasOwnProperty.call(t,n)||(r[n]=e[n])}),r},t.prototype.render=function(){var e=this.props,n=e.show,r=e.container,i=e.children,o=e.transition,a=e.backdrop,l=e.className,c=e.style,u=e.onExit,d=e.onExiting,p=e.onEnter,f=e.onEntering,h=e.onEntered,m=S.default.Children.only(i),g=this.omitProps(this.props,t.propTypes);if(!(n||o&&!this.state.exited))return null;var y=m.props,b=y.role,v=y.tabIndex;return void 0!==b&&void 0!==v||(m=(0,T.cloneElement)(m,{role:void 0===b?"document":b,tabIndex:null==v?"-1":v})),o&&(m=S.default.createElement(o,{appear:!0,unmountOnExit:!0,in:n,onExit:u,onExiting:d,onExited:this.handleHidden,onEnter:p,onEntering:f,onEntered:h},m)),S.default.createElement(_.default,{ref:this.setMountNode,container:r,onRendered:this.onPortalRendered},S.default.createElement("div",s({ref:this.setModalNodeRef,role:b||"dialog"},g,{style:c,className:l}),a&&this.renderBackdrop(),S.default.createElement(A.default,{ref:this.setDialogRef},m)))},t.prototype.componentWillReceiveProps=function(e){e.show?this.setState({exited:!1}):e.transition||this.setState({exited:!0})},t.prototype.componentWillUpdate=function(e){!this.props.show&&e.show&&this.checkForFocus()},t.prototype.componentDidMount=function(){this._isMounted=!0,this.props.show&&this.onShow()},t.prototype.componentDidUpdate=function(e){var t=this.props.transition;!e.show||this.props.show||t?!e.show&&this.props.show&&this.onShow():this.onHide()},t.prototype.componentWillUnmount=function(){var e=this.props,t=e.show,n=e.transition;this._isMounted=!1,(t||n&&!this.state.exited)&&this.onHide()},t.prototype.autoFocus=function(){if(this.props.autoFocus){var e=this.getDialogElement(),t=(0,c.default)((0,H.default)(this));e&&!(0,d.default)(e,t)&&(this.lastFocus=t,e.hasAttribute("tabIndex")||((0,E.default)(!1,'The modal content node does not accept focus. For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'),e.setAttribute("tabIndex",-1)),e.focus())}},t.prototype.restoreLastFocus=function(){this.lastFocus&&this.lastFocus.focus&&(this.lastFocus.focus(),this.lastFocus=null)},t.prototype.getDialogElement=function(){return k.default.findDOMNode(this.dialog)},t.prototype.isTopModal=function(){return this.props.manager.isTopModal(this)},t}(S.default.Component);U.propTypes=s({},_.default.propTypes,{show:m.default.bool,container:m.default.oneOfType([y.default,m.default.func]),onShow:m.default.func,onHide:m.default.func,backdrop:m.default.oneOfType([m.default.bool,m.default.oneOf(["static"])]),renderBackdrop:m.default.func,onEscapeKeyDown:m.default.func,onEscapeKeyUp:(0,v.default)(m.default.func,"Please use onEscapeKeyDown instead for consistency"),onBackdropClick:m.default.func,backdropStyle:m.default.object,backdropClassName:m.default.string,containerClassName:m.default.string,keyboard:m.default.bool,transition:x.default,backdropTransition:x.default,autoFocus:m.default.bool,enforceFocus:m.default.bool,restoreFocus:m.default.bool,onEnter:m.default.func,onEntering:m.default.func,onEntered:m.default.func,onExit:m.default.func,onExiting:m.default.func,onExited:m.default.func,manager:m.default.object.isRequired}),U.defaultProps={show:!1,backdrop:!0,keyboard:!0,autoFocus:!0,enforceFocus:!0,restoreFocus:!0,onHide:function(){},manager:V,renderBackdrop:function(e){return S.default.createElement("div",e)}};var X=function(){var e=this;this.state={exited:!this.props.show},this.renderBackdrop=function(){var t=e.props,n=t.backdropStyle,r=t.backdropClassName,i=t.renderBackdrop,o=t.backdropTransition,a=function(t){return e.backdrop=t},s=i({ref:a,style:n,className:r,onClick:e.handleBackdropClick});return o&&(s=S.default.createElement(o,{appear:!0,in:e.props.show},s)),s},this.onPortalRendered=function(){e.autoFocus(),e.props.onShow&&e.props.onShow()},this.onShow=function(){var t=(0,H.default)(e),n=(0,G.default)(e.props.container,t.body);e.props.manager.add(e,n,e.props.containerClassName),e._onDocumentKeydownListener=(0,B.default)(t,"keydown",e.handleDocumentKeyDown),e._onDocumentKeyupListener=(0,B.default)(t,"keyup",e.handleDocumentKeyUp),e._onFocusinListener=(0,L.default)(e.enforceFocus)},this.onHide=function(){e.props.manager.remove(e),e._onDocumentKeydownListener.remove(),e._onDocumentKeyupListener.remove(),e._onFocusinListener.remove(),e.props.restoreFocus&&e.restoreLastFocus()},this.setMountNode=function(t){e.mountNode=t?t.getMountNode():t},this.setModalNodeRef=function(t){e.modalNode=t},this.setDialogRef=function(t){e.dialog=t},this.handleHidden=function(){if(e.setState({exited:!0}),e.onHide(),e.props.onExited){var t;(t=e.props).onExited.apply(t,arguments)}},this.handleBackdropClick=function(t){t.target===t.currentTarget&&(e.props.onBackdropClick&&e.props.onBackdropClick(t),!0===e.props.backdrop&&e.props.onHide())},this.handleDocumentKeyDown=function(t){e.props.keyboard&&27===t.keyCode&&e.isTopModal()&&(e.props.onEscapeKeyDown&&e.props.onEscapeKeyDown(t),e.props.onHide())},this.handleDocumentKeyUp=function(t){e.props.keyboard&&27===t.keyCode&&e.isTopModal()&&e.props.onEscapeKeyUp&&e.props.onEscapeKeyUp(t)},this.checkForFocus=function(){f.default&&(e.lastFocus=(0,c.default)())},this.enforceFocus=function(){if(e.props.enforceFocus&&e._isMounted&&e.isTopModal()){var t=e.getDialogElement(),n=(0,c.default)((0,H.default)(e));t&&!(0,d.default)(t,n)&&t.focus()}}};U.Manager=j.default,t.default=U,e.exports=t.default},function(e,t,n){"use strict";function r(e,t){return function(n,r,i,o,l){var c=i||"<<anonymous>>",u=l||r;if(null!=n[r]){var d=i+"."+r;(0,a.default)(s[d],"The "+o+" `"+u+"` of `"+c+"` is deprecated. "+t+"."),s[d]=!0}for(var p=arguments.length,f=Array(p>5?p-5:0),h=5;h<p;h++)f[h-5]=arguments[h];return e.apply(void 0,[n,r,i,o,l].concat(f))}}function i(){s={}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r;var o=n(15),a=function(e){return e&&e.__esModule?e:{default:e}}(o),s={};r._resetWarned=i,e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){var n=-1;return e.some(function(e,r){if(t(e,r))return n=r,!0}),n}function a(e,t){return o(e,function(e){return-1!==e.modals.indexOf(t)})}function s(e,t){var n={overflow:"hidden"};e.style={overflow:t.style.overflow,paddingRight:t.style.paddingRight},e.overflowing&&(n.paddingRight=parseInt((0,p.default)(t,"paddingRight")||0,10)+(0,h.default)()+"px"),(0,p.default)(t,n)}function l(e,t){var n=e.style;Object.keys(n).forEach(function(e){return t.style[e]=n[e]})}t.__esModule=!0;var c=n(371),u=r(c),d=n(44),p=r(d),f=n(121),h=r(f),m=n(123),g=r(m),y=n(374),b=function e(){var t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=n.hideSiblingNodes,o=void 0===r||r,c=n.handleContainerOverflow,d=void 0===c||c;i(this,e),this.add=function(e,n,r){var i=t.modals.indexOf(e),o=t.containers.indexOf(n);if(-1!==i)return i;if(i=t.modals.length,t.modals.push(e),t.hideSiblingNodes&&(0,y.hideSiblings)(n,e.mountNode),-1!==o)return t.data[o].modals.push(e),i;var a={modals:[e],classes:r?r.split(/\s+/):[],overflowing:(0,g.default)(n)};return t.handleContainerOverflow&&s(a,n),a.classes.forEach(u.default.addClass.bind(null,n)),t.containers.push(n),t.data.push(a),i},this.remove=function(e){var n=t.modals.indexOf(e);if(-1!==n){var r=a(t.data,e),i=t.data[r],o=t.containers[r];i.modals.splice(i.modals.indexOf(e),1),t.modals.splice(n,1),0===i.modals.length?(i.classes.forEach(u.default.removeClass.bind(null,o)),t.handleContainerOverflow&&l(i,o),t.hideSiblingNodes&&(0,y.showSiblings)(o,e.mountNode),t.containers.splice(r,1),t.data.splice(r,1)):t.hideSiblingNodes&&(0,y.ariaHidden)(!1,i.modals[i.modals.length-1].mountNode)}},this.isTopModal=function(e){return!!t.modals.length&&t.modals[t.modals.length-1]===e},this.hideSiblingNodes=o,this.handleContainerOverflow=d,this.modals=[],this.containers=[],this.data=[]};t.default=b,e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.hasClass=t.removeClass=t.addClass=void 0;var i=n(372),o=r(i),a=n(373),s=r(a),l=n(122),c=r(l);t.addClass=o.default,t.removeClass=s.default,t.hasClass=c.default,t.default={addClass:o.default,removeClass:s.default,hasClass:c.default}},function(e,t,n){"use strict";function r(e,t){e.classList?e.classList.add(t):(0,o.default)(e,t)||("string"===typeof e.className?e.className=e.className+" "+t:e.setAttribute("class",(e.className&&e.className.baseVal||"")+" "+t))}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r;var i=n(122),o=function(e){return e&&e.__esModule?e:{default:e}}(i);e.exports=t.default},function(e,t,n){"use strict";function r(e,t){return e.replace(new RegExp("(^|\\s)"+t+"(?:\\s|$)","g"),"$1").replace(/\s+/g," ").replace(/^\s*|\s*$/g,"")}e.exports=function(e,t){e.classList?e.classList.remove(t):"string"===typeof e.className?e.className=r(e.className,t):e.setAttribute("class",r(e.className&&e.className.baseVal||"",t))}},function(e,t,n){"use strict";function r(e,t){t&&(e?t.setAttribute("aria-hidden","true"):t.removeAttribute("aria-hidden"))}function i(e,t){l(e,t,function(e){return r(!0,e)})}function o(e,t){l(e,t,function(e){return r(!1,e)})}t.__esModule=!0,t.ariaHidden=r,t.hideSiblings=i,t.showSiblings=o;var a=["template","script","style"],s=function(e){var t=e.nodeType,n=e.tagName;return 1===t&&-1===a.indexOf(n.toLowerCase())},l=function(e,t,n){t=[].concat(t),[].forEach.call(e.children,function(e){-1===t.indexOf(e)&&s(e)&&n(e)})}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function a(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var s=n(1),l=r(s),c=n(55),u=r(c),d=n(0),p=r(d),f=n(13),h=r(f),m=n(57),g=r(m),y=n(36),b=r(y),v=function(e){function t(){var n,r,a;i(this,t);for(var s=arguments.length,l=Array(s),c=0;c<s;c++)l[c]=arguments[c];return n=r=o(this,e.call.apply(e,[this].concat(l))),r._mountOverlayTarget=function(){r._overlayTarget||(r._overlayTarget=document.createElement("div"),r._portalContainerNode=(0,g.default)(r.props.container,(0,b.default)(r).body),r._portalContainerNode.appendChild(r._overlayTarget))},r._unmountOverlayTarget=function(){r._overlayTarget&&(r._portalContainerNode.removeChild(r._overlayTarget),r._overlayTarget=null),r._portalContainerNode=null},r._renderOverlay=function(){var e=r.props.children?p.default.Children.only(r.props.children):null;if(null!==e){r._mountOverlayTarget();var t=!r._overlayInstance;r._overlayInstance=h.default.unstable_renderSubtreeIntoContainer(r,e,r._overlayTarget,function(){t&&r.props.onRendered&&r.props.onRendered()})}else r._unrenderOverlay(),r._unmountOverlayTarget()},r._unrenderOverlay=function(){r._overlayTarget&&(h.default.unmountComponentAtNode(r._overlayTarget),r._overlayInstance=null)},r.getMountNode=function(){return r._overlayTarget},a=n,o(r,a)}return a(t,e),t.prototype.componentDidMount=function(){this._isMounted=!0,this._renderOverlay()},t.prototype.componentDidUpdate=function(){this._renderOverlay()},t.prototype.componentWillReceiveProps=function(e){this._overlayTarget&&e.container!==this.props.container&&(this._portalContainerNode.removeChild(this._overlayTarget),this._portalContainerNode=(0,g.default)(e.container,(0,b.default)(this).body),this._portalContainerNode.appendChild(this._overlayTarget))},t.prototype.componentWillUnmount=function(){this._isMounted=!1,this._unrenderOverlay(),this._unmountOverlayTarget()},t.prototype.render=function(){return null},t}(p.default.Component);v.displayName="Portal",v.propTypes={container:l.default.oneOfType([u.default,l.default.func]),onRendered:l.default.func},t.default=v,e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function a(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var s=n(1),l=r(s),c=n(0),u=r(c),d={children:l.default.node},p=function(e){function t(){return i(this,t),o(this,e.apply(this,arguments))}return a(t,e),t.prototype.render=function(){return this.props.children},t}(u.default.Component);p.propTypes=d,t.default=p,e.exports=t.default},function(e,t,n){"use strict";function r(e){var t=!document.addEventListener,n=void 0;return t?(document.attachEvent("onfocusin",e),n=function(){return document.detachEvent("onfocusin",e)}):(document.addEventListener("focus",e,!0),n=function(){return document.removeEventListener("focus",e,!0)}),{remove:n}}t.__esModule=!0,t.default=r,e.exports=t.default},function(e,t,n){"use strict";function r(e,t,n){var r=function(e,n){var r=e.componentClass,a=e.className,s=e.pullRight,l=e.pullLeft,u=Object(o.a)(e,["componentClass","className","pullRight","pullLeft"]),p=n.$bs_navbar,f=void 0===p?{bsClass:"navbar"}:p;return d.a.createElement(r,Object(i.a)({},u,{className:c()(a,Object(S.e)(f,t),s&&Object(S.e)(f,"right"),l&&Object(S.e)(f,"left"))}))};return r.displayName=n,r.propTypes={componentClass:m.a,pullRight:f.a.bool,pullLeft:f.a.bool},r.defaultProps={componentClass:e,pullRight:!1,pullLeft:!1},r.contextTypes={$bs_navbar:f.a.shape({bsClass:f.a.string})},r}var i=n(3),o=n(4),a=n(2),s=n(11),l=n(5),c=n.n(l),u=n(0),d=n.n(u),p=n(1),f=n.n(p),h=n(9),m=n.n(h),g=n(27),y=n.n(g),b=n(119),v=n(131),w=n(379),x=n(380),T=n(381),S=n(6),C=n(12),k=n(10),O={fixedTop:f.a.bool,fixedBottom:f.a.bool,staticTop:f.a.bool,inverse:f.a.bool,fluid:f.a.bool,componentClass:m.a,onToggle:f.a.func,onSelect:f.a.func,collapseOnSelect:f.a.bool,expanded:f.a.bool,role:f.a.string},E={componentClass:"nav",fixedTop:!1,fixedBottom:!1,staticTop:!1,inverse:!1,fluid:!1,collapseOnSelect:!1},P={$bs_navbar:f.a.shape({bsClass:f.a.string,expanded:f.a.bool,onToggle:f.a.func.isRequired,onSelect:f.a.func})},j=function(e){function t(t,n){var r;return r=e.call(this,t,n)||this,r.handleToggle=r.handleToggle.bind(Object(s.a)(r)),r.handleCollapse=r.handleCollapse.bind(Object(s.a)(r)),r}Object(a.a)(t,e);var n=t.prototype;return n.getChildContext=function(){var e=this.props,t=e.bsClass,n=e.expanded,r=e.onSelect,i=e.collapseOnSelect;return{$bs_navbar:{bsClass:t,expanded:n,onToggle:this.handleToggle,onSelect:Object(k.a)(r,i?this.handleCollapse:null)}}},n.handleCollapse=function(){var e=this.props,t=e.onToggle;e.expanded&&t(!1)},n.handleToggle=function(){var e=this.props;(0,e.onToggle)(!e.expanded)},n.render=function(){var e,t=this.props,n=t.componentClass,r=t.fixedTop,a=t.fixedBottom,s=t.staticTop,l=t.inverse,u=t.fluid,p=t.className,f=t.children,h=Object(o.a)(t,["componentClass","fixedTop","fixedBottom","staticTop","inverse","fluid","className","children"]),m=Object(S.g)(h,["expanded","onToggle","onSelect","collapseOnSelect"]),g=m[0],y=m[1];void 0===y.role&&"nav"!==n&&(y.role="navigation"),l&&(g.bsStyle=C.e.INVERSE);var v=Object(i.a)({},Object(S.d)(g),(e={},e[Object(S.e)(g,"fixed-top")]=r,e[Object(S.e)(g,"fixed-bottom")]=a,e[Object(S.e)(g,"static-top")]=s,e));return d.a.createElement(n,Object(i.a)({},y,{className:c()(p,v)}),d.a.createElement(b.a,{fluid:u},f))},t}(d.a.Component);j.propTypes=O,j.defaultProps=E,j.childContextTypes=P,Object(S.a)("navbar",j);var I=y()(j,{expanded:"onToggle"});I.Brand=v.a,I.Header=x.a,I.Toggle=T.a,I.Collapse=w.a,I.Form=r("div","form","NavbarForm"),I.Text=r("p","text","NavbarText"),I.Link=r("a","link","NavbarLink"),t.a=Object(S.c)([C.e.DEFAULT,C.e.INVERSE],C.e.DEFAULT,I)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(0),s=n.n(a),l=n(1),c=n.n(l),u=n(76),d=n(6),p={$bs_navbar:c.a.shape({bsClass:c.a.string,expanded:c.a.bool})},f=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.children,n=Object(i.a)(e,["children"]),o=this.context.$bs_navbar||{bsClass:"navbar"},a=Object(d.e)(o,"collapse");return s.a.createElement(u.a,Object(r.a)({in:o.expanded},n),s.a.createElement("div",{className:a},t))},t}(s.a.Component);f.contextTypes=p,t.a=f},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(6),f={$bs_navbar:d.a.shape({bsClass:d.a.string})},h=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.className,n=Object(i.a)(e,["className"]),o=this.context.$bs_navbar||{bsClass:"navbar"},a=Object(p.e)(o,"header");return c.a.createElement("div",Object(r.a)({},n,{className:s()(t,a)}))},t}(c.a.Component);h.contextTypes=f,t.a=h},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(6),f=n(10),h={onClick:d.a.func,children:d.a.node},m={$bs_navbar:d.a.shape({bsClass:d.a.string,expanded:d.a.bool,onToggle:d.a.func.isRequired})},g=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.onClick,n=e.className,o=e.children,a=Object(i.a)(e,["onClick","className","children"]),l=this.context.$bs_navbar||{bsClass:"navbar"},u=Object(r.a)({type:"button"},a,{onClick:Object(f.a)(t,l.onToggle),className:s()(n,Object(p.e)(l,"toggle"),!l.expanded&&"collapsed")});return o?c.a.createElement("button",u,o):c.a.createElement("button",u,c.a.createElement("span",{className:"sr-only"},"Toggle navigation"),c.a.createElement("span",{className:"icon-bar"}),c.a.createElement("span",{className:"icon-bar"}),c.a.createElement("span",{className:"icon-bar"}))},t}(c.a.Component);g.propTypes=h,g.contextTypes=m,t.a=g},function(e,t,n){"use strict";var r=n(4),i=n(2),o=n(3),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(50),f=n(52),h=n(14),m=Object(o.a)({},p.a.propTypes,{title:d.a.node.isRequired,noCaret:d.a.bool,active:d.a.bool,activeKey:d.a.any,activeHref:d.a.string,children:d.a.node}),g=function(e){function t(){return e.apply(this,arguments)||this}Object(i.a)(t,e);var n=t.prototype;return n.isActive=function(e,t,n){var r=this,i=e.props;return!!(i.active||null!=t&&i.eventKey===t||n&&i.href===n)||(!!h.a.some(i.children,function(e){return r.isActive(e,t,n)})||i.active)},n.render=function(){var e=this,t=this.props,n=t.title,i=t.activeKey,a=t.activeHref,l=t.className,u=t.style,d=t.children,m=Object(r.a)(t,["title","activeKey","activeHref","className","style","children"]),g=this.isActive(this,i,a);delete m.active,delete m.eventKey;var y=Object(f.a)(m,p.a.ControlledComponent),b=y[0],v=y[1];return c.a.createElement(p.a,Object(o.a)({},b,{componentClass:"li",className:s()(l,{active:g}),style:u}),c.a.createElement(p.a.Toggle,Object(o.a)({},v,{useAnchor:!0}),n),c.a.createElement(p.a.Menu,null,h.a.map(d,function(t){return c.a.cloneElement(t,{active:e.isActive(t,i,a)})})))},t}(c.a.Component);g.propTypes=m},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function s(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},c=n(1),u=r(c),d=n(9),p=r(d),f=n(0),h=r(f),m=n(124),g=r(m),y=n(384),b=r(y),v=n(116),w=r(v),x=function(e){function t(n,r){o(this,t);var i=a(this,e.call(this,n,r));return i.handleHidden=function(){if(i.setState({exited:!0}),i.props.onExited){var e;(e=i.props).onExited.apply(e,arguments)}},i.state={exited:!n.show},i.onHiddenListener=i.handleHidden.bind(i),i}return s(t,e),t.prototype.componentWillReceiveProps=function(e){e.show?this.setState({exited:!1}):e.transition||this.setState({exited:!0})},t.prototype.render=function(){var e=this.props,t=e.container,n=e.containerPadding,r=e.target,o=e.placement,a=e.shouldUpdatePosition,s=e.rootClose,l=e.children,c=e.transition,u=i(e,["container","containerPadding","target","placement","shouldUpdatePosition","rootClose","children","transition"]);if(!(u.show||c&&!this.state.exited))return null;var d=l;if(d=h.default.createElement(b.default,{container:t,containerPadding:n,target:r,placement:o,shouldUpdatePosition:a},d),c){var p=u.onExit,f=u.onExiting,m=u.onEnter,y=u.onEntering,v=u.onEntered;d=h.default.createElement(c,{in:u.show,appear:!0,onExit:p,onExiting:f,onExited:this.onHiddenListener,onEnter:m,onEntering:y,onEntered:v},d)}return s&&(d=h.default.createElement(w.default,{onRootClose:u.onHide},d)),h.default.createElement(g.default,{container:t},d)},t}(h.default.Component);x.propTypes=l({},g.default.propTypes,b.default.propTypes,{show:u.default.bool,rootClose:u.default.bool,onHide:function(e){var t=u.default.func;e.rootClose&&(t=t.isRequired);for(var n=arguments.length,r=Array(n>1?n-1:0),i=1;i<n;i++)r[i-1]=arguments[i];return t.apply(void 0,[e].concat(r))},transition:p.default,onEnter:u.default.func,onEntering:u.default.func,onEntered:u.default.func,onExit:u.default.func,onExiting:u.default.func,onExited:u.default.func}),t.default=x,e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function s(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},c=n(5),u=r(c),d=n(1),p=r(d),f=n(55),h=r(f),m=n(0),g=r(m),y=n(13),b=r(y),v=n(385),w=r(v),x=n(57),T=r(x),S=n(36),C=r(S),k=function(e){function t(n,r){o(this,t);var i=a(this,e.call(this,n,r));return i.getTarget=function(){var e=i.props.target,t="function"===typeof e?e():e;return t&&b.default.findDOMNode(t)||null},i.maybeUpdatePosition=function(e){var t=i.getTarget();(i.props.shouldUpdatePosition||t!==i._lastTarget||e)&&i.updatePosition(t)},i.state={positionLeft:0,positionTop:0,arrowOffsetLeft:null,arrowOffsetTop:null},i._needsFlush=!1,i._lastTarget=null,i}return s(t,e),t.prototype.componentDidMount=function(){this.updatePosition(this.getTarget())},t.prototype.componentWillReceiveProps=function(){this._needsFlush=!0},t.prototype.componentDidUpdate=function(e){this._needsFlush&&(this._needsFlush=!1,this.maybeUpdatePosition(this.props.placement!==e.placement))},t.prototype.render=function(){var e=this.props,t=e.children,n=e.className,r=i(e,["children","className"]),o=this.state,a=o.positionLeft,s=o.positionTop,c=i(o,["positionLeft","positionTop"]);delete r.target,delete r.container,delete r.containerPadding,delete r.shouldUpdatePosition;var d=g.default.Children.only(t);return(0,m.cloneElement)(d,l({},r,c,{positionLeft:a,positionTop:s,className:(0,u.default)(n,d.props.className),style:l({},d.props.style,{left:a,top:s})}))},t.prototype.updatePosition=function(e){if(this._lastTarget=e,!e)return void this.setState({positionLeft:0,positionTop:0,arrowOffsetLeft:null,arrowOffsetTop:null});var t=b.default.findDOMNode(this),n=(0,T.default)(this.props.container,(0,C.default)(this).body);this.setState((0,w.default)(this.props.placement,t,e,n,this.props.containerPadding))},t}(g.default.Component);k.propTypes={target:p.default.oneOfType([h.default,p.default.func]),container:p.default.oneOfType([h.default,p.default.func]),containerPadding:p.default.number,placement:p.default.oneOf(["top","right","bottom","left"]),shouldUpdatePosition:p.default.bool},k.displayName="Position",k.defaultProps={containerPadding:0,placement:"right",shouldUpdatePosition:!1},t.default=k,e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e){var t=void 0,n=void 0,r=void 0;if("BODY"===e.tagName)t=window.innerWidth,n=window.innerHeight,r=(0,f.default)((0,m.default)(e).documentElement)||(0,f.default)(e);else{var i=(0,c.default)(e);t=i.width,n=i.height,r=(0,f.default)(e)}return{width:t,height:n,scroll:r}}function o(e,t,n,r){var o=i(n),a=o.scroll,s=o.height,l=e-r-a,c=e+r-a+t;return l<0?-l:c>s?s-c:0}function a(e,t,n,r){var o=i(n),a=o.width,s=e-r,l=e+r+t;return s<0?-s:l>a?a-l:0}function s(e,t,n,r,i){var s="BODY"===r.tagName?(0,c.default)(n):(0,d.default)(n,r),l=(0,c.default)(t),u=l.height,p=l.width,f=void 0,h=void 0,m=void 0,g=void 0;if("left"===e||"right"===e){h=s.top+(s.height-u)/2,f="left"===e?s.left-p:s.left+s.width;var y=o(h,u,r,i);h+=y,g=50*(1-2*y/u)+"%",m=void 0}else{if("top"!==e&&"bottom"!==e)throw new Error('calcOverlayPosition(): No such placement of "'+e+'" found.');f=s.left+(s.width-p)/2,h="top"===e?s.top-u:s.top+s.height;var b=a(f,p,r,i);f+=b,m=50*(1-2*b/p)+"%",g=void 0}return{positionLeft:f,positionTop:h,arrowOffsetLeft:m,arrowOffsetTop:g}}t.__esModule=!0,t.default=s;var l=n(134),c=r(l),u=n(386),d=r(u),p=n(135),f=r(p),h=n(36),m=r(h);e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e){return e.nodeName&&e.nodeName.toLowerCase()}function o(e,t){var n,r={top:0,left:0};return"fixed"===(0,g.default)(e,"position")?n=e.getBoundingClientRect():(t=t||(0,u.default)(e),n=(0,l.default)(e),"html"!==i(t)&&(r=(0,l.default)(t)),r.top+=parseInt((0,g.default)(t,"borderTopWidth"),10)-(0,p.default)(t)||0,r.left+=parseInt((0,g.default)(t,"borderLeftWidth"),10)-(0,h.default)(t)||0),a({},n,{top:n.top-r.top-(parseInt((0,g.default)(e,"marginTop"),10)||0),left:n.left-r.left-(parseInt((0,g.default)(e,"marginLeft"),10)||0)})}Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};t.default=o;var s=n(134),l=r(s),c=n(387),u=r(c),d=n(135),p=r(d),f=n(388),h=r(f),m=n(44),g=r(m);e.exports=t.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e){return e.nodeName&&e.nodeName.toLowerCase()}function o(e){for(var t=(0,s.default)(e),n=e&&e.offsetParent;n&&"html"!==i(e)&&"static"===(0,c.default)(n,"position");)n=n.offsetParent;return n||t.documentElement}Object.defineProperty(t,"__esModule",{value:!0}),t.default=o;var a=n(34),s=r(a),l=n(44),c=r(l);e.exports=t.default},function(e,t,n){"use strict";function r(e,t){var n=(0,o.default)(e);if(void 0===t)return n?"pageXOffset"in n?n.pageXOffset:n.document.documentElement.scrollLeft:e.scrollLeft;n?n.scrollTo(t,"pageYOffset"in n?n.pageYOffset:n.document.documentElement.scrollTop):e.scrollLeft=t}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r;var i=n(56),o=function(e){return e&&e.__esModule?e:{default:e}}(i);e.exports=t.default},function(e,t,n){"use strict";function r(e,t){return Array.isArray(t)?t.indexOf(e)>=0:e===t}var i=n(4),o=n(2),a=n(11),s=n(3),l=n(35),c=n.n(l),u=n(0),d=n.n(u),p=n(1),f=n.n(p),h=n(13),m=n.n(h),g=n(15),y=(n.n(g),n(133)),b=n(10),v=f.a.oneOf(["click","hover","focus"]),w=Object(s.a)({},y.a.propTypes,{trigger:f.a.oneOfType([v,f.a.arrayOf(v)]),delay:f.a.number,delayShow:f.a.number,delayHide:f.a.number,defaultOverlayShown:f.a.bool,overlay:f.a.node.isRequired,onBlur:f.a.func,onClick:f.a.func,onFocus:f.a.func,onMouseOut:f.a.func,onMouseOver:f.a.func,target:f.a.oneOf([null]),onHide:f.a.oneOf([null]),show:f.a.oneOf([null])}),x={defaultOverlayShown:!1,trigger:["hover","focus"]},T=function(e){function t(t,n){var r;return r=e.call(this,t,n)||this,r.handleToggle=r.handleToggle.bind(Object(a.a)(r)),r.handleDelayedShow=r.handleDelayedShow.bind(Object(a.a)(r)),r.handleDelayedHide=r.handleDelayedHide.bind(Object(a.a)(r)),r.handleHide=r.handleHide.bind(Object(a.a)(r)),r.handleMouseOver=function(e){return r.handleMouseOverOut(r.handleDelayedShow,e,"fromElement")},r.handleMouseOut=function(e){return r.handleMouseOverOut(r.handleDelayedHide,e,"toElement")},r._mountNode=null,r.state={show:t.defaultOverlayShown},r}Object(o.a)(t,e);var n=t.prototype;return n.componentDidMount=function(){this._mountNode=document.createElement("div"),this.renderOverlay()},n.componentDidUpdate=function(){this.renderOverlay()},n.componentWillUnmount=function(){m.a.unmountComponentAtNode(this._mountNode),this._mountNode=null,clearTimeout(this._hoverShowDelay),clearTimeout(this._hoverHideDelay)},n.handleDelayedHide=function(){var e=this;if(null!=this._hoverShowDelay)return clearTimeout(this._hoverShowDelay),void(this._hoverShowDelay=null);if(this.state.show&&null==this._hoverHideDelay){var t=null!=this.props.delayHide?this.props.delayHide:this.props.delay;if(!t)return void this.hide();this._hoverHideDelay=setTimeout(function(){e._hoverHideDelay=null,e.hide()},t)}},n.handleDelayedShow=function(){var e=this;if(null!=this._hoverHideDelay)return clearTimeout(this._hoverHideDelay),void(this._hoverHideDelay=null);if(!this.state.show&&null==this._hoverShowDelay){var t=null!=this.props.delayShow?this.props.delayShow:this.props.delay;if(!t)return void this.show();this._hoverShowDelay=setTimeout(function(){e._hoverShowDelay=null,e.show()},t)}},n.handleHide=function(){this.hide()},n.handleMouseOverOut=function(e,t,n){var r=t.currentTarget,i=t.relatedTarget||t.nativeEvent[n];i&&i===r||c()(r,i)||e(t)},n.handleToggle=function(){this.state.show?this.hide():this.show()},n.hide=function(){this.setState({show:!1})},n.makeOverlay=function(e,t){return d.a.createElement(y.a,Object(s.a)({},t,{show:this.state.show,onHide:this.handleHide,target:this}),e)},n.show=function(){this.setState({show:!0})},n.renderOverlay=function(){m.a.unstable_renderSubtreeIntoContainer(this,this._overlay,this._mountNode)},n.render=function(){var e=this.props,t=e.trigger,n=e.overlay,o=e.children,a=e.onBlur,s=e.onClick,l=e.onFocus,c=e.onMouseOut,p=e.onMouseOver,f=Object(i.a)(e,["trigger","overlay","children","onBlur","onClick","onFocus","onMouseOut","onMouseOver"]);delete f.delay,delete f.delayShow,delete f.delayHide,delete f.defaultOverlayShown;var h=d.a.Children.only(o),m=h.props,g={};return this.state.show&&(g["aria-describedby"]=n.props.id),g.onClick=Object(b.a)(m.onClick,s),r("click",t)&&(g.onClick=Object(b.a)(g.onClick,this.handleToggle)),r("hover",t)&&(g.onMouseOver=Object(b.a)(m.onMouseOver,p,this.handleMouseOver),g.onMouseOut=Object(b.a)(m.onMouseOut,c,this.handleMouseOut)),r("focus",t)&&(g.onFocus=Object(b.a)(m.onFocus,l,this.handleDelayedShow),g.onBlur=Object(b.a)(m.onBlur,a,this.handleDelayedHide)),this._overlay=this.makeOverlay(n,f),Object(u.cloneElement)(h,g)},t}(d.a.Component);T.propTypes=w,T.defaultProps=x},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(6),d=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.className,n=e.children,o=Object(i.a)(e,["className","children"]),a=Object(u.f)(o),l=a[0],d=a[1],p=Object(u.d)(l);return c.a.createElement("div",Object(r.a)({},d,{className:s()(t,p)}),c.a.createElement("h1",null,n))},t}(c.a.Component);Object(u.a)("page-header",d)},function(e,t,n){"use strict";var r=n(136),i=n(392);i.a.wrapper(r.a,"`<PageItem>`","`<Pager.Item>`")},function(e,t,n){"use strict";function r(e,t,n){var r;"object"===typeof e?r=e.message:(r=e+" is deprecated. Use "+t+" instead.",n&&(r+="\nYou can read more about it at "+n)),a[r]||(a[r]=!0)}var i=n(2),o=n(15),a=(n.n(o),{});r.wrapper=function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),o=1;o<t;o++)n[o-1]=arguments[o];return function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.componentWillMount=function(){if(r.apply(void 0,n),e.prototype.componentWillMount){for(var t,i=arguments.length,o=new Array(i),a=0;a<i;a++)o[a]=arguments[a];(t=e.prototype.componentWillMount).call.apply(t,[this].concat(o))}},t}(e)},t.a=r},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(136),f=n(6),h=n(10),m=n(14),g={onSelect:d.a.func},y=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.onSelect,n=e.className,o=e.children,a=Object(i.a)(e,["onSelect","className","children"]),u=Object(f.f)(a),d=u[0],p=u[1],g=Object(f.d)(d);return c.a.createElement("ul",Object(r.a)({},p,{className:s()(n,g)}),m.a.map(o,function(e){return Object(l.cloneElement)(e,{onSelect:Object(h.a)(e.props.onSelect,t)})}))},t}(c.a.Component);y.propTypes=g,y.Item=p.a;Object(f.a)("pager",y)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(395),d=n(6),p=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.className,n=e.children,o=Object(i.a)(e,["className","children"]),a=Object(d.f)(o),l=a[0],u=a[1],p=Object(d.d)(l);return c.a.createElement("ul",Object(r.a)({},u,{className:s()(t,p)}),n)},t}(c.a.Component);Object(d.a)("pagination",p),p.First=u.b,p.Prev=u.e,p.Ellipsis=u.a,p.Item=u.f,p.Next=u.d,p.Last=u.c},function(e,t,n){"use strict";function r(e){var t=e.active,n=e.disabled,r=e.className,i=e.style,o=e.activeLabel,l=e.children,u=Object(s.a)(e,["active","disabled","className","style","activeLabel","children"]),d=t||n?"span":h.a;return f.a.createElement("li",{style:i,className:c()(r,{active:t,disabled:n})},f.a.createElement(d,Object(a.a)({disabled:n},u),l,t&&f.a.createElement("span",{className:"sr-only"},o)))}function i(e,t,n){var r,i;return void 0===n&&(n=e),i=r=function(e){function r(){return e.apply(this,arguments)||this}return Object(o.a)(r,e),r.prototype.render=function(){var e=this.props,r=e.disabled,i=e.children,o=e.className,l=Object(s.a)(e,["disabled","children","className"]),u=r?"span":h.a;return f.a.createElement("li",Object(a.a)({"aria-label":n,className:c()(o,{disabled:r})},l),f.a.createElement(u,null,i||t))},r}(f.a.Component),r.displayName=e,r.propTypes={disabled:d.a.bool},i}t.f=r,n.d(t,"b",function(){return y}),n.d(t,"e",function(){return b}),n.d(t,"a",function(){return v}),n.d(t,"d",function(){return w}),n.d(t,"c",function(){return x});var o=n(2),a=n(3),s=n(4),l=n(5),c=n.n(l),u=n(1),d=n.n(u),p=n(0),f=n.n(p),h=n(17),m={eventKey:d.a.any,className:d.a.string,onSelect:d.a.func,disabled:d.a.bool,active:d.a.bool,activeLabel:d.a.string.isRequired},g={active:!1,disabled:!1,activeLabel:"(current)"};r.propTypes=m,r.defaultProps=g;var y=i("First","\xab"),b=i("Prev","\u2039"),v=i("Ellipsis","\u2026","More"),w=i("Next","\u203a"),x=i("Last","\xbb")},function(e,t,n){"use strict";var r=n(96),i=n.n(r),o=n(33),a=n.n(o),s=n(3),l=n(11),c=n(2),u=n(5),d=n.n(u),p=n(1),f=n.n(p),h=n(0),m=n.n(h),g=n(27),y=n.n(g),b=n(15),v=(n.n(b),n(6)),w=n(12),x=n(397),T=n(398),S=n(400),C=n(401),k=n(138),O=n(137),E=Object.prototype.hasOwnProperty,P=function(e,t){return e?e+"--"+t:null},j={expanded:f.a.bool,onToggle:f.a.func,eventKey:f.a.any,id:f.a.string},I={$bs_panelGroup:f.a.shape({getId:f.a.func,activeKey:f.a.any,onToggle:f.a.func})},_={$bs_panel:f.a.shape({headingId:f.a.string,bodyId:f.a.string,bsClass:f.a.string,onToggle:f.a.func,expanded:f.a.bool})},R=function(e){function t(){for(var t,n,r=arguments.length,i=new Array(r),o=0;o<r;o++)i[o]=arguments[o];return t=n=e.call.apply(e,[this].concat(i))||this,n.handleToggle=function(e){var t=n.context.$bs_panelGroup,r=!n.getExpanded();t&&t.onToggle?t.onToggle(n.props.eventKey,r,e):n.props.onToggle(r,e)},t||Object(l.a)(n)}Object(c.a)(t,e);var n=t.prototype;return n.getChildContext=function(){var e,t=this.props,n=t.eventKey,r=t.id,i=null==n?r:n;if(null!==i){var o=this.context.$bs_panelGroup,a=o&&o.getId||P;e={headingId:a(i,"heading"),bodyId:a(i,"body")}}return{$bs_panel:Object(s.a)({},e,{bsClass:this.props.bsClass,expanded:this.getExpanded(),onToggle:this.handleToggle})}},n.getExpanded=function(){var e=this.context.$bs_panelGroup;return e&&E.call(e,"activeKey")?e.activeKey===this.props.eventKey:!!this.props.expanded},n.render=function(){var e=this.props,t=e.className,n=e.children,r=Object(v.g)(this.props,["onToggle","eventKey","expanded"]),i=r[0],o=r[1];return m.a.createElement("div",Object(s.a)({},o,{className:d()(t,Object(v.d)(i))}),n)},t}(m.a.Component);R.propTypes=j,R.contextTypes=I,R.childContextTypes=_;var A=y()(Object(v.a)("panel",Object(v.c)(a()(w.d).concat([w.e.DEFAULT,w.e.PRIMARY]),w.e.DEFAULT,R)),{expanded:"onToggle"});i()(A,{Heading:T.a,Title:S.a,Body:x.a,Footer:C.a,Toggle:k.a,Collapse:O.a})},function(e,t,n){"use strict";var r=n(3),i=n(2),o=n(1),a=n.n(o),s=n(0),l=n.n(s),c=n(5),u=n.n(c),d=n(6),p=n(137),f={collapsible:a.a.bool.isRequired},h={collapsible:!1},m={$bs_panel:a.a.shape({bsClass:a.a.string})},g=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.children,n=e.className,i=e.collapsible,o=this.context.$bs_panel||{},a=o.bsClass,s=Object(d.g)(this.props,["collapsible"]),c=s[0],f=s[1];c.bsClass=a||c.bsClass;var h=l.a.createElement("div",Object(r.a)({},f,{className:u()(n,Object(d.e)(c,"body"))}),t);return i&&(h=l.a.createElement(p.a,null,h)),h},t}(l.a.Component);g.propTypes=f,g.defaultProps=h,g.contextTypes=m,t.a=Object(d.a)("panel",g)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(1),s=n.n(a),l=n(0),c=n.n(l),u=n(5),d=n.n(u),p=n(81),f=n.n(p),h=n(6),m={componentClass:f.a},g={componentClass:"div"},y={$bs_panel:s.a.shape({headingId:s.a.string,bsClass:s.a.string})},b=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.children,n=e.className,o=e.componentClass,a=Object(i.a)(e,["children","className","componentClass"]),s=this.context.$bs_panel||{},l=s.headingId,u=s.bsClass,p=Object(h.f)(a),f=p[0],m=p[1];return f.bsClass=u||f.bsClass,l&&(m.role=m.role||"tab",m.id=l),c.a.createElement(o,Object(r.a)({},m,{className:d()(n,Object(h.e)(f,"heading"))}),t)},t}(c.a.Component);b.propTypes=m,b.defaultProps=g,b.contextTypes=y,t.a=Object(h.a)("panel",b)},function(e,t,n){"use strict";function r(e){function t(t,n,r,i,o,a){var s=i||"<<anonymous>>",l=a||r;if(null==n[r])return t?new Error("Required "+o+" `"+l+"` was not specified in `"+s+"`."):null;for(var c=arguments.length,u=Array(c>6?c-6:0),d=6;d<c;d++)u[d-6]=arguments[d];return e.apply(void 0,[n,r,s,o,l].concat(u))}var n=t.bind(null,!1);return n.isRequired=t.bind(null,!0),n}t.__esModule=!0,t.default=r},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(1),c=n.n(l),u=n(0),d=n.n(u),p=n(81),f=n.n(p),h=n(6),m=n(138),g={componentClass:f.a,toggle:c.a.bool},y={$bs_panel:c.a.shape({bsClass:c.a.string})},b={componentClass:"div"},v=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.children,n=e.className,o=e.toggle,a=e.componentClass,l=Object(i.a)(e,["children","className","toggle","componentClass"]),c=this.context.$bs_panel||{},u=c.bsClass,p=Object(h.f)(l),f=p[0],g=p[1];return f.bsClass=u||f.bsClass,o&&(t=d.a.createElement(m.a,null,t)),d.a.createElement(a,Object(r.a)({},g,{className:s()(n,Object(h.e)(f,"title"))}),t)},t}(d.a.Component);v.propTypes=g,v.defaultProps=b,v.contextTypes=y,t.a=Object(h.a)("panel",v)},function(e,t,n){"use strict";var r=n(3),i=n(2),o=n(1),a=n.n(o),s=n(0),l=n.n(s),c=n(5),u=n.n(c),d=n(6),p={$bs_panel:a.a.shape({bsClass:a.a.string})},f=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.children,n=e.className,i=this.context.$bs_panel||{},o=i.bsClass,a=Object(d.f)(this.props),s=a[0],c=a[1];return s.bsClass=o||s.bsClass,l.a.createElement("div",Object(r.a)({},c,{className:u()(n,Object(d.e)(s,"footer"))}),t)},t}(l.a.Component);f.contextTypes=p,t.a=Object(d.a)("panel",f)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(51),f=n.n(p),h=n(6),m={id:f()(d.a.oneOfType([d.a.string,d.a.number])),placement:d.a.oneOf(["top","right","bottom","left"]),positionTop:d.a.oneOfType([d.a.number,d.a.string]),positionLeft:d.a.oneOfType([d.a.number,d.a.string]),arrowOffsetTop:d.a.oneOfType([d.a.number,d.a.string]),arrowOffsetLeft:d.a.oneOfType([d.a.number,d.a.string]),title:d.a.node},g={placement:"right"},y=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e,t=this.props,n=t.placement,o=t.positionTop,a=t.positionLeft,l=t.arrowOffsetTop,u=t.arrowOffsetLeft,d=t.title,p=t.className,f=t.style,m=t.children,g=Object(i.a)(t,["placement","positionTop","positionLeft","arrowOffsetTop","arrowOffsetLeft","title","className","style","children"]),y=Object(h.f)(g),b=y[0],v=y[1],w=Object(r.a)({},Object(h.d)(b),(e={},e[n]=!0,e)),x=Object(r.a)({display:"block",top:o,left:a},f),T={top:l,left:u};return c.a.createElement("div",Object(r.a)({},v,{role:"tooltip",className:s()(p,w),style:x}),c.a.createElement("div",{className:"arrow",style:T}),d&&c.a.createElement("h3",{className:Object(h.e)(b,"title")},d),c.a.createElement("div",{className:Object(h.e)(b,"content")},m))},t}(c.a.Component);y.propTypes=m,y.defaultProps=g;Object(h.a)("popover",y)},function(e,t,n){"use strict";function r(e,t,n){var r=e[t];if(!r)return null;var i=null;return f.a.Children.forEach(r,function(e){if(!i){var t=f.a.createElement(T,null);if(e.type!==t.type){var r=f.a.isValidElement(e)?e.type.displayName||e.type.name||e.type:e;i=new Error("Children of "+n+" can contain only ProgressBar components. Found "+r+".")}}}),i}function i(e,t,n){var r=(e-t)/(n-t)*100;return Math.round(r*v)/v}var o=n(33),a=n.n(o),s=n(3),l=n(4),c=n(2),u=n(5),d=n.n(u),p=n(0),f=n.n(p),h=n(1),m=n.n(h),g=n(6),y=n(12),b=n(14),v=1e3,w={min:m.a.number,now:m.a.number,max:m.a.number,label:m.a.node,srOnly:m.a.bool,striped:m.a.bool,active:m.a.bool,children:r,isChild:m.a.bool},x={min:0,max:100,active:!1,isChild:!1,srOnly:!1,striped:!1},T=function(e){function t(){return e.apply(this,arguments)||this}Object(c.a)(t,e);var n=t.prototype;return n.renderProgressBar=function(e){var t,n=e.min,r=e.now,o=e.max,a=e.label,c=e.srOnly,u=e.striped,p=e.active,h=e.className,m=e.style,y=Object(l.a)(e,["min","now","max","label","srOnly","striped","active","className","style"]),b=Object(g.f)(y),v=b[0],w=b[1],x=Object(s.a)({},Object(g.d)(v),(t={active:p},t[Object(g.e)(v,"striped")]=p||u,t));return f.a.createElement("div",Object(s.a)({},w,{role:"progressbar",className:d()(h,x),style:Object(s.a)({width:i(r,n,o)+"%"},m),"aria-valuenow":r,"aria-valuemin":n,"aria-valuemax":o}),c?f.a.createElement("span",{className:"sr-only"},a):a)},n.render=function(){var e=this.props,t=e.isChild,n=Object(l.a)(e,["isChild"]);if(t)return this.renderProgressBar(n);var r=n.min,i=n.now,o=n.max,a=n.label,c=n.srOnly,u=n.striped,h=n.active,m=n.bsClass,g=n.bsStyle,y=n.className,v=n.children,w=Object(l.a)(n,["min","now","max","label","srOnly","striped","active","bsClass","bsStyle","className","children"]);return f.a.createElement("div",Object(s.a)({},w,{className:d()(y,"progress")}),v?b.a.map(v,function(e){return Object(p.cloneElement)(e,{isChild:!0})}):this.renderProgressBar({min:r,now:i,max:o,label:a,srOnly:c,striped:u,active:h,bsClass:m,bsStyle:g}))},t}(f.a.Component);T.propTypes=w,T.defaultProps=x;Object(g.a)("progress-bar",Object(g.c)(a()(y.d),T))},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(15),f=(n.n(p),n(6)),h={inline:d.a.bool,disabled:d.a.bool,title:d.a.string,validationState:d.a.oneOf(["success","warning","error",null]),inputRef:d.a.func},m={inline:!1,disabled:!1,title:""},g=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.inline,n=e.disabled,o=e.validationState,a=e.inputRef,l=e.className,u=e.style,d=e.title,p=e.children,h=Object(i.a)(e,["inline","disabled","validationState","inputRef","className","style","title","children"]),m=Object(f.f)(h),g=m[0],y=m[1],b=c.a.createElement("input",Object(r.a)({},y,{ref:a,type:"radio",disabled:n}));if(t){var v,w=(v={},v[Object(f.e)(g,"inline")]=!0,v.disabled=n,v);return c.a.createElement("label",{className:s()(l,w),style:u,title:d},b,p)}var x=Object(r.a)({},Object(f.d)(g),{disabled:n});return o&&(x["has-"+o]=!0),c.a.createElement("div",{className:s()(l,x),style:u},c.a.createElement("label",{title:d},b,p))},t}(c.a.Component);g.propTypes=h,g.defaultProps=m;Object(f.a)("radio",g)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(15),f=(n.n(p),n(6)),h={children:d.a.element.isRequired,a16by9:d.a.bool,a4by3:d.a.bool},m={a16by9:!1,a4by3:!1},g=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e,t=this.props,n=t.a16by9,o=t.a4by3,a=t.className,u=t.children,d=Object(i.a)(t,["a16by9","a4by3","className","children"]),p=Object(f.f)(d),h=p[0],m=p[1],g=Object(r.a)({},Object(f.d)(h),(e={},e[Object(f.e)(h,"16by9")]=n,e[Object(f.e)(h,"4by3")]=o,e));return c.a.createElement("div",{className:s()(g)},Object(l.cloneElement)(u,Object(r.a)({},m,{className:s()(a,Object(f.e)(h,"item"))})))},t}(c.a.Component);g.propTypes=h,g.defaultProps=m;Object(f.a)("embed-responsive",g)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(9),d=n.n(u),p=n(6),f={componentClass:d.a},h={componentClass:"div"},m=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.componentClass,n=e.className,o=Object(i.a)(e,["componentClass","className"]),a=Object(p.f)(o),l=a[0],u=a[1],d=Object(p.d)(l);return c.a.createElement(t,Object(r.a)({},u,{className:s()(n,d)}))},t}(c.a.Component);m.propTypes=f,m.defaultProps=h;Object(p.a)("row",m)},function(e,t,n){"use strict";var r=n(4),i=n(2),o=n(3),a=n(0),s=n.n(a),l=n(1),c=n.n(l),u=n(43),d=n(50),p=n(408),f=n(52),h=Object(o.a)({},d.a.propTypes,{bsStyle:c.a.string,bsSize:c.a.string,href:c.a.string,onClick:c.a.func,title:c.a.node.isRequired,toggleLabel:c.a.string,children:c.a.node}),m=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.bsSize,n=e.bsStyle,i=e.title,a=e.toggleLabel,l=e.children,c=Object(r.a)(e,["bsSize","bsStyle","title","toggleLabel","children"]),h=Object(f.a)(c,d.a.ControlledComponent),m=h[0],g=h[1];return s.a.createElement(d.a,Object(o.a)({},m,{bsSize:t,bsStyle:n}),s.a.createElement(u.a,Object(o.a)({},g,{disabled:c.disabled,bsSize:t,bsStyle:n}),i),s.a.createElement(p.a,{"aria-label":a||i,bsSize:t,bsStyle:n}),s.a.createElement(d.a.Menu,null,l))},t}(s.a.Component);m.propTypes=h,m.Toggle=p.a},function(e,t,n){"use strict";var r=n(3),i=n(2),o=n(0),a=n.n(o),s=n(118),l=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){return a.a.createElement(s.a,Object(r.a)({},this.props,{useAnchor:!1,noCaret:!1}))},t}(a.a.Component);l.defaultProps=s.a.defaultProps,t.a=l},function(e,t,n){"use strict";var r=n(2),i=n(3),o=n(0),a=n.n(o),s=n(1),l=n.n(s),c=n(82),u=n(83),d=n(139),p=Object(i.a)({},d.a.propTypes,{disabled:l.a.bool,title:l.a.node,tabClassName:l.a.string}),f=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t.prototype.render=function(){var e=Object(i.a)({},this.props);return delete e.title,delete e.disabled,delete e.tabClassName,a.a.createElement(d.a,e)},t}(a.a.Component);f.propTypes=p,f.Container=c.a,f.Content=u.a,f.Pane=d.a},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(6),f={striped:d.a.bool,bordered:d.a.bool,condensed:d.a.bool,hover:d.a.bool,responsive:d.a.bool},h={bordered:!1,condensed:!1,hover:!1,responsive:!1,striped:!1},m=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e,t=this.props,n=t.striped,o=t.bordered,a=t.condensed,l=t.hover,u=t.responsive,d=t.className,f=Object(i.a)(t,["striped","bordered","condensed","hover","responsive","className"]),h=Object(p.f)(f),m=h[0],g=h[1],y=Object(r.a)({},Object(p.d)(m),(e={},e[Object(p.e)(m,"striped")]=n,e[Object(p.e)(m,"bordered")]=o,e[Object(p.e)(m,"condensed")]=a,e[Object(p.e)(m,"hover")]=l,e)),b=c.a.createElement("table",Object(r.a)({},g,{className:s()(d,y)}));return u?c.a.createElement("div",{className:Object(p.e)(m,"responsive")},b):b},t}(c.a.Component);m.propTypes=f,m.defaultProps=h;Object(p.a)("table",m)},function(e,t,n){"use strict";function r(e){var t;return T.a.forEach(e,function(e){null==t&&(t=e.props.eventKey)}),t}var i=n(3),o=n(4),a=n(2),s=n(0),l=n.n(s),c=n(1),u=n.n(c),d=n(51),p=n.n(d),f=n(27),h=n.n(f),m=n(9),g=n.n(m),y=n(130),b=n(132),v=n(82),w=n(83),x=n(6),T=n(14),S=v.a.ControlledComponent,C={activeKey:u.a.any,bsStyle:u.a.oneOf(["tabs","pills"]),animation:u.a.oneOfType([u.a.bool,g.a]),id:p()(u.a.oneOfType([u.a.string,u.a.number])),onSelect:u.a.func,mountOnEnter:u.a.bool,unmountOnExit:u.a.bool},k={bsStyle:"tabs",animation:!0,mountOnEnter:!1,unmountOnExit:!1},O=function(e){function t(){return e.apply(this,arguments)||this}Object(a.a)(t,e);var n=t.prototype;return n.renderTab=function(e){var t=e.props,n=t.title,r=t.eventKey,i=t.disabled,o=t.tabClassName;return null==n?null:l.a.createElement(b.a,{eventKey:r,disabled:i,className:o},n)},n.render=function(){var e=this.props,t=e.id,n=e.onSelect,a=e.animation,s=e.mountOnEnter,c=e.unmountOnExit,u=e.bsClass,d=e.className,p=e.style,f=e.children,h=e.activeKey,m=void 0===h?r(f):h,g=Object(o.a)(e,["id","onSelect","animation","mountOnEnter","unmountOnExit","bsClass","className","style","children","activeKey"]);return l.a.createElement(S,{id:t,activeKey:m,onSelect:n,className:d,style:p},l.a.createElement("div",null,l.a.createElement(y.a,Object(i.a)({},g,{role:"tablist"}),T.a.map(f,this.renderTab)),l.a.createElement(w.a,{bsClass:u,animation:a,mountOnEnter:s,unmountOnExit:c},f)))},t}(l.a.Component);O.propTypes=C,O.defaultProps=k,Object(x.a)("tab",O);h()(O,{activeKey:"onSelect"})},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(17),f=n(6),h={src:d.a.string,alt:d.a.string,href:d.a.string,onError:d.a.func,onLoad:d.a.func},m=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.src,n=e.alt,o=e.onError,a=e.onLoad,l=e.className,u=e.children,d=Object(i.a)(e,["src","alt","onError","onLoad","className","children"]),h=Object(f.f)(d),m=h[0],g=h[1],y=g.href?p.a:"div",b=Object(f.d)(m);return c.a.createElement(y,Object(r.a)({},g,{className:s()(l,b)}),c.a.createElement("img",{src:t,alt:n,onError:o,onLoad:a}),u&&c.a.createElement("div",{className:"caption"},u))},t}(c.a.Component);m.propTypes=h;Object(f.a)("thumbnail",m)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(1),s=n.n(a),l=n(0),c=n.n(l),u=n(28),d=n.n(u),p=n(27),f=n.n(p),h=n(10),m=n(14),g=n(73),y=n(140),b={name:s.a.string,value:s.a.any,onChange:s.a.func,type:s.a.oneOf(["checkbox","radio"]).isRequired},v={type:"radio"},w=function(e){function t(){return e.apply(this,arguments)||this}Object(o.a)(t,e);var n=t.prototype;return n.getValues=function(){var e=this.props.value;return null==e?[]:[].concat(e)},n.handleToggle=function(e){var t=this.props,n=t.type,r=t.onChange,i=this.getValues(),o=-1!==i.indexOf(e);if("radio"===n)return void(o||r(e));r(o?i.filter(function(t){return t!==e}):i.concat([e]))},n.render=function(){var e=this,t=this.props,n=t.children,o=t.type,a=t.name,s=Object(i.a)(t,["children","type","name"]),l=this.getValues();return"radio"!==o||a||d()(!1),delete s.onChange,delete s.value,c.a.createElement(g.a,Object(r.a)({},s,{"data-toggle":"buttons"}),m.a.map(n,function(t){var n=t.props,r=n.value,i=n.onChange,s=function(){return e.handleToggle(r)};return c.a.cloneElement(t,{type:o,name:t.name||a,checked:-1!==l.indexOf(r),onChange:Object(h.a)(i,s)})}))},t}(c.a.Component);w.propTypes=b,w.defaultProps=v;var x=f()(w,{value:"onChange"});x.Button=y.a},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(1),d=n.n(u),p=n(51),f=n.n(p),h=n(6),m={id:f()(d.a.oneOfType([d.a.string,d.a.number])),placement:d.a.oneOf(["top","right","bottom","left"]),positionTop:d.a.oneOfType([d.a.number,d.a.string]),positionLeft:d.a.oneOfType([d.a.number,d.a.string]),arrowOffsetTop:d.a.oneOfType([d.a.number,d.a.string]),arrowOffsetLeft:d.a.oneOfType([d.a.number,d.a.string])},g={placement:"right"},y=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e,t=this.props,n=t.placement,o=t.positionTop,a=t.positionLeft,l=t.arrowOffsetTop,u=t.arrowOffsetLeft,d=t.className,p=t.style,f=t.children,m=Object(i.a)(t,["placement","positionTop","positionLeft","arrowOffsetTop","arrowOffsetLeft","className","style","children"]),g=Object(h.f)(m),y=g[0],b=g[1],v=Object(r.a)({},Object(h.d)(y),(e={},e[n]=!0,e)),w=Object(r.a)({top:o,left:a},p),x={top:l,left:u};return c.a.createElement("div",Object(r.a)({},b,{role:"tooltip",className:s()(d,v),style:w}),c.a.createElement("div",{className:Object(h.e)(y,"arrow"),style:x}),c.a.createElement("div",{className:Object(h.e)(y,"inner")},f))},t}(c.a.Component);y.propTypes=m,y.defaultProps=g;Object(h.a)("tooltip",y)},function(e,t,n){"use strict";var r=n(3),i=n(4),o=n(2),a=n(5),s=n.n(a),l=n(0),c=n.n(l),u=n(6),d=n(12),p=function(e){function t(){return e.apply(this,arguments)||this}return Object(o.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.className,n=Object(i.a)(e,["className"]),o=Object(u.f)(n),a=o[0],l=o[1],d=Object(u.d)(a);return c.a.createElement("div",Object(r.a)({},l,{className:s()(t,d)}))},t}(c.a.Component);Object(u.a)("well",Object(u.b)([d.c.LARGE,d.c.SMALL],p))},function(e,t,n){"use strict";n(6),n(10),n(14)},function(e,t,n){e.exports=n.p+"static/media/fatesreprisescreen1.2a01e55e.png"},function(e,t,n){e.exports=n.p+"static/media/fatesreprisescreen2.9b0264af.png"},function(e,t,n){e.exports=n.p+"static/media/fatesreprisescreen3.bbcf57bd.png"},function(e,t,n){e.exports=n.p+"static/media/fatesreprisescreen4.142f5100.png"},function(e,t,n){e.exports=n.p+"static/media/fatesreprisescreen5.4e86bd15.png"},function(e,t,n){e.exports=n.p+"static/media/fatesreprisescreen6.6e9596f7.png"},function(e,t,n){e.exports=n.p+"static/media/fatesreprisescreen7.6797760c.png"},function(e,t,n){e.exports=n.p+"static/media/fatesreprisescreen8.08897bd7.png"},function(e,t,n){e.exports=n.p+"static/media/fatesreprisescreen9.80be7ae0.png"},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(19),c=n(427),u=n.n(c),d=n(428),p=n.n(d),f=n(429),h=n.n(f),m=n(430),g=n.n(m),y=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),b=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),y(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("hr",{id:"screenshots"}),s.a.createElement("h2",null,"Screenshots"),s.a.createElement("div",{className:"row"},s.a.createElement(l.a,{sm:3},s.a.createElement(l.c,{src:u.a,alt:"Map Blue Screenshot One",responsive:!0})),s.a.createElement(l.a,{sm:3},s.a.createElement(l.c,{src:p.a,alt:"Map Blue Screenshot Two",responsive:!0})),s.a.createElement(l.a,{sm:3},s.a.createElement(l.c,{src:h.a,alt:"Map Blue Screenshot Three",responsive:!0})),s.a.createElement(l.a,{sm:3},s.a.createElement(l.c,{src:g.a,alt:"Map Blue Screenshot Four",responsive:!0}))))}}]),t}(s.a.Component);t.a=b},function(e,t,n){e.exports=n.p+"static/media/mapbluescreen1.d67b56c3.png"},function(e,t,n){e.exports=n.p+"static/media/mapbluescreen2.30f6201d.png"},function(e,t,n){e.exports=n.p+"static/media/mapbluescreen3.a09435e5.png"},function(e,t,n){e.exports=n.p+"static/media/mapbluescreen4.e1addc6d.png"},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(432),c=n.n(l),u=n(433),d=n.n(u),p=n(434),f=n.n(p),h=n(435),m=n.n(h),g=n(436),y=n.n(g),b=n(437),v=n.n(b),w=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),x=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),w(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("hr",{id:"screenshots"}),s.a.createElement("h2",null,"Screenshots"),s.a.createElement("div",{className:"row"},s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:c.a,className:"img-thumbnail",alt:"Dark and Light Screenshot One"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:d.a,className:"img-thumbnail",alt:"Dark and Light Screenshot Two"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:f.a,className:"img-thumbnail",alt:"Dark and Light Screenshot Three"}))),s.a.createElement("div",{className:"row"},s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:m.a,className:"img-thumbnail",alt:"Dark and Light Screenshot Four"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:y.a,className:"img-thumbnail",alt:"Dark and Light Screenshot Five"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:v.a,className:"img-thumbnail",alt:"Dark and Light Screenshot Six"}))))}}]),t}(s.a.Component);t.a=x},function(e,t,n){e.exports=n.p+"static/media/darkandlightscreen1.932f8047.png"},function(e,t,n){e.exports=n.p+"static/media/darkandlightscreen2.e684b57a.png"},function(e,t,n){e.exports=n.p+"static/media/darkandlightscreen3.a610808d.png"},function(e,t,n){e.exports=n.p+"static/media/darkandlightscreen4.faeed855.png"},function(e,t,n){e.exports=n.p+"static/media/darkandlightscreen5.9844f973.png"},function(e,t,n){e.exports=n.p+"static/media/darkandlightscreen6.eaa94a4a.png"},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(439),c=n.n(l),u=n(440),d=n.n(u),p=n(441),f=n.n(p),h=n(442),m=n.n(h),g=n(443),y=n.n(g),b=n(444),v=n.n(b),w=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),x=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),w(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("hr",{id:"screenshots"}),s.a.createElement("h2",null,"Screenshots"),s.a.createElement("div",{className:"row"},s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:c.a,className:"img-thumbnail",alt:"Memori Screenshot One"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:d.a,className:"img-thumbnail",alt:"Memori Screenshot Two"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:f.a,className:"img-thumbnail",alt:"Memori Screenshot Three"}))),s.a.createElement("div",{className:"row"},s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:m.a,className:"img-thumbnail",alt:"Memori Screenshot Four"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:y.a,className:"img-thumbnail",alt:"Memori Screenshot Five"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:v.a,className:"img-thumbnail",alt:"Memori Screenshot Six"}))))}}]),t}(s.a.Component);t.a=x},function(e,t,n){e.exports=n.p+"static/media/memoriscreen1.15ef2682.png"},function(e,t,n){e.exports=n.p+"static/media/memoriscreen2.99c046c9.png"},function(e,t,n){e.exports=n.p+"static/media/memoriscreen3.a5ae37d1.png"},function(e,t,n){e.exports=n.p+"static/media/memoriscreen4.ca3b9b94.png"},function(e,t,n){e.exports=n.p+"static/media/memoriscreen5.9dc5a8b9.png"},function(e,t,n){e.exports=n.p+"static/media/memoriscreen6.3bee5713.png"},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(446),c=n.n(l),u=n(447),d=n.n(u),p=n(448),f=n.n(p),h=n(449),m=n.n(h),g=n(450),y=n.n(g),b=n(451),v=n.n(b),w=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),x=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),w(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("hr",{id:"screenshots"}),s.a.createElement("h2",null,"Screenshots"),s.a.createElement("div",{className:"row"},s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:c.a,className:"img-thumbnail",alt:"Pixel Knight Screenshot One"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:d.a,className:"img-thumbnail",alt:"Pixel Knight Screenshot Two"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:f.a,className:"img-thumbnail",alt:"Pixel Knight Screenshot Three"}))),s.a.createElement("div",{className:"row"},s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:m.a,className:"img-thumbnail",alt:"Pixel Knight Screenshot Four"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:y.a,className:"img-thumbnail",alt:"Pixel Knight Screenshot Five"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:v.a,className:"img-thumbnail",alt:"Pixel Knight Screenshot Six"}))))}}]),t}(s.a.Component);t.a=x},function(e,t,n){e.exports=n.p+"static/media/pixelknightscreen1.c82beee3.png"},function(e,t,n){e.exports=n.p+"static/media/pixelknightscreen2.b0b4ceb4.png"},function(e,t,n){e.exports=n.p+"static/media/pixelknightscreen3.b8ca8cc3.png"},function(e,t,n){e.exports=n.p+"static/media/pixelknightscreen4.ae62633b.png"},function(e,t,n){e.exports=n.p+"static/media/pixelknightscreen5.12f7a7e0.png"},function(e,t,n){e.exports=n.p+"static/media/pixelknightscreen6.8490c0ca.png"},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(453),c=n.n(l),u=n(454),d=n.n(u),p=n(455),f=n.n(p),h=n(456),m=n.n(h),g=n(457),y=n.n(g),b=n(458),v=n.n(b),w=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),x=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),w(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("hr",{id:"screenshots"}),s.a.createElement("h2",null,"Screenshots"),s.a.createElement("div",{className:"row"},s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:c.a,className:"img-thumbnail",alt:"Color Synthesizer Screenshot One"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:d.a,className:"img-thumbnail",alt:"Color Synthesizer Screenshot Two"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:f.a,className:"img-thumbnail",alt:"Color Synthesizer Screenshot Three"}))),s.a.createElement("div",{className:"row"},s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:m.a,className:"img-thumbnail",alt:"Color Synthesizer Screenshot Four"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:y.a,className:"img-thumbnail",alt:"Color Synthesizer Screenshot Five"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:v.a,className:"img-thumbnail",alt:"Color Synthesizer Screenshot Six"}))))}}]),t}(s.a.Component);t.a=x},function(e,t,n){e.exports=n.p+"static/media/colorsynthesizerscreen1.412e6b79.png"},function(e,t,n){e.exports=n.p+"static/media/colorsynthesizerscreen2.1b987334.png"},function(e,t,n){e.exports=n.p+"static/media/colorsynthesizerscreen3.e88a7edd.png"},function(e,t,n){e.exports=n.p+"static/media/colorsynthesizerscreen4.0e35da99.png"},function(e,t,n){e.exports=n.p+"static/media/colorsynthesizerscreen5.0ece056b.png"},function(e,t,n){e.exports=n.p+"static/media/colorsynthesizerscreen6.eecc2740.png"},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(460),c=n.n(l),u=n(461),d=n.n(u),p=n(462),f=n.n(p),h=n(463),m=n.n(h),g=n(464),y=n.n(g),b=n(465),v=n.n(b),w=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),x=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),w(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("hr",{id:"screenshots"}),s.a.createElement("h2",null,"Screenshots"),s.a.createElement("div",{className:"row"},s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:c.a,className:"img-thumbnail",alt:"Document Encryptor Screenshot One"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:d.a,className:"img-thumbnail",alt:"Document Encryptor Screenshot Two"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:f.a,className:"img-thumbnail",alt:"Document Encryptor Screenshot Three"}))),s.a.createElement("div",{className:"row"},s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:m.a,className:"img-thumbnail",alt:"Document Encryptor Screenshot Four"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:y.a,className:"img-thumbnail",alt:"Document Encryptor Screenshot Five"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:v.a,className:"img-thumbnail",alt:"Document Encryptor Screenshot Six"}))))}}]),t}(s.a.Component);t.a=x},function(e,t,n){e.exports=n.p+"static/media/documentencryptorscreen1.486d5a5d.png"},function(e,t,n){e.exports=n.p+"static/media/documentencryptorscreen2.baf77a4c.png"},function(e,t,n){e.exports=n.p+"static/media/documentencryptorscreen3.e37c2057.png"},function(e,t,n){e.exports=n.p+"static/media/documentencryptorscreen4.0b37d53f.png"},function(e,t,n){e.exports=n.p+"static/media/documentencryptorscreen5.ff8e08e1.png"},function(e,t,n){e.exports=n.p+"static/media/documentencryptorscreen6.8e4daca3.png"},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(467),c=n.n(l),u=n(468),d=n.n(u),p=n(469),f=n.n(p),h=n(470),m=n.n(h),g=n(471),y=n.n(g),b=n(472),v=n.n(b),w=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),x=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),w(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("hr",{id:"screenshots"}),s.a.createElement("h2",null,"Screenshots"),s.a.createElement("div",{className:"row"},s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:c.a,className:"img-thumbnail",alt:"File Encryptor Screenshot One"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:d.a,className:"img-thumbnail",alt:"File Encryptor Screenshot Two"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:f.a,className:"img-thumbnail",alt:"File Encryptor Screenshot Three"}))),s.a.createElement("div",{className:"row"},s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:m.a,className:"img-thumbnail",alt:"File Encryptor Screenshot Four"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:y.a,className:"img-thumbnail",alt:"File Encryptor Screenshot Five"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:v.a,className:"img-thumbnail",alt:"File Encryptor Screenshot Six"}))))}}]),t}(s.a.Component);t.a=x},function(e,t,n){e.exports=n.p+"static/media/fileencryptorscreen1.a511250a.png"},function(e,t,n){e.exports=n.p+"static/media/fileencryptorscreen2.5635b52b.png"},function(e,t,n){e.exports=n.p+"static/media/fileencryptorscreen3.e2fccf2d.png"},function(e,t,n){e.exports=n.p+"static/media/fileencryptorscreen4.905afebd.png"},function(e,t,n){e.exports=n.p+"static/media/fileencryptorscreen5.cc4999e1.png"},function(e,t,n){e.exports=n.p+"static/media/fileencryptorscreen6.0d370974.png"},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(474),c=n.n(l),u=n(475),d=n.n(u),p=n(476),f=n.n(p),h=n(477),m=n.n(h),g=n(478),y=n.n(g),b=n(479),v=n.n(b),w=n(480),x=n.n(w),T=n(481),S=n.n(T),C=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),k=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),C(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("hr",{id:"screenshots"}),s.a.createElement("h2",null,"Screenshots"),s.a.createElement("div",{className:"row"},s.a.createElement("div",{className:"col-sm-3"},s.a.createElement("img",{src:c.a,className:"img-thumbnail",alt:"File Encryptor Screenshot One"})),s.a.createElement("div",{className:"col-sm-3"},s.a.createElement("img",{src:d.a,className:"img-thumbnail",alt:"File Encryptor Screenshot Two"})),s.a.createElement("div",{className:"col-sm-3"},s.a.createElement("img",{src:f.a,className:"img-thumbnail",alt:"File Encryptor Screenshot Three"})),s.a.createElement("div",{className:"col-sm-3"},s.a.createElement("img",{src:m.a,className:"img-thumbnail",alt:"File Encryptor Screenshot Three"}))),s.a.createElement("div",{className:"row"},s.a.createElement("div",{className:"col-sm-3"},s.a.createElement("img",{src:y.a,className:"img-thumbnail",alt:"File Encryptor Screenshot Four"})),s.a.createElement("div",{className:"col-sm-3"},s.a.createElement("img",{src:v.a,className:"img-thumbnail",alt:"File Encryptor Screenshot Five"})),s.a.createElement("div",{className:"col-sm-3"},s.a.createElement("img",{src:x.a,className:"img-thumbnail",alt:"File Encryptor Screenshot Six"})),s.a.createElement("div",{className:"col-sm-3"},s.a.createElement("img",{src:S.a,className:"img-thumbnail",alt:"File Encryptor Screenshot Six"}))))}}]),t}(s.a.Component);t.a=k},function(e,t,n){e.exports=n.p+"static/media/trafficdirectorscreen1.1c17d1d6.png"},function(e,t,n){e.exports=n.p+"static/media/trafficdirectorscreen2.83871f32.png"},function(e,t,n){e.exports=n.p+"static/media/trafficdirectorscreen3.99a6b7ac.png"},function(e,t,n){e.exports=n.p+"static/media/trafficdirectorscreen4.54ac3f87.png"},function(e,t,n){e.exports=n.p+"static/media/trafficdirectorscreen5.d7868714.png"},function(e,t,n){e.exports=n.p+"static/media/trafficdirectorscreen6.0548f336.png"},function(e,t,n){e.exports=n.p+"static/media/trafficdirectorscreen7.9e603f6c.png"},function(e,t,n){e.exports=n.p+"static/media/trafficdirectorscreen8.3ef87dfd.png"},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(483),c=n.n(l),u=n(484),d=n.n(u),p=n(485),f=n.n(p),h=n(486),m=n.n(h),g=n(487),y=n.n(g),b=n(488),v=n.n(b),w=n(489),x=n.n(w),T=n(490),S=n.n(T),C=n(491),k=n.n(C),O=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),E=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),O(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("hr",{id:"screenshots"}),s.a.createElement("h2",null,"Screenshots"),s.a.createElement("div",{className:"row"},s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:c.a,className:"img-thumbnail",alt:"Space Shooter screenshot One"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:d.a,className:"img-thumbnail",alt:"Space Shooter screenshot Two"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:f.a,className:"img-thumbnail",alt:"Space Shooter screenshot Three"}))),s.a.createElement("div",{className:"row"},s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:m.a,className:"img-thumbnail",alt:"Space Shooter screenshot Four"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:y.a,className:"img-thumbnail",alt:"Space Shooter screenshot Five"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:v.a,className:"img-thumbnail",alt:"Space Shooter screenshot Six"}))),s.a.createElement("div",{className:"row"},s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:x.a,className:"img-thumbnail",alt:"Space Shooter screenshot Seven"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:S.a,className:"img-thumbnail",alt:"Space Shooter screenshot Eight"})),s.a.createElement("div",{className:"col-sm-4"},s.a.createElement("img",{src:k.a,className:"img-thumbnail",alt:"Space Shooter screenshot Nine"}))))}}]),t}(s.a.Component);t.a=E},function(e,t,n){e.exports=n.p+"static/media/spaceshooterscreen1.b5d4483a.png"},function(e,t,n){e.exports=n.p+"static/media/spaceshooterscreen2.14a72bdd.png"},function(e,t,n){e.exports=n.p+"static/media/spaceshooterscreen3.495a1f8e.png"},function(e,t,n){e.exports=n.p+"static/media/spaceshooterscreen4.756b844a.png"},function(e,t,n){e.exports=n.p+"static/media/spaceshooterscreen5.7be64661.png"},function(e,t,n){e.exports=n.p+"static/media/spaceshooterscreen6.463a82bc.png"},function(e,t,n){e.exports=n.p+"static/media/spaceshooterscreen7.c964a330.png"},function(e,t,n){e.exports=n.p+"static/media/spaceshooterscreen8.093f1a40.png"},function(e,t,n){e.exports=n.p+"static/media/spaceshooterscreen9.d15ad841.png"},function(e,t,n){"use strict";function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,"a",function(){return p});var i,o=n(0),a=n.n(o),s=n(23),l=n(493),c=n(495),u=n(497),d=n(499),p=(i={},r(i,s.f,null),r(i,s.e,a.a.createElement(l.a,null)),r(i,s.g,a.a.createElement(c.a,null)),r(i,s.b,null),r(i,s.h,a.a.createElement(u.a,null)),r(i,s.j,a.a.createElement(d.a,null)),r(i,s.a,null),r(i,s.c,null),r(i,s.d,null),r(i,s.l,null),r(i,s.k,null),i)},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(494),c=n.n(l),u=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),d=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),u(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("hr",{id:"video"}),s.a.createElement("h2",null,"Video Preview"),s.a.createElement("video",{width:"640",height:"380",preload:"none",controls:!0},s.a.createElement("source",{src:c.a}),"Your browser is unable to play this video."))}}]),t}(s.a.Component);t.a=d},function(e,t,n){e.exports=n.p+"static/media/FatesReprise.31f225db.mp4"},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(496),c=n.n(l),u=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),d=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),u(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("hr",{id:"video"}),s.a.createElement("h2",null,"Video Preview"),s.a.createElement("video",{width:"960",height:"540",preload:"none",controls:!0},s.a.createElement("source",{src:c.a}),"Your browser is unable to play this video."))}}]),t}(s.a.Component);t.a=d},function(e,t,n){e.exports=n.p+"static/media/MapBlue.88bc17d2.mp4"},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(498),c=n.n(l),u=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),d=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),u(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("hr",{id:"video"}),s.a.createElement("h2",null,"Video Preview"),s.a.createElement("video",{width:"600",height:"400",preload:"none",controls:!0},s.a.createElement("source",{src:c.a}),"Your browser is unable to play this video."))}}]),t}(s.a.Component);t.a=d},function(e,t,n){e.exports=n.p+"static/media/Memori.03d02203.mp4"},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(500),c=n.n(l),u=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),d=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),u(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("hr",{id:"video"}),s.a.createElement("h2",null,"Video Preview"),s.a.createElement("video",{width:"640",height:"380",preload:"none",controls:!0},s.a.createElement("source",{src:c.a}),"Your browser is unable to play this video."))}}]),t}(s.a.Component);t.a=d},function(e,t,n){e.exports=n.p+"static/media/PixelKnight.6ccab9e2.mp4"},function(e,t,n){"use strict";var r=n(0),i=n.n(r),o=n(502),a=n(533),s=function(){return i.a.createElement("div",{id:"App",className:"container-fluid"},i.a.createElement(a.a,null),i.a.createElement(o.a,null))};t.a=s},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(1),c=n.n(l),u=n(22),d=n.n(u),p=n(19),f=n(521),h=n(524),m=n(525),g=n(526),y=n(527),b=n(529),v=n(530),w=n(532),x=(n.n(w),n(58)),T=n(94),S=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),C=function(e){function t(e){r(this,t);var n=i(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.scrollToRef=function(e){switch(e){case T.h:n.summaryRef.current.scrollIntoView({block:"end",behavior:"smooth"});break;case T.e:var t=n.screenshotRef.current.offsetTop-50;window.scroll({top:t,behavior:"smooth"});break;case T.j:var r=n.videoRef.current.offsetTop-50;window.scroll({top:r,behavior:"smooth"});break;case T.b:var i=n.sourceCodeRef.current.offsetTop-50;window.scroll({top:i,behavior:"smooth"});break;case T.c:var o=n.linkRef.current.offsetTop+50;window.scroll({top:o,behavior:"smooth"})}},n.summaryRef=s.a.createRef(),n.screenshotRef=s.a.createRef(),n.videoRef=s.a.createRef(),n.sourceCodeRef=s.a.createRef(),n.linkRef=s.a.createRef(),n}return o(t,e),S(t,[{key:"isTop",value:function(e){return e.getBoundingClientRect().top<60}},{key:"trackScrolling",value:function(){return this.linkRef.current.getBoundingClientRect().bottom<=window.innerHeight?void this.props.changeSidebarActive(T.c):this.isTop(this.sourceCodeRef.current)?void this.props.changeSidebarActive(T.b):this.props.currentSidebarConfig===T.k&&this.isTop(this.videoRef.current)?void this.props.changeSidebarActive(T.j):this.props.currentSidebarConfig!==T.i&&this.props.currentSidebarConfig!==T.k||!this.isTop(this.screenshotRef.current)?void(this.isTop(this.summaryRef.current)&&this.props.changeSidebarActive(T.h)):void this.props.changeSidebarActive(T.e)}},{key:"componentDidMount",value:function(){document.addEventListener("scroll",this.trackScrolling.bind(this))}},{key:"componentDidUpdate",value:function(){document.addEventListener("scroll",this.trackScrolling.bind(this))}},{key:"componentWillUpdate",value:function(){document.removeEventListener("scroll",this.trackScrolling.bind(this))}},{key:"render",value:function(){return s.a.createElement("div",{className:"row"},s.a.createElement(f.a,{scrollToComponent:this.scrollToRef.bind(this)}),s.a.createElement(p.a,{md:11,mdPush:1,className:"body-container"},s.a.createElement("div",{ref:this.summaryRef},s.a.createElement(h.a,null)),s.a.createElement("div",{ref:this.screenshotRef},s.a.createElement(m.a,{ref:this.screenshotRef})),s.a.createElement("div",{ref:this.videoRef},s.a.createElement(g.a,{ref:this.videoRef})),s.a.createElement("div",{ref:this.sourceCodeRef},s.a.createElement(y.a,{ref:this.sourceCodeRef})),s.a.createElement("div",{ref:this.linkRef},s.a.createElement(b.a,{ref:this.linkRef})),s.a.createElement(v.a,null)))}}]),t}(s.a.Component);C.propTypes={currentSidebarConfig:c.a.string.isRequired};var k=function(e){return{currentSidebarConfig:e.currentSidebarConfig}},O=function(e){return{changeSidebarActive:function(t){return e(Object(x.b)(t))}}};t.a=d()(k,O)(C)},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function a(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function s(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}function l(){}function c(e,t){var n={run:function(r){try{var i=e(t.getState(),r);(i!==n.props||n.error)&&(n.shouldComponentUpdate=!0,n.props=i,n.error=null)}catch(e){n.shouldComponentUpdate=!0,n.error=e}}};return n}function u(e){var t,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},u=r.getDisplayName,p=void 0===u?function(e){return"ConnectAdvanced("+e+")"}:u,h=r.methodName,y=void 0===h?"connectAdvanced":h,T=r.renderCountProp,S=void 0===T?void 0:T,C=r.shouldHandleStateChanges,k=void 0===C||C,O=r.storeKey,E=void 0===O?"store":O,P=r.withRef,j=void 0!==P&&P,I=s(r,["getDisplayName","methodName","renderCountProp","shouldHandleStateChanges","storeKey","withRef"]),_=E+"Subscription",R=w++,A=(t={},t[E]=v.storeShape,t[_]=v.subscriptionShape,t),N=(n={},n[_]=v.subscriptionShape,n);return function(t){(0,m.default)("function"==typeof t,"You must pass a component to the function returned by "+y+". Instead received "+JSON.stringify(t));var n=t.displayName||t.name||"Component",r=p(n),s=d({},I,{getDisplayName:p,methodName:y,renderCountProp:S,shouldHandleStateChanges:k,storeKey:E,withRef:j,displayName:r,wrappedComponentName:n,WrappedComponent:t}),u=function(n){function u(e,t){i(this,u);var a=o(this,n.call(this,e,t));return a.version=R,a.state={},a.renderCount=0,a.store=e[E]||t[E],a.propsMode=Boolean(e[E]),a.setWrappedInstance=a.setWrappedInstance.bind(a),(0,m.default)(a.store,'Could not find "'+E+'" in either the context or props of "'+r+'". Either wrap the root component in a <Provider>, or explicitly pass "'+E+'" as a prop to "'+r+'".'),a.initSelector(),a.initSubscription(),a}return a(u,n),u.prototype.getChildContext=function(){var e,t=this.propsMode?null:this.subscription;return e={},e[_]=t||this.context[_],e},u.prototype.componentDidMount=function(){k&&(this.subscription.trySubscribe(),this.selector.run(this.props),this.selector.shouldComponentUpdate&&this.forceUpdate())},u.prototype.componentWillReceiveProps=function(e){this.selector.run(e)},u.prototype.shouldComponentUpdate=function(){return this.selector.shouldComponentUpdate},u.prototype.componentWillUnmount=function(){this.subscription&&this.subscription.tryUnsubscribe(),this.subscription=null,this.notifyNestedSubs=l,this.store=null,this.selector.run=l,this.selector.shouldComponentUpdate=!1},u.prototype.getWrappedInstance=function(){return(0,m.default)(j,"To access the wrapped instance, you need to specify { withRef: true } in the options argument of the "+y+"() call."),this.wrappedInstance},u.prototype.setWrappedInstance=function(e){this.wrappedInstance=e},u.prototype.initSelector=function(){var t=e(this.store.dispatch,s);this.selector=c(t,this.store),this.selector.run(this.props)},u.prototype.initSubscription=function(){if(k){var e=(this.propsMode?this.props:this.context)[_];this.subscription=new b.default(this.store,e,this.onStateChange.bind(this)),this.notifyNestedSubs=this.subscription.notifyNestedSubs.bind(this.subscription)}},u.prototype.onStateChange=function(){this.selector.run(this.props),this.selector.shouldComponentUpdate?(this.componentDidUpdate=this.notifyNestedSubsOnComponentDidUpdate,this.setState(x)):this.notifyNestedSubs()},u.prototype.notifyNestedSubsOnComponentDidUpdate=function(){this.componentDidUpdate=void 0,this.notifyNestedSubs()},u.prototype.isSubscribed=function(){return Boolean(this.subscription)&&this.subscription.isSubscribed()},u.prototype.addExtraProps=function(e){if(!j&&!S&&(!this.propsMode||!this.subscription))return e;var t=d({},e);return j&&(t.ref=this.setWrappedInstance),S&&(t[S]=this.renderCount++),this.propsMode&&this.subscription&&(t[_]=this.subscription),t},u.prototype.render=function(){var e=this.selector;if(e.shouldComponentUpdate=!1,e.error)throw e.error;return(0,g.createElement)(t,this.addExtraProps(e.props))},u}(g.Component);return u.WrappedComponent=t,u.displayName=r,u.childContextTypes=N,u.contextTypes=A,u.propTypes=A,(0,f.default)(u,t)}}t.__esModule=!0;var d=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};t.default=u;var p=n(90),f=r(p),h=n(28),m=r(h),g=n(0),y=n(504),b=r(y),v=n(505),w=0,x={}},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(){var e=[],t=[];return{clear:function(){t=o,e=o},notify:function(){for(var n=e=t,r=0;r<n.length;r++)n[r]()},get:function(){return t},subscribe:function(n){var r=!0;return t===e&&(t=e.slice()),t.push(n),function(){r&&e!==o&&(r=!1,t===e&&(t=e.slice()),t.splice(t.indexOf(n),1))}}}}t.__esModule=!0;var o=null,a={notify:function(){}},s=function(){function e(t,n,i){r(this,e),this.store=t,this.parentSub=n,this.onStateChange=i,this.unsubscribe=null,this.listeners=a}return e.prototype.addNestedSub=function(e){return this.trySubscribe(),this.listeners.subscribe(e)},e.prototype.notifyNestedSubs=function(){this.listeners.notify()},e.prototype.isSubscribed=function(){return Boolean(this.unsubscribe)},e.prototype.trySubscribe=function(){this.unsubscribe||(this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.onStateChange):this.store.subscribe(this.onStateChange),this.listeners=i())},e.prototype.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null,this.listeners.clear(),this.listeners=a)},e}();t.default=s},function(e,t,n){"use strict";t.__esModule=!0,t.storeShape=t.subscriptionShape=void 0;var r=n(1),i=function(e){return e&&e.__esModule?e:{default:e}}(r);t.subscriptionShape=i.default.shape({trySubscribe:i.default.func.isRequired,tryUnsubscribe:i.default.func.isRequired,notifyNestedSubs:i.default.func.isRequired,isSubscribed:i.default.func.isRequired}),t.storeShape=i.default.shape({subscribe:i.default.func.isRequired,dispatch:i.default.func.isRequired,getState:i.default.func.isRequired})},function(e,t,n){"use strict";function r(e,t){return e===t?0!==e||0!==t||1/e===1/t:e!==e&&t!==t}function i(e,t){if(r(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),i=Object.keys(t);if(n.length!==i.length)return!1;for(var a=0;a<n.length;a++)if(!o.call(t,n[a])||!r(e[n[a]],t[n[a]]))return!1;return!0}t.__esModule=!0,t.default=i;var o=Object.prototype.hasOwnProperty},function(e,t,n){"use strict";function r(e){return"function"===typeof e?(0,s.wrapMapToPropsFunc)(e,"mapDispatchToProps"):void 0}function i(e){return e?void 0:(0,s.wrapMapToPropsConstant)(function(e){return{dispatch:e}})}function o(e){return e&&"object"===typeof e?(0,s.wrapMapToPropsConstant)(function(t){return(0,a.bindActionCreators)(e,t)}):void 0}t.__esModule=!0,t.whenMapDispatchToPropsIsFunction=r,t.whenMapDispatchToPropsIsMissing=i,t.whenMapDispatchToPropsIsObject=o;var a=n(61),s=n(141);t.default=[r,i,o]},function(e,t,n){function r(e){if(!a(e)||i(e)!=s)return!1;var t=o(e);if(null===t)return!0;var n=d.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&u.call(n)==p}var i=n(509),o=n(514),a=n(516),s="[object Object]",l=Function.prototype,c=Object.prototype,u=l.toString,d=c.hasOwnProperty,p=u.call(Object);e.exports=r},function(e,t,n){function r(e){return null==e?void 0===e?l:s:c&&c in Object(e)?o(e):a(e)}var i=n(143),o=n(512),a=n(513),s="[object Null]",l="[object Undefined]",c=i?i.toStringTag:void 0;e.exports=r},function(e,t,n){var r=n(511),i="object"==typeof self&&self&&self.Object===Object&&self,o=r||i||Function("return this")();e.exports=o},function(e,t,n){(function(t){var n="object"==typeof t&&t&&t.Object===Object&&t;e.exports=n}).call(t,n(37))},function(e,t,n){function r(e){var t=a.call(e,l),n=e[l];try{e[l]=void 0;var r=!0}catch(e){}var i=s.call(e);return r&&(t?e[l]=n:delete e[l]),i}var i=n(143),o=Object.prototype,a=o.hasOwnProperty,s=o.toString,l=i?i.toStringTag:void 0;e.exports=r},function(e,t){function n(e){return i.call(e)}var r=Object.prototype,i=r.toString;e.exports=n},function(e,t,n){var r=n(515),i=r(Object.getPrototypeOf,Object);e.exports=i},function(e,t){function n(e,t){return function(n){return e(t(n))}}e.exports=n},function(e,t){function n(e){return null!=e&&"object"==typeof e}e.exports=n},function(e,t,n){"use strict";function r(e){return"function"===typeof e?(0,o.wrapMapToPropsFunc)(e,"mapStateToProps"):void 0}function i(e){return e?void 0:(0,o.wrapMapToPropsConstant)(function(){return{}})}t.__esModule=!0,t.whenMapStateToPropsIsFunction=r,t.whenMapStateToPropsIsMissing=i;var o=n(141);t.default=[r,i]},function(e,t,n){"use strict";function r(e,t,n){return s({},n,e,t)}function i(e){return function(t,n){var r=(n.displayName,n.pure),i=n.areMergedPropsEqual,o=!1,a=void 0;return function(t,n,s){var l=e(t,n,s);return o?r&&i(l,a)||(a=l):(o=!0,a=l),a}}}function o(e){return"function"===typeof e?i(e):void 0}function a(e){return e?void 0:function(){return r}}t.__esModule=!0;var s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};t.defaultMergeProps=r,t.wrapMergePropsFunc=i,t.whenMergePropsIsFunction=o,t.whenMergePropsIsOmitted=a;var l=n(142);!function(e){e&&e.__esModule}(l);t.default=[o,a]},function(e,t,n){"use strict";function r(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}function i(e,t,n,r){return function(i,o){return n(e(i,o),t(r,o),o)}}function o(e,t,n,r,i){function o(i,o){return h=i,m=o,g=e(h,m),y=t(r,m),b=n(g,y,m),f=!0,b}function a(){return g=e(h,m),t.dependsOnOwnProps&&(y=t(r,m)),b=n(g,y,m)}function s(){return e.dependsOnOwnProps&&(g=e(h,m)),t.dependsOnOwnProps&&(y=t(r,m)),b=n(g,y,m)}function l(){var t=e(h,m),r=!p(t,g);return g=t,r&&(b=n(g,y,m)),b}function c(e,t){var n=!d(t,m),r=!u(e,h);return h=e,m=t,n&&r?a():n?s():r?l():b}var u=i.areStatesEqual,d=i.areOwnPropsEqual,p=i.areStatePropsEqual,f=!1,h=void 0,m=void 0,g=void 0,y=void 0,b=void 0;return function(e,t){return f?c(e,t):o(e,t)}}function a(e,t){var n=t.initMapStateToProps,a=t.initMapDispatchToProps,s=t.initMergeProps,l=r(t,["initMapStateToProps","initMapDispatchToProps","initMergeProps"]),c=n(e,l),u=a(e,l),d=s(e,l);return(l.pure?o:i)(c,u,d,e,l)}t.__esModule=!0,t.impureFinalPropsSelectorFactory=i,t.pureFinalPropsSelectorFactory=o,t.default=a;var s=n(520);!function(e){e&&e.__esModule}(s)},function(e,t,n){"use strict";function r(e,t,n){if(!e)throw new Error("Unexpected value for "+t+" in "+n+".");"mapStateToProps"!==t&&"mapDispatchToProps"!==t||e.hasOwnProperty("dependsOnOwnProps")||(0,a.default)("The selector for "+t+" of "+n+" did not specify a value for dependsOnOwnProps.")}function i(e,t,n,i){r(e,"mapStateToProps",i),r(t,"mapDispatchToProps",i),r(n,"mergeProps",i)}t.__esModule=!0,t.default=i;var o=n(144),a=function(e){return e&&e.__esModule?e:{default:e}}(o)},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(1),c=n.n(l),u=n(22),d=n.n(u),p=n(522),f=n(19),h=n(523),m=(n.n(h),n(58)),g=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),y=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),g(t,[{key:"render",value:function(){var e=this;return s.a.createElement(f.a,{xsHidden:!0,md:1,className:"sidebar"},s.a.createElement(f.e,{bsStyle:"pills",stacked:!0,navbar:!0},this.props.navItems.map(function(t,n){return s.a.createElement(p.a,Object.assign({key:n},{navItem:t,navActive:t.id===e.props.activeNavItem,sidebarScroll:e.props.scrollToComponent}))})))}}]),t}(s.a.Component);y.propTypes={navItems:c.a.array.isRequired,activeNavItem:c.a.string.isRequired,scrollToComponent:c.a.func.isRequired};var b=function(e){return{navItems:e.sidebarNavItems,activeNavItem:e.sidebarActiveNavItem}},v=function(e){return{changeSidebarActive:function(t){return e(Object(m.b)(t))}}};t.a=d()(b,v)(y)},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(1),c=n.n(l),u=n(19),d=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"handleSelect",value:function(e){this.props.sidebarScroll(e)}},{key:"render",value:function(){var e=this;return s.a.createElement(u.f,{className:this.props.navActive?"active":"normal",activeKey:this.props.navItem.id,onSelect:function(){return e.handleSelect(e.props.navItem.id)}},this.props.navItem.name)}}]),t}(s.a.Component);p.propTypes={navItem:c.a.object.isRequired,navActive:c.a.bool.isRequired,sidebarScroll:c.a.func.isRequired},t.a=p},function(e,t){},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(1),c=n.n(l),u=n(22),d=n.n(u),p=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),f=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),p(t,[{key:"render",value:function(){return s.a.createElement("div",{ref:this.refs.summaryRef},this.props.currentSummaryComponent)}}]),t}(s.a.Component);f.propTypes={currentSummaryComponent:c.a.object.isRequired};var h=function(e){return{currentSummaryComponent:e.currentSummaryComponent}};t.a=d()(h,null)(f)},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(1),c=n.n(l),u=n(22),d=n.n(u),p=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),f=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),p(t,[{key:"render",value:function(){return this.props.currentScreenshotComponent}}]),t}(s.a.Component);f.propTypes={currentScreenshotComponent:c.a.object};var h=function(e){return{currentScreenshotComponent:e.currentScreenshotComponent}};t.a=d()(h,null)(f)},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(1),c=n.n(l),u=n(22),d=n.n(u),p=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),f=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),p(t,[{key:"render",value:function(){return this.props.currentVideoComponent}}]),t}(s.a.Component);f.propTypes={currentVideoComponent:c.a.object};var h=function(e){return{currentVideoComponent:e.currentVideoComponent}};t.a=d()(h,null)(f)},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(1),c=n.n(l),u=n(22),d=n.n(u),p=n(19),f=n(528),h=(n.n(f),n(58)),m=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),g=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),m(t,[{key:"handleSelect",value:function(e){this.props.changeSourceCodeComponent(e)}},{key:"render",value:function(){var e=this;return s.a.createElement("div",null,s.a.createElement("hr",{id:"code"}),s.a.createElement("h2",null,this.props.currentPage," Source Code"),s.a.createElement(p.b,{bsStyle:"default",title:this.props.sourceCodeOptions[this.props.activeSourceCodeNumber],key:0,id:"dropdown-basic-0"},this.props.sourceCodeOptions.map(function(t,n){return n===e.props.activeSourceCodeNumber?s.a.createElement(p.d,{eventKey:n,"data-val":t,key:n,active:!0,onSelect:function(){return e.handleSelect(n)}},t):s.a.createElement(p.d,{eventKey:n,"data-val":t,key:n,onSelect:function(){return e.handleSelect(n)}},t)})),s.a.createElement("br",null),s.a.createElement("div",{id:"active-source"},this.props.activeSourceCodeComponent))}}]),t}(s.a.Component);g.propTypes={currentPage:c.a.string.isRequired,sourceCodeOptions:c.a.array.isRequired,activeSourceCodeNumber:c.a.number.isRequired,activeSourceCodeComponent:c.a.object.isRequired};var y=function(e){return{sourceCodeOptions:e.sourceCodeOptions,activeSourceCodeComponent:e.activeSourceCodeComponent,activeSourceCodeNumber:e.activeSourceCodeNumber,currentPage:e.currentPage}},b=function(e){return{changeSourceCodeComponent:function(t){return e(Object(h.c)(t))}}};t.a=d()(y,b)(g)},function(e,t,n){(function(t){var n="undefined"!=typeof window?window:"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},r=function(){var e=/\blang(?:uage)?-([\w-]+)\b/i,t=0,r=n.Prism={manual:n.Prism&&n.Prism.manual,disableWorkerMessageHandler:n.Prism&&n.Prism.disableWorkerMessageHandler,util:{encode:function(e){return e instanceof i?new i(e.type,r.util.encode(e.content),e.alias):"Array"===r.util.type(e)?e.map(r.util.encode):e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).match(/\[object (\w+)\]/)[1]},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++t}),e.__id},clone:function(e,t){var n=r.util.type(e);switch(t=t||{},n){case"Object":if(t[r.util.objId(e)])return t[r.util.objId(e)];var i={};t[r.util.objId(e)]=i;for(var o in e)e.hasOwnProperty(o)&&(i[o]=r.util.clone(e[o],t));return i;case"Array":if(t[r.util.objId(e)])return t[r.util.objId(e)];var i=[];return t[r.util.objId(e)]=i,e.forEach(function(e,n){i[n]=r.util.clone(e,t)}),i}return e}},languages:{extend:function(e,t){var n=r.util.clone(r.languages[e]);for(var i in t)n[i]=t[i];return n},insertBefore:function(e,t,n,i){i=i||r.languages;var o=i[e];if(2==arguments.length){n=arguments[1];for(var a in n)n.hasOwnProperty(a)&&(o[a]=n[a]);return o}var s={};for(var l in o)if(o.hasOwnProperty(l)){if(l==t)for(var a in n)n.hasOwnProperty(a)&&(s[a]=n[a]);s[l]=o[l]}var c=i[e];return i[e]=s,r.languages.DFS(r.languages,function(t,n){n===c&&t!=e&&(this[t]=s)}),s},DFS:function(e,t,n,i){i=i||{};for(var o in e)e.hasOwnProperty(o)&&(t.call(e,o,e[o],n||o),"Object"!==r.util.type(e[o])||i[r.util.objId(e[o])]?"Array"!==r.util.type(e[o])||i[r.util.objId(e[o])]||(i[r.util.objId(e[o])]=!0,r.languages.DFS(e[o],t,o,i)):(i[r.util.objId(e[o])]=!0,r.languages.DFS(e[o],t,null,i)))}},plugins:{},highlightAll:function(e,t){r.highlightAllUnder(document,e,t)},highlightAllUnder:function(e,t,n){var i={callback:n,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};r.hooks.run("before-highlightall",i);for(var o,a=i.elements||e.querySelectorAll(i.selector),s=0;o=a[s++];)r.highlightElement(o,!0===t,i.callback)},highlightElement:function(t,i,o){for(var a,s,l=t;l&&!e.test(l.className);)l=l.parentNode;l&&(a=(l.className.match(e)||[,""])[1].toLowerCase(),s=r.languages[a]),t.className=t.className.replace(e,"").replace(/\s+/g," ")+" language-"+a,t.parentNode&&(l=t.parentNode,/pre/i.test(l.nodeName)&&(l.className=l.className.replace(e,"").replace(/\s+/g," ")+" language-"+a));var c=t.textContent,u={element:t,language:a,grammar:s,code:c};if(r.hooks.run("before-sanity-check",u),!u.code||!u.grammar)return u.code&&(r.hooks.run("before-highlight",u),u.element.textContent=u.code,r.hooks.run("after-highlight",u)),void r.hooks.run("complete",u);if(r.hooks.run("before-highlight",u),i&&n.Worker){var d=new Worker(r.filename);d.onmessage=function(e){u.highlightedCode=e.data,r.hooks.run("before-insert",u),u.element.innerHTML=u.highlightedCode,o&&o.call(u.element),r.hooks.run("after-highlight",u),r.hooks.run("complete",u)},d.postMessage(JSON.stringify({language:u.language,code:u.code,immediateClose:!0}))}else u.highlightedCode=r.highlight(u.code,u.grammar,u.language),r.hooks.run("before-insert",u),u.element.innerHTML=u.highlightedCode,o&&o.call(t),r.hooks.run("after-highlight",u),r.hooks.run("complete",u)},highlight:function(e,t,n){var o={code:e,grammar:t,language:n};return r.hooks.run("before-tokenize",o),o.tokens=r.tokenize(o.code,o.grammar),r.hooks.run("after-tokenize",o),i.stringify(r.util.encode(o.tokens),o.language)},matchGrammar:function(e,t,n,i,o,a,s){var l=r.Token;for(var c in n)if(n.hasOwnProperty(c)&&n[c]){if(c==s)return;var u=n[c];u="Array"===r.util.type(u)?u:[u];for(var d=0;d<u.length;++d){var p=u[d],f=p.inside,h=!!p.lookbehind,m=!!p.greedy,g=0,y=p.alias;if(m&&!p.pattern.global){var b=p.pattern.toString().match(/[imuy]*$/)[0];p.pattern=RegExp(p.pattern.source,b+"g")}p=p.pattern||p;for(var v=i,w=o;v<t.length;w+=t[v].length,++v){var x=t[v];if(t.length>e.length)return;if(!(x instanceof l)){if(m&&v!=t.length-1){p.lastIndex=w;var T=p.exec(e);if(!T)break;for(var S=T.index+(h?T[1].length:0),C=T.index+T[0].length,k=v,O=w,E=t.length;E>k&&(C>O||!t[k].type&&!t[k-1].greedy);++k)O+=t[k].length,S>=O&&(++v,w=O);if(t[v]instanceof l)continue;P=k-v,x=e.slice(w,O),T.index-=w}else{p.lastIndex=0;var T=p.exec(x),P=1}if(T){h&&(g=T[1]?T[1].length:0);var S=T.index+g,T=T[0].slice(g),C=S+T.length,j=x.slice(0,S),I=x.slice(C),_=[v,P];j&&(++v,w+=j.length,_.push(j));var R=new l(c,f?r.tokenize(T,f):T,y,T,m);if(_.push(R),I&&_.push(I),Array.prototype.splice.apply(t,_),1!=P&&r.matchGrammar(e,t,n,v,w,!0,c),a)break}else if(a)break}}}}},tokenize:function(e,t){var n=[e],i=t.rest;if(i){for(var o in i)t[o]=i[o];delete t.rest}return r.matchGrammar(e,n,t,0,0,!1),n},hooks:{all:{},add:function(e,t){var n=r.hooks.all;n[e]=n[e]||[],n[e].push(t)},run:function(e,t){var n=r.hooks.all[e];if(n&&n.length)for(var i,o=0;i=n[o++];)i(t)}}},i=r.Token=function(e,t,n,r,i){this.type=e,this.content=t,this.alias=n,this.length=0|(r||"").length,this.greedy=!!i};if(i.stringify=function(e,t,n){if("string"==typeof e)return e;if("Array"===r.util.type(e))return e.map(function(n){return i.stringify(n,t,e)}).join("");var o={type:e.type,content:i.stringify(e.content,t,n),tag:"span",classes:["token",e.type],attributes:{},language:t,parent:n};if(e.alias){var a="Array"===r.util.type(e.alias)?e.alias:[e.alias];Array.prototype.push.apply(o.classes,a)}r.hooks.run("wrap",o);var s=Object.keys(o.attributes).map(function(e){return e+'="'+(o.attributes[e]||"").replace(/"/g,"&quot;")+'"'}).join(" ");return"<"+o.tag+' class="'+o.classes.join(" ")+'"'+(s?" "+s:"")+">"+o.content+"</"+o.tag+">"},!n.document)return n.addEventListener?(r.disableWorkerMessageHandler||n.addEventListener("message",function(e){var t=JSON.parse(e.data),i=t.language,o=t.code,a=t.immediateClose;n.postMessage(r.highlight(o,r.languages[i],i)),a&&n.close()},!1),n.Prism):n.Prism;var o=document.currentScript||[].slice.call(document.getElementsByTagName("script")).pop();return o&&(r.filename=o.src,r.manual||o.hasAttribute("data-manual")||("loading"!==document.readyState?window.requestAnimationFrame?window.requestAnimationFrame(r.highlightAll):window.setTimeout(r.highlightAll,16):document.addEventListener("DOMContentLoaded",r.highlightAll))),n.Prism}();"undefined"!=typeof e&&e.exports&&(e.exports=r),"undefined"!=typeof t&&(t.Prism=r),r.languages.markup={comment:/<!--[\s\S]*?-->/,prolog:/<\?[\s\S]+?\?>/,doctype:/<!DOCTYPE[\s\S]+?>/i,cdata:/<!\[CDATA\[[\s\S]*?]]>/i,tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/i,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/i,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"attr-value":{pattern:/=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+)/i,inside:{punctuation:[/^=/,{pattern:/(^|[^\\])["']/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:/&#?[\da-z]{1,8};/i},r.languages.markup.tag.inside["attr-value"].inside.entity=r.languages.markup.entity,r.hooks.add("wrap",function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"))}),r.languages.xml=r.languages.markup,r.languages.html=r.languages.markup,r.languages.mathml=r.languages.markup,r.languages.svg=r.languages.markup,r.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:/@[\w-]+?.*?(?:;|(?=\s*\{))/i,inside:{rule:/@[\w-]+/}},url:/url\((?:(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|.*?)\)/i,selector:/[^{}\s][^{};]*?(?=\s*\{)/,string:{pattern:/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},property:/[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*(?=\s*:)/i,important:/\B!important\b/i,function:/[-a-z0-9]+(?=\()/i,punctuation:/[(){};:]/},r.languages.css.atrule.inside.rest=r.languages.css,r.languages.markup&&(r.languages.insertBefore("markup","tag",{style:{pattern:/(<style[\s\S]*?>)[\s\S]*?(?=<\/style>)/i,lookbehind:!0,inside:r.languages.css,alias:"language-css",greedy:!0}}),r.languages.insertBefore("inside","attr-value",{"style-attr":{pattern:/\s*style=("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/i,inside:{"attr-name":{pattern:/^\s*style/i,inside:r.languages.markup.tag.inside},punctuation:/^\s*=\s*['"]|['"]\s*$/,"attr-value":{pattern:/.+/i,inside:r.languages.css}},alias:"language-css"}},r.languages.markup.tag)),r.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,boolean:/\b(?:true|false)\b/,function:/[a-z0-9_]+(?=\()/i,number:/\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,punctuation:/[{}[\];(),.:]/},r.languages.javascript=r.languages.extend("clike",{"class-name":[r.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])[_$A-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\.(?:prototype|constructor))/,lookbehind:!0}],keyword:[{pattern:/((?:^|})\s*)(?:catch|finally)\b/,lookbehind:!0},/\b(?:as|async|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\b/],number:/\b(?:(?:0[xX][\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+)n?|\d+n|NaN|Infinity)\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee][+-]?\d+)?/,function:/[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*\(|\.(?:apply|bind|call)\()/,operator:/-[-=]?|\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\|[|=]?|\*\*?=?|\/=?|~|\^=?|%=?|\?|\.{3}/}),r.languages.javascript["class-name"][0].pattern=/(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/,r.languages.insertBefore("javascript","keyword",{regex:{pattern:/((?:^|[^$\w\xA0-\uFFFF."'\])\s])\s*)\/(\[[^\]\r\n]+]|\\.|[^\/\\\[\r\n])+\/[gimyu]{0,5}(?=\s*($|[\r\n,.;})\]]))/,lookbehind:!0,greedy:!0},"function-variable":{pattern:/[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*[=:]\s*(?:function\b|(?:\([^()]*\)|[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/i,alias:"function"},constant:/\b[A-Z][A-Z\d_]*\b/}),r.languages.insertBefore("javascript","string",{"template-string":{pattern:/`(?:\\[\s\S]|\${[^}]+}|[^\\`])*`/,greedy:!0,inside:{interpolation:{pattern:/\${[^}]+}/,inside:{"interpolation-punctuation":{pattern:/^\${|}$/,alias:"punctuation"},rest:r.languages.javascript}},string:/[\s\S]+/}}}),r.languages.markup&&r.languages.insertBefore("markup","tag",{script:{pattern:/(<script[\s\S]*?>)[\s\S]*?(?=<\/script>)/i,lookbehind:!0,inside:r.languages.javascript,alias:"language-javascript",greedy:!0}}),r.languages.js=r.languages.javascript,r.languages.c=r.languages.extend("clike",{keyword:/\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\b/,operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*\/%&|^!=<>]=?/,number:/(?:\b0x[\da-f]+|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?)[ful]*/i}),r.languages.insertBefore("c","string",{macro:{pattern:/(^\s*)#\s*[a-z]+(?:[^\r\n\\]|\\(?:\r\n|[\s\S]))*/im,lookbehind:!0,alias:"property",inside:{string:{pattern:/(#\s*include\s*)(?:<.+?>|("|')(?:\\?.)+?\2)/,lookbehind:!0},directive:{pattern:/(#\s*)\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\b/,lookbehind:!0,alias:"keyword"}}},constant:/\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\b/}),delete r.languages.c["class-name"],delete r.languages.c.boolean,r.languages.cpp=r.languages.extend("c",{keyword:/\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/,boolean:/\b(?:true|false)\b/,operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*\/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/}),r.languages.insertBefore("cpp","keyword",{"class-name":{pattern:/(class\s+)\w+/i,lookbehind:!0}}),r.languages.insertBefore("cpp","string",{"raw-string":{pattern:/R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,alias:"string",greedy:!0}}),function(e){e.languages.ruby=e.languages.extend("clike",{comment:[/#.*/,{pattern:/^=begin(?:\r?\n|\r)(?:.*(?:\r?\n|\r))*?=end/m,greedy:!0}],keyword:/\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\b/});var t={pattern:/#\{[^}]+\}/,inside:{delimiter:{pattern:/^#\{|\}$/,alias:"tag"},rest:e.languages.ruby}};e.languages.insertBefore("ruby","keyword",{regex:[{pattern:/%r([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1[gim]{0,3}/,greedy:!0,inside:{interpolation:t}},{pattern:/%r\((?:[^()\\]|\\[\s\S])*\)[gim]{0,3}/,greedy:!0,inside:{interpolation:t}},{pattern:/%r\{(?:[^#{}\\]|#(?:\{[^}]+\})?|\\[\s\S])*\}[gim]{0,3}/,greedy:!0,inside:{interpolation:t}},{pattern:/%r\[(?:[^\[\]\\]|\\[\s\S])*\][gim]{0,3}/,greedy:!0,inside:{interpolation:t}},{pattern:/%r<(?:[^<>\\]|\\[\s\S])*>[gim]{0,3}/,greedy:!0,inside:{interpolation:t}},{pattern:/(^|[^\/])\/(?!\/)(\[.+?]|\\.|[^\/\\\r\n])+\/[gim]{0,3}(?=\s*($|[\r\n,.;})]))/,lookbehind:!0,greedy:!0}],variable:/[@$]+[a-zA-Z_]\w*(?:[?!]|\b)/,symbol:{pattern:/(^|[^:]):[a-zA-Z_]\w*(?:[?!]|\b)/,lookbehind:!0}}),e.languages.insertBefore("ruby","number",{builtin:/\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\b/,constant:/\b[A-Z]\w*(?:[?!]|\b)/}),e.languages.ruby.string=[{pattern:/%[qQiIwWxs]?([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/,greedy:!0,inside:{interpolation:t}},{pattern:/%[qQiIwWxs]?\((?:[^()\\]|\\[\s\S])*\)/,greedy:!0,inside:{interpolation:t}},{pattern:/%[qQiIwWxs]?\{(?:[^#{}\\]|#(?:\{[^}]+\})?|\\[\s\S])*\}/,greedy:!0,inside:{interpolation:t}},{pattern:/%[qQiIwWxs]?\[(?:[^\[\]\\]|\\[\s\S])*\]/,greedy:!0,inside:{interpolation:t}},{pattern:/%[qQiIwWxs]?<(?:[^<>\\]|\\[\s\S])*>/,greedy:!0,inside:{interpolation:t}},{pattern:/("|')(?:#\{[^}]+\}|\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0,inside:{interpolation:t}}]}(r),r.languages.java=r.languages.extend("clike",{keyword:/\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\b/,number:/\b0b[01]+\b|\b0x[\da-f]*\.?[\da-fp-]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?[df]?/i,operator:{pattern:/(^|[^.])(?:<<=?|>>>?=?|->|([-+&|])\2|[?:~]|[-+*\/%&|^!=<>]=?)/m,lookbehind:!0}}),r.languages.insertBefore("java","function",{annotation:{alias:"punctuation",pattern:/(^|[^.])@\w+/,lookbehind:!0}}),r.languages.insertBefore("java","class-name",{generics:{pattern:/<\s*\w+(?:\.\w+)?(?:\s*,\s*\w+(?:\.\w+)?)*>/i,alias:"function",inside:{keyword:r.languages.java.keyword,punctuation:/[<>(),.:]/}}}),r.languages.python={comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0},"triple-quoted-string":{pattern:/("""|''')[\s\S]+?\1/,greedy:!0,alias:"string"},string:{pattern:/("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,greedy:!0},function:{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,lookbehind:!0},"class-name":{pattern:/(\bclass\s+)\w+/i,lookbehind:!0},keyword:/\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\b/,builtin:/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,boolean:/\b(?:True|False|None)\b/,number:/(?:\b(?=\d)|\B(?=\.))(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*\.?\d*|\.\d+)(?:e[+-]?\d+)?j?\b/i,operator:/[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]|\b(?:or|and|not)\b/,punctuation:/[{}[\];(),.:]/},r.languages.swift=r.languages.extend("clike",{string:{pattern:/("|')(\\(?:\((?:[^()]|\([^)]+\))+\)|\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0,inside:{interpolation:{pattern:/\\\((?:[^()]|\([^)]+\))+\)/,inside:{delimiter:{pattern:/^\\\(|\)$/,alias:"variable"}}}}},keyword:/\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\b/,number:/\b(?:[\d_]+(?:\.[\de_]+)?|0x[a-f0-9_]+(?:\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\b/i,constant:/\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\b/,atrule:/@\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\b/,builtin:/\b(?:[A-Z]\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\b/}),r.languages.swift.string.inside.interpolation.inside.rest=r.languages.swift,function(){function e(e,t){return Array.prototype.slice.call((t||document).querySelectorAll(e))}function t(e,t){return t=" "+t+" ",(" "+e.className+" ").replace(/[\n\t]/g," ").indexOf(t)>-1}function n(e,n,i){n="string"==typeof n?n:e.getAttribute("data-line");for(var a,s=n.replace(/\s+/g,"").split(","),l=+e.getAttribute("data-line-offset")||0,c=o()?parseInt:parseFloat,u=c(getComputedStyle(e).lineHeight),d=t(e,"line-numbers"),p=0;a=s[p++];){var f=a.split("-"),h=+f[0],m=+f[1]||h,g=e.querySelector('.line-highlight[data-range="'+a+'"]')||document.createElement("div");if(g.setAttribute("aria-hidden","true"),g.setAttribute("data-range",a),g.className=(i||"")+" line-highlight",d&&r.plugins.lineNumbers){var y=r.plugins.lineNumbers.getLine(e,h),b=r.plugins.lineNumbers.getLine(e,m);y&&(g.style.top=y.offsetTop+"px"),b&&(g.style.height=b.offsetTop-y.offsetTop+b.offsetHeight+"px")}else g.setAttribute("data-start",h),m>h&&g.setAttribute("data-end",m),g.style.top=(h-l-1)*u+"px",g.textContent=new Array(m-h+2).join(" \n");d?e.appendChild(g):(e.querySelector("code")||e).appendChild(g)}}function i(){var t=location.hash.slice(1);e(".temporary.line-highlight").forEach(function(e){e.parentNode.removeChild(e)});var r=(t.match(/\.([\d,-]+)$/)||[,""])[1];if(r&&!document.getElementById(t)){var i=t.slice(0,t.lastIndexOf(".")),o=document.getElementById(i);o&&(o.hasAttribute("data-line")||o.setAttribute("data-line",""),n(o,r,"temporary "),document.querySelector(".temporary.line-highlight").scrollIntoView())}}if("undefined"!=typeof self&&self.Prism&&self.document&&document.querySelector){var o=function(){var e;return function(){if("undefined"==typeof e){var t=document.createElement("div");t.style.fontSize="13px",t.style.lineHeight="1.5",t.style.padding=0,t.style.border=0,t.innerHTML="&nbsp;<br />&nbsp;",document.body.appendChild(t),e=38===t.offsetHeight,document.body.removeChild(t)}return e}}(),a=0;r.hooks.add("before-sanity-check",function(t){var n=t.element.parentNode,r=n&&n.getAttribute("data-line");if(n&&r&&/pre/i.test(n.nodeName)){var i=0;e(".line-highlight",n).forEach(function(e){i+=e.textContent.length,e.parentNode.removeChild(e)}),i&&/^( \n)+$/.test(t.code.slice(-i))&&(t.code=t.code.slice(0,-i))}}),r.hooks.add("complete",function e(o){var s=o.element.parentNode,l=s&&s.getAttribute("data-line");if(s&&l&&/pre/i.test(s.nodeName)){clearTimeout(a);var c=r.plugins.lineNumbers,u=o.plugins&&o.plugins.lineNumbers;t(s,"line-numbers")&&c&&!u?r.hooks.add("line-numbers",e):(n(s,l),a=setTimeout(i,1))}}),window.addEventListener("hashchange",i),window.addEventListener("resize",function(){var e=document.querySelectorAll("pre[data-line]");Array.prototype.forEach.call(e,function(e){n(e)})})}}(),function(){if("undefined"!=typeof self&&self.Prism&&self.document){var e="line-numbers",t=/\n(?!$)/g,n=function(e){var n=i(e),r=n["white-space"];if("pre-wrap"===r||"pre-line"===r){var o=e.querySelector("code"),a=e.querySelector(".line-numbers-rows"),s=e.querySelector(".line-numbers-sizer"),l=o.textContent.split(t);s||(s=document.createElement("span"),s.className="line-numbers-sizer",o.appendChild(s)),s.style.display="block",l.forEach(function(e,t){s.textContent=e||"\n";var n=s.getBoundingClientRect().height;a.children[t].style.height=n+"px"}),s.textContent="",s.style.display="none"}},i=function(e){return e?window.getComputedStyle?getComputedStyle(e):e.currentStyle||null:null};window.addEventListener("resize",function(){Array.prototype.forEach.call(document.querySelectorAll("pre."+e),n)}),r.hooks.add("complete",function(e){if(e.code){var i=e.element.parentNode,o=/\s*\bline-numbers\b\s*/;if(i&&/pre/i.test(i.nodeName)&&(o.test(i.className)||o.test(e.element.className))&&!e.element.querySelector(".line-numbers-rows")){o.test(e.element.className)&&(e.element.className=e.element.className.replace(o," ")),o.test(i.className)||(i.className+=" line-numbers");var a,s=e.code.match(t),l=s?s.length+1:1,c=new Array(l+1);c=c.join("<span></span>"),a=document.createElement("span"),a.setAttribute("aria-hidden","true"),a.className="line-numbers-rows",a.innerHTML=c,i.hasAttribute("data-start")&&(i.style.counterReset="linenumber "+(parseInt(i.getAttribute("data-start"),10)-1)),e.element.appendChild(a),n(i),r.hooks.run("line-numbers",e)}}}),r.hooks.add("line-numbers",function(e){e.plugins=e.plugins||{},e.plugins.lineNumbers=!0}),r.plugins.lineNumbers={getLine:function(t,n){if("PRE"===t.tagName&&t.classList.contains(e)){var r=t.querySelector(".line-numbers-rows"),i=parseInt(t.getAttribute("data-start"),10)||1,o=i+(r.children.length-1);i>n&&(n=i),n>o&&(n=o);var a=n-i;return r.children[a]}}}}}(),function(){if("undefined"!=typeof self&&self.Prism&&self.document){var e=[],t={},n=function(){};r.plugins.toolbar={};var i=r.plugins.toolbar.registerButton=function(n,r){var i;i="function"==typeof r?r:function(e){var t;return"function"==typeof r.onClick?(t=document.createElement("button"),t.type="button",t.addEventListener("click",function(){r.onClick.call(this,e)})):"string"==typeof r.url?(t=document.createElement("a"),t.href=r.url):t=document.createElement("span"),t.textContent=r.text,t},e.push(t[n]=i)},o=r.plugins.toolbar.hook=function(r){var i=r.element.parentNode;if(i&&/pre/i.test(i.nodeName)&&!i.parentNode.classList.contains("code-toolbar")){var o=document.createElement("div");o.classList.add("code-toolbar"),i.parentNode.insertBefore(o,i),o.appendChild(i);var a=document.createElement("div");a.classList.add("toolbar"),document.body.hasAttribute("data-toolbar-order")&&(e=document.body.getAttribute("data-toolbar-order").split(",").map(function(e){return t[e]||n})),e.forEach(function(e){var t=e(r);if(t){var n=document.createElement("div");n.classList.add("toolbar-item"),n.appendChild(t),a.appendChild(n)}}),o.appendChild(a)}};i("label",function(e){var t=e.element.parentNode;if(t&&/pre/i.test(t.nodeName)&&t.hasAttribute("data-label")){var n,r,i=t.getAttribute("data-label");try{r=document.querySelector("template#"+i)}catch(e){}return r?n=r.content:(t.hasAttribute("data-url")?(n=document.createElement("a"),n.href=t.getAttribute("data-url")):n=document.createElement("span"),n.textContent=i),n}}),r.hooks.add("complete",o)}}(),function(){"undefined"!=typeof self&&!self.Prism||"undefined"!=typeof t&&!t.Prism||r.hooks.add("wrap",function(e){"keyword"===e.type&&e.classes.push("keyword-"+e.content)})}(),function(){if("undefined"!=typeof self&&self.Prism&&self.document){if(!r.plugins.toolbar)return void console.warn("Show Languages plugin loaded before Toolbar plugin.");var e={html:"HTML",xml:"XML",svg:"SVG",mathml:"MathML",css:"CSS",clike:"C-like",javascript:"JavaScript",abap:"ABAP",actionscript:"ActionScript",apacheconf:"Apache Configuration",apl:"APL",applescript:"AppleScript",arff:"ARFF",asciidoc:"AsciiDoc",asm6502:"6502 Assembly",aspnet:"ASP.NET (C#)",autohotkey:"AutoHotkey",autoit:"AutoIt",shell:"Shell",basic:"BASIC",csharp:"C#",cpp:"C++",coffeescript:"CoffeeScript",csp:"Content-Security-Policy","css-extras":"CSS Extras",django:"Django/Jinja2",erb:"ERB",fsharp:"F#",gedcom:"GEDCOM",glsl:"GLSL",graphql:"GraphQL",http:"HTTP",hpkp:"HTTP Public-Key-Pins",hsts:"HTTP Strict-Transport-Security",ichigojam:"IchigoJam",inform7:"Inform 7",json:"JSON",jsonp:"JSONP",latex:"LaTeX",livescript:"LiveScript",lolcode:"LOLCODE","markup-templating":"Markup templating",matlab:"MATLAB",mel:"MEL",n4js:"N4JS",nasm:"NASM",nginx:"nginx",nsis:"NSIS",objectivec:"Objective-C",ocaml:"OCaml",opencl:"OpenCL",parigp:"PARI/GP",objectpascal:"Object Pascal",php:"PHP","php-extras":"PHP Extras",plsql:"PL/SQL",powershell:"PowerShell",properties:".properties",protobuf:"Protocol Buffers",q:"Q (kdb+ database)",jsx:"React JSX",tsx:"React TSX",renpy:"Ren'py",rest:"reST (reStructuredText)",sas:"SAS",sass:"Sass (Sass)",scss:"Sass (Scss)",sql:"SQL",soy:"Soy (Closure Template)",tap:"TAP",tt2:"Template Toolkit 2",typescript:"TypeScript",vbnet:"VB.Net",vhdl:"VHDL",vim:"vim","visual-basic":"Visual Basic",wasm:"WebAssembly",wiki:"Wiki markup",xeoracube:"XeoraCube",xojo:"Xojo (REALbasic)",xquery:"XQuery",yaml:"YAML"};r.plugins.toolbar.registerButton("show-language",function(t){var n=t.element.parentNode;if(n&&/pre/i.test(n.nodeName)){var r=n.getAttribute("data-language")||e[t.language]||t.language&&t.language.substring(0,1).toUpperCase()+t.language.substring(1);if(r){var i=document.createElement("span");return i.textContent=r,i}}})}}()}).call(t,n(37))},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(1),c=n.n(l),u=n(22),d=n.n(u),p=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),f=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),p(t,[{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("hr",{id:"links"}),s.a.createElement("h3",null,"Links"),s.a.createElement("div",{className:"row"},"\xa0\xa0\xa0",s.a.createElement("a",{href:this.props.currentLink,target:"_blank"},s.a.createElement("i",{className:"fa fa-github fa-4x",title:"Github Link"})),"\xa0\xa0\xa0",s.a.createElement("a",{href:this.props.currentDownload,target:"_blank",download:this.props.currentFileName},s.a.createElement("i",{className:"fa fa-download fa-4x",title:this.props.currentDownloadName}))),s.a.createElement("br",null))}}]),t}(s.a.Component);f.propTypes={currentLink:c.a.string.isRequired,currentDownload:c.a.string.isRequired,currentDownloadName:c.a.string.isRequired,currentFileName:c.a.string.isRequired};var h=function(e){return{currentLink:e.currentLink,currentDownload:e.currentDownload,currentDownloadName:e.currentDownloadName,currentFileName:e.currentFileName}};t.a=d()(h,null)(f)},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(531),c=(n.n(l),function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()),u=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),c(t,[{key:"render",value:function(){return s.a.createElement("div",{className:"footer text-center"},"Copyright \xa9 Akshay Subramaniam -- Email Akshay.SG14@gmail.com for any issues")}}]),t}(s.a.Component);t.a=u},function(e,t){},function(e,t){},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(1),c=n.n(l),u=n(22),d=n.n(u),p=n(19),f=n(58),h=n(534),m=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),g=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),m(t,[{key:"handleSelect",value:function(e){this.props.changePage(e),window.scroll({top:0,behavior:"instant"})}},{key:"render",value:function(){var e=this;return s.a.createElement(p.g,{inverse:!0,collapseOnSelect:!0,fixedTop:!0,fluid:!0,className:"navbar-toggleable-md"},s.a.createElement(p.g.Header,null,s.a.createElement(p.g.Brand,null,s.a.createElement("p",null,"Apps")),s.a.createElement(p.g.Toggle,null)),s.a.createElement(p.g.Collapse,null,s.a.createElement(p.e,{bsStyle:"tabs",className:"nav-fill"},this.props.navItems.map(function(t,n){return s.a.createElement(h.a,Object.assign({key:n},{navItem:t,navActive:n===e.props.activeNavItem,onSelect:e.handleSelect.bind(e)}))}))))}}]),t}(s.a.Component);g.propTypes={navItems:c.a.array.isRequired,activeNavItem:c.a.number.isRequired};var y=function(e){return{navItems:e.mainNavItems,activeNavItem:e.mainActiveNavItem}},b=function(e){return{changePage:function(t){return e(Object(f.a)(t))}}},v=d()(y,b)(g);t.a=v},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==typeof t&&"function"!==typeof t?e:t}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var a=n(0),s=n.n(a),l=n(1),c=n.n(l),u=n(19),d=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),p=function(e){function t(){return r(this,t),i(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){var e=this;return s.a.createElement(u.f,{className:"navbar-item"+(this.props.navActive?" active":""),activeKey:this.props.navItem.id,onSelect:function(){return e.props.onSelect(e.props.navItem.id)}},this.props.navItem.name)}}]),t}(s.a.Component);p.propTypes={navItem:c.a.object.isRequired,navActive:c.a.bool.isRequired,onSelect:c.a.func.isRequired},t.a=p}]);
//# sourceMappingURL=main.246e7714.js.map